{"version":3,"sources":["main/m2-bll/app-reducer.ts","main/m1-ui/common/ErrorSnackbar/ErrorSnackbar.tsx","main/m1-ui/utils/error-utils.ts","main/m3-dal/register-api.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/common/Preloader/Preloader.tsx","features/f1-auth/a2-registration/RegistrationNew.tsx","main/m1-ui/pages/RegistrationPage.tsx","main/m3-dal/password-recovery-api.ts","main/m2-bll/password-reset-reducer.ts","features/f1-auth/a3-password_recovery/ResetPassword-New.tsx","main/m1-ui/pages/PasswordResetPage.tsx","main/m2-bll/password-gereration-reducer.ts","features/f1-auth/a3-password_recovery/GenerateNewPassword-New.tsx","main/m1-ui/pages/PasswordGenerationPage.tsx","main/m3-dal/login-api.ts","main/m2-bll/login-reducer.ts","main/m2-bll/profile-reducer.ts","main/m1-ui/pages/ProfilePage.tsx","main/m1-ui/header/HeaderNavbar.tsx","features/f1-auth/a1-login/LoginNew.tsx","main/m1-ui/pages/LoginPage.tsx","main/m3-dal/tableApi.ts","main/m2-bll/table-reduser.ts","main/m1-ui/common/Modal/modal.tsx","main/m1-ui/common/Modal/modalInput.tsx","features/f2-table/a2-TableOfCards/TableCards.tsx","main/m1-ui/common/Modal/addNewCardModal.tsx","features/f2-table/a2-TableOfCards/CardsPage.tsx","main/m1-ui/pages/CardsPage.tsx","main/m1-ui/common/Modal/modalInput2.tsx","features/f2-table/a1-TableOfPacks/TablePacks.tsx","main/m1-ui/common/Paginator/Paginator.tsx","features/f2-table/a1-TableOfPacks/PacksPage.tsx","main/m1-ui/pages/PacksPage.tsx","main/m1-ui/pages/Video.tsx","main/m1-ui/pages/Files.tsx","main/m1-ui/pages/getFile.ts","features/f3-play/Card.tsx","features/f3-play/Play.tsx","main/m1-ui/App.tsx","serviceWorker.ts","main/m2-bll/store.ts","index.tsx","main/m1-ui/header/headerNavbar.module.css","features/f2-table/a1-TableOfPacks/css.module.css","features/f2-table/a2-TableOfCards/css.module.css","main/m1-ui/common/Paginator/css.module.css"],"names":["initialState","setAppErrorAC","error","type","Alert","props","elevation","variant","ErrorSnackbar","useSelector","state","app","dispatch","useDispatch","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","handleServerNetworkError","response","data","message","status","instance","axios","create","baseURL","withCredentials","registrationApi","post","isRegistered","isLoading","setIsRegistratedAC","value","setIsLoadingAC","Preloader","className","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegistrationNew","classes","registrationPage","checkEmail","checkPassword","formik","useFormik","validate","values","test","email","password","initialValues","onSubmit","then","res","catch","setTimeout","registrationTC","to","Container","component","maxWidth","CssBaseline","Avatar","handleSubmit","TextField","required","fullWidth","id","name","autoComplete","autoFocus","label","getFieldProps","errors","Button","Grid","container","item","xs","Box","mt","RegistrationPage","passwordRecoveryApi","newPasswordData","loading","setLoadingAC","ResetPasswordNew","passwordResetPage","from","alert","info","PasswordResetPage","GenerateNewPasswordNew","passwordGenerationPage","useParams","history","useHistory","push","setNewPasswordTC","resetPasswordToken","PasswordGenerationPage","authAPI","delete","put","isLoginIn","UserData","isAdmin","rememberMe","token","tokenDeathTime","__v","_id","success","setIsLoggedInAC","setUsersDataAC","Userdata","isInitialized","isInitializedTC","console","log","ProfilePage","auth","profilePage","useState","newName","setNewName","newAvatar","setAvatar","useEffect","exact","src","alt","style","height","onChange","currentTarget","size","onClick","updatedUser","HeaderNavbar","location","useLocation","logoutHandler","useCallback","pathname","length","menu","menu__list","menu__group","menu__link","menu__link_logout","LoginNew","FormControlLabel","control","Checkbox","checked","LoginPage","TableApi","page","get","cardsPack_id","packs","cards","paginator","currentPage","packsCount","startPage","endPage","getPacksTC","setPacksAC","cardPacks","setPacksTotalCountAC","cardPacksTotalCount","updatePackTC","getCardsTC","setCardsAC","updateCardTC","packId","gradeCardTC","updatedGrade","count","setStartPagePaginatorAC","setEndPagePaginatorAC","setCurrentPagerAC","rand","Math","round","random","getModalStyle","top","left","transform","createStyles","position","background","border","boxShadow","shadows","padding","SimpleModal","text","setModalOpen","onButtonClick","React","modalStyle","body","justifyContent","Modal","aria-labelledby","aria-describedby","SimpleModalInput","title","setTitle","Buttons","deleteOpen","setDeleteOpen","update","setUpdateOpen","buttonsData","map","i","onclick","cardId","PackId","question","card","ColumnsName","Content","RowContent","Data","answer","grade","updated","shots","TableForCards","Table","HeaderTable","columnsName","ContentTable","rowContent","AddNewCardModal","setQuestion","setAnswer","CardPage","CardsData","table","checkAuth","addCardModalOpen","setAddCardModalOpen","deleteCardTC","CardsPage","SimpleUpdatePackInput","deckCover","setGrade","rating","setRating","setName","Rating","newValue","InputLabel","Number","Handler","e","cardsCount","TableForPacks","Paginator","startValue","buttons","maxPages","Main","Pagination","goStart","b","goPage","endValue","goFinish","PackPage","PacksData","paginatorData","ceil","addOpen","setAddModalOpen","cardsPack","PacksPage","Video","fileURL","videoRef","useRef","duration","setDuration","controls","setControls","currentTime","setCurrentTime","setInterval","current","play","flexFlow","ref","pause","requestFullscreen","volume","playbackRate","frameBorder","allow","allowFullScreen","Files","n","inRef","code","setCode","base64","setBase64","setText","file","setFile","setFileURL","file64","setFile64","fileData","setFileData","accept","multiple","lastModified","toFixed","reader","FileReader","formData","FormData","newFile","target","files","window","URL","createObjectURL","append","onloadend","result","readAsDataURL","readAsText","click","fileName","link","document","createElement","download","appendChild","removeChild","writeFile","url","responseType","blob","Blob","downloadUrl","setAttribute","remove","root","media","paddingTop","expand","marginLeft","transition","transitions","shortest","expandOpen","red","PlayCard","cardData","totalCards","setCurrentCardNumber","currentCardNumber","gradeButton","expanded","setExpanded","onGradeButtonPush","card_id","Card","CardHeader","defaultValue","precision","readOnly","subheader","CardMedia","image","CardContent","ButtonGroup","aria-label","CardActions","disableSpacing","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Play","App","path","render","Boolean","hostname","match","rootReducer","combineReducers","action","CopyState","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b1862aad.chunk.js","sourcesContent":["const initialState: InitialStateType = {\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case'APP/SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\r\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\r\nexport const setAppInitializedAC = (isInitialized:  boolean) => ({ type: 'APP/SET-INITIALIZED', isInitialized } as const)\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | SetAppInitializedActionType\r\n\r\n\r\nexport type InitialStateType = any\r\n\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reducer\";\r\n\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = !!error ;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType, setAppStatusAC} from '../../m2-bll/app-reducer'\r\n\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const registrationApi = {\r\n    setRegister(data:RegistretionDataType) {\r\n        const promise = instance.post('auth/register',data );\r\n        return promise;\r\n    }\r\n}\r\n\r\n\r\nexport type RegistretionDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n","import {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {registrationApi, RegistretionDataType} from \"../m3-dal/register-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isRegistered: false,\r\n    isLoading:false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-REGISTATED':\r\n            return {...state, isRegistered: action.value}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\nexport const registrationTC = (data: RegistretionDataType) => (dispatch: ThunkDispatch) => {\r\n    registrationApi.setRegister(data)\r\n        .then(res => {\r\n            dispatch(setIsRegistratedAC(true))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        dispatch(setIsLoadingAC(false))\r\n        handleServerNetworkError(error, dispatch);\r\n        setTimeout(() => dispatch(setAppErrorAC(null)), 3000);\r\n\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\nexport const setIsRegistratedAC = (value: boolean): setIsRegistratedActionType =>\r\n    ({type: 'SET-IS-REGISTRATED', value} as const)\r\nexport const setIsLoadingAC = (value: boolean): setIsLoadingActionType =>\r\n    ({type: 'SET-IS-LOADING', value} as const)\r\n\r\n\r\n// Types\r\n\r\nexport type InitialStateType = any\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\n\r\ntype ActionsType = setIsRegistratedActionType | setIsLoadingActionType\r\n\r\nexport type setIsRegistratedActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\nexport type setIsLoadingActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {registrationTC, setIsLoadingAC} from \"../../../main/m2-bll/registration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegistrationNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isRegistered);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isLoading);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n\r\n    const checkEmail = /\\S+@\\S+\\.\\S+/\r\n    const checkPassword = /(?=.*[0-9])(?=.*[a-z])[0-9a-z]{8,}/\r\n\r\n    const formik = useFormik({validate: (values) => {\r\n            if (checkEmail.test(values.email) === false) {\r\n                return {\r\n                    email: 'Please enter your email'\r\n                }\r\n            }\r\n            if (checkPassword.test(values.password) === false) {\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            let data = {\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n            dispatch(setIsLoadingAC(true))\r\n            dispatch(registrationTC(data))\r\n        },\r\n    });\r\n\r\n\r\n    if (isRegistered === true) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (isLoading === true ? <Preloader/>:\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/login\"} >\r\n                                Already have an account? Sign In\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport RegisterPage from \"../../../features/f1-auth/a2-registration/RegistrationPage\";\r\nimport RegistrationNew from \"../../../features/f1-auth/a2-registration/RegistrationNew\";\r\n\r\n\r\nfunction RegistrationPage() {\r\n    return (\r\n        <RegistrationNew/>\r\n    );\r\n}\r\n\r\nexport default RegistrationPage;","import axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\" ,//'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n\r\n// api\r\nexport const passwordRecoveryApi = {\r\n    forgot(data:dataType) {\r\n        const promise = instance.post('/auth/forgot',data );\r\n        return promise;\r\n    },\r\n    setNewPassword(newPasswordData:newPasswordDataType) {\r\n        const promise = instance.post('/auth/set-new-password',newPasswordData);\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport type dataType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\nexport type newPasswordDataType = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"../m3-dal/password-recovery-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    response: null\r\n}\r\n\r\nexport const passwordResetReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-RESET-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const setLoadingAC = (loading: boolean) => ({type: 'LOADING', loading} as const)\r\nexport const setResponseAC = (response: ResponseType) => ({type: 'SET-PASS-RESET-RESPONSE', response} as const)\r\n\r\nexport const resetPasswordTC = (email: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    let data = {\r\n        email: email,\r\n        from: \"test-front-admin\",\r\n        message: `<div style = \"background-color: lime; padding: 15px\">\r\n            password recovery link:\r\n    <a href='http://localhost:3000/study-cards#/password-generation/$token$'>link</a>\r\n    </div>`\r\n    }\r\n    passwordRecoveryApi.forgot(data).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\n\r\nexport type setLoadingACType = ReturnType<typeof setLoadingAC>\r\nexport type setResponseACType = ReturnType<typeof setResponseAC>\r\nexport type InitialStateType = {\r\n    loading: boolean,\r\n    response: null|ResponseType\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setResponseACType\r\n\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {resetPasswordTC} from \"../../../main/m2-bll/password-reset-reducer\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ResetPasswordNew() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    let loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email: 'Please enter your new email'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(resetPasswordTC(values.email));\r\n        },\r\n    });\r\n\r\n\r\n    return (loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Email for password recovery\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                   Send\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport ResetPassword from \"../../../features/f1-auth/a3-password_recovery/ResetPassword\";\r\nimport ResetPasswordNew from \"../../../features/f1-auth/a3-password_recovery/ResetPassword-New\";\r\n\r\n\r\nfunction PasswordResetPage() {\r\n    return <ResetPasswordNew/>\r\n}\r\n\r\nexport default PasswordResetPage;","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi, newPasswordDataType} from \"../m3-dal/password-recovery-api\";\r\nimport {setLoadingAC, setLoadingACType} from \"./password-reset-reducer\";\r\n\r\n\r\nconst initialState:InitialStateType =\r\n    {\r\n        loading: false,\r\n        response: null\r\n    }\r\nexport const passwordGenerationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-GENERATION-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setPassGenerationResponseAC = (response: { info: string }) => ({\r\n    type: \"SET-PASS-GENERATION-RESPONSE\",\r\n    response\r\n} as const)\r\n\r\n\r\nexport const setNewPasswordTC = (newPasswordData: newPasswordDataType, history:any) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    passwordRecoveryApi.setNewPassword(newPasswordData).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setPassGenerationResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n            history.push('/login/')\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\nexport type setPassGenerationResponseACType = ReturnType<typeof setPassGenerationResponseAC>\r\nexport type InitialStateType =    {\r\n    loading: boolean\r\n    response: { info: string } | null\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setPassGenerationResponseACType","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {InitialStateType, setNewPasswordTC} from \"../../../main/m2-bll/password-gereration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function GenerateNewPasswordNew() {\r\n    let state = useSelector<AppRootStateType, InitialStateType>(state => state.passwordGenerationPage)\r\n\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your new password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPasswordTC({password: values.password, resetPasswordToken: id}, history));\r\n        },\r\n    });\r\n\r\n\r\n    return (state.loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    New password\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"New password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Set new password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport GenerateNewPassword from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword\";\r\nimport GenerateNewPasswordNew from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword-New\";\r\n\r\nfunction PasswordGenerationPage() {\r\n    return <GenerateNewPasswordNew/>\r\n}\r\n\r\nexport default PasswordGenerationPage;","import axios from 'axios'\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        const promise = instance.post('auth/login', data);\r\n        return promise;\r\n    },\r\n    logout() {\r\n        const promise = instance.delete('auth/me');\r\n        return promise;\r\n    },\r\n    authMe() {\r\n        return instance.post('auth/me', {});\r\n    },\r\n    updateProfile(data:profileUpdateData) {\r\n        return instance.put('auth/me', data);\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string;\r\n}\r\nexport type profileUpdateData = {\r\n    name:string,\r\n    avatar:string|File\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, LoginParamsType, profileUpdateData} from \"../m3-dal/login-api\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nexport type userDate = {\r\n    email : string\r\n    name : string\r\n    avatar: string\r\n    isAdmin: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    __v:number\r\n    _id: string\r\n    success:boolean\r\n\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoginIn: boolean,\r\n    UserData: userDate\r\n}\r\nconst initialState: InitialStateType = {\r\n    isLoginIn: false,\r\n    UserData: {\r\n        avatar:\"\",\r\n        email : \"\",\r\n        name : \"\",\r\n        isAdmin: false,\r\n        rememberMe: false,\r\n        token: \"\",\r\n        tokenDeathTime: 0,\r\n        __v: 0,\r\n        _id: \"\",\r\n        success: false,\r\n    }\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-LOGIN-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-IS-LOGOUT-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-USER-DATA-IN':\r\n            return {...state, UserData: action.Userdata}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGIN-IN', value} as const)\r\nexport const setUsersDataAC = (Userdata: userDate) =>\r\n    ({type: 'SET-USER-DATA-IN', Userdata} as const)\r\nexport const setIsLogoutInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGOUT-IN', value} as const)\r\nexport const setTokenAC = (token: string) =>\r\n    ({type: 'SET-IS-LOGIN-IN', token} as const)\r\n\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: ThunkDispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setUsersDataAC(res.data))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\n    | ReturnType<typeof setIsLogoutInAC>\r\n\r\n\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, profileUpdateData} from \"../m3-dal/login-api\";\r\nimport {setIsLoggedInAC, setUsersDataAC} from \"./login-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false\r\n}\r\n\r\nexport const ProfileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case'SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: 'SET-INITIALIZED', isInitialized} as const)\r\n\r\n\r\n// thunks\r\nexport const isInitializedTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.authMe().then(res => {\r\n        dispatch(setIsLoggedInAC(true))\r\n        dispatch(setInitializedAC(true))\r\n        dispatch(setUsersDataAC(res.data))\r\n    })\r\n        .catch(error => console.log(error))\r\n}\r\n\r\nexport const changeUserDataTC = (data:profileUpdateData) => (dispatch: ThunkDispatch) => {\r\n    authAPI.updateProfile(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data.updatedUser))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\ntype InitialStateType = {\r\n    isInitialized: boolean,\r\n\r\n}\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {changeUserDataTC, isInitializedTC} from \"../../m2-bll/profile-reducer\";\r\nimport {CircularProgress, TextField} from \"@material-ui/core\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {userDate} from \"../../m2-bll/login-reducer\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nfunction ProfilePage() {\r\n\r\n    const {name,email,avatar} = useSelector<AppRootStateType,userDate>((state)=> state.auth.UserData)\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.profilePage.isInitialized)\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType,boolean>(state => state.auth.isLoginIn);\r\n    let[newName, setNewName]= useState(name)\r\n    let[newAvatar, setAvatar]= useState()\r\n    const updateProfile = ()=>{\r\n        dispatch(changeUserDataTC({\r\n            name: newName,\r\n            // @ts-ignore\r\n            avatar: newAvatar}))\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(isInitializedTC());\r\n    },[])\r\n    if(isLoginIn === false){\r\n        return <Redirect exact to={'/login'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Name:{name}</h2>\r\n            <img src={avatar} alt=\"\" style={{width:'300px', height:'200px'}}/>\r\n            <h2>E-mail: {email}</h2>\r\n            <hr style={{width:\"100%\"}}/>\r\n            <p>New name</p>\r\n            <TextField value={newName} name={\"Name\"} onChange={(event) => setNewName(event.currentTarget.value)}/>\r\n            <p>New avatar(ULR):</p>\r\n            <TextField value={newAvatar} name={\"Name\"} onChange={(event) => setAvatar(event.currentTarget.value)}/>\r\n            <div>\r\n                <Button style={{margin:\"20px\"}}  size={\"small\"}  variant=\"contained\" color=\"primary\" onClick={updateProfile}>\r\n                    Update Profile Info\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, {useCallback} from \"react\";\r\nimport style from \"./headerNavbar.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutTC} from \"../../m2-bll/login-reducer\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {useLocation} from \"react-router\";\r\n\r\nfunction HeaderNavbar() {\r\n    const location = useLocation()\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [])\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n\r\n    if (isLoginIn === false && location.pathname.length !== 57) {\r\n        return <Redirect exact to={'/login'}/>\r\n    }\r\n    return (\r\n        <nav className={style.menu}>\r\n            <ul className={style.menu__list}>\r\n                {isLoginIn && <li className={style.menu__group}>\r\n\t\t\t\t</li>}\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/profile\">My Profile</NavLink></li>\r\n\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/Packs\">Packs</NavLink></li>\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/password-reset\">Settings</NavLink></li>\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/files\">Upload Files</NavLink></li>\r\n                <button onClick={logoutHandler} className={style.menu__link_logout}>Log out</button>\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"../../../main/m2-bll/login-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {FormGroup} from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType,boolean>(state => state.auth.isLoginIn);\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email:'Please enter your email'\r\n                }\r\n            }\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password:'',\r\n            rememberMe: false,\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        },\r\n    });\r\n\r\n    if(isLoginIn === true){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <FormControlLabel\r\n                        label={'Remember me'}\r\n                        control={<Checkbox color={\"primary\"}/>}\r\n                        {...formik.getFieldProps('rememberMe')}\r\n                        checked={formik.values.rememberMe}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/password-reset\"} >\r\n                                Forgot password?\r\n                            </NavLink>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <NavLink to={\"/registration\"}>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport Login from \"../../../features/f1-auth/a1-login/Login\";\r\nimport LoginNew from \"../../../features/f1-auth/a1-login/LoginNew\";\r\n\r\n\r\nfunction LoginPage() {\r\n\r\n    return <LoginNew/>\r\n}\r\n\r\nexport default LoginPage;","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const TableApi = {\r\n    getPacks(page:number) {\r\n        const promise = instance.get(`cards/pack?&page=${page}&pageCount=25` );\r\n        return promise;\r\n    },\r\n    addPack(data:AddPackDataType) {\r\n        const promise = instance.post('cards/pack',data);\r\n        return promise;\r\n    },\r\n    deletePack(data:string) {\r\n        const promise = instance.delete(`cards/pack?id=${data}`);\r\n        return promise;\r\n    },\r\n    updatePack(data:UpdatePackDataType) {\r\n        const promise = instance.put('cards/pack',data );\r\n        return promise;\r\n    },\r\n    getCards(data:GetCardsDataType) {\r\n        const promise = instance.get(`cards/card?&cardsPack_id=${data.cardsPack_id}&pageCount=100` );\r\n        return promise;\r\n    },\r\n    addCard(data:AddCardDataType) {\r\n        const promise = instance.post('cards/card',data);\r\n        return promise;\r\n    },\r\n    deleteСard(data:string) {\r\n        const promise = instance.delete(`cards/card?id=${data}`);\r\n        return promise;\r\n    },\r\n    updateСard(data:UpdateCardDataType) {\r\n        const promise = instance.put(`cards/card`,data);\r\n        return promise;\r\n    },\r\n    gradeСard(data:GradeCardDataType) {\r\n        const promise = instance.put(`cards/grade`,data);\r\n        return promise;\r\n    },\r\n}\r\nexport type AddPackDataType = {\r\n    cardsPack: {\r\n        name?:string\r\n        path?:string\r\n        grade?:number\r\n        shots?:number\r\n        rating?:number\r\n        deckCover?:string\r\n        private?:false\r\n        type?:string\r\n    }\r\n}\r\nexport type UpdatePackDataType = {\r\n    cardsPack: {\r\n        _id:string\r\n        name?:string\r\n        path?:string\r\n        grade?:number\r\n        shots?:number\r\n        rating?:number\r\n        deckCover?:string\r\n        private?:false\r\n        type?:string\r\n    }\r\n}\r\nexport type GetCardsDataType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardDataType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        comments?: string\r\n    }\r\n    packId:string\r\n\r\n}\r\nexport type DeleteCardDataType = {\r\n    cardId: string\r\n    packId: string\r\n}\r\n\r\nexport type GradeCardDataType = {\r\n    grade:number\r\n    card_id:string\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    AddCardDataType,\r\n    AddPackDataType, DeleteCardDataType,\r\n    GetCardsDataType, GradeCardDataType,\r\n    TableApi,\r\n    UpdateCardDataType,\r\n    UpdatePackDataType\r\n} from \"../m3-dal/tableApi\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\nexport type PaginatorType = {\r\n    packsCount: number\r\n    startPage: number\r\n    endPage:number\r\n    currentPage: number\r\n}\r\ntype StateType = {\r\n    // cards: Array<CardType> | null\r\n    // packs: Array<PackType> | null\r\n    cards: any\r\n    packs:any\r\n    isLoading: boolean\r\n    paginator:PaginatorType\r\n}\r\n\r\nconst initialState: StateType = {\r\n    packs: null,\r\n    cards: null,\r\n    isLoading: false,\r\n    paginator:{\r\n        currentPage: 1,\r\n        packsCount: 1,\r\n        startPage: 1,\r\n        endPage:5,\r\n    }\r\n\r\n}\r\n\r\nexport const tableReducer = (state = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET-PACKS':\r\n            return {...state, packs: action.packs}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'SET-COUNT':{\r\n            let CopyState = {...state,...state.paginator}\r\n            CopyState.paginator.packsCount = action.count\r\n            return CopyState}\r\n        case 'SET-START-VALUE-PR':{\r\n            let CopyState = {...state,...state.paginator}\r\n            CopyState.paginator.startPage = action.value\r\n            return CopyState}\r\n        case 'SET-END-VALUE-PR':{\r\n            let CopyState = {...state,...state.paginator}\r\n            CopyState.paginator.endPage = action.value\r\n            return CopyState}\r\n        case 'SET-CURRENT-PAGE':{\r\n            let CopyState = {...state,...state.paginator}\r\n            CopyState.paginator.currentPage = action.value\r\n            return CopyState}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\n\r\ntype ThunkDispatch = Dispatch<ActionType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\nexport const getPacksTC = (currentPage:number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(currentPage).then(res => {\r\n        dispatch(setPacksAC(res.data.cardPacks))\r\n        dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        dispatch(setIsLoadingAC(false))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const addPackTC = (data: AddPackDataType,currentPage:number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addPack(data).then(res => {\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deletePackTC = (data: string,currentPage:number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.deletePack(data).then(res => {\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const updatePackTC = (data: UpdatePackDataType,currentPage:number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updatePack(data).then(res => {\r\n        debugger\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            debugger\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\n\r\n\r\nexport const getCardsTC = (data: GetCardsDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getCards(data)\r\n        .then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deleteCardTC = (data: DeleteCardDataType) => (dispatch: ThunkDispatch) => {\r\n    debugger\r\n    setIsLoadingAC(true)\r\n    TableApi.deleteСard(data.cardId).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const updateCardTC = (data: UpdateCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updateСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const addCardTC = (data: AddCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addCard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.card.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\nexport const gradeCardTC = (data: GradeCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.gradeСard(data).then(res => {\r\n        console.log(res)\r\n        TableApi.getCards({cardsPack_id: res.data.updatedGrade.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\n\r\nexport const setPacksAC = (packs: PackType) => ({type: 'SET-PACKS', packs} as const)\r\nexport const setIsLoadingAC = (value: boolean) => ({type: 'SET-IS-LOADING', value} as const)\r\nexport const setCardsAC = (cards: CardsType) => ({type: 'SET-CARDS', cards} as const)\r\nexport const setPacksTotalCountAC = (count: number) => ({type: 'SET-COUNT', count} as const)\r\nexport const setStartPagePaginatorAC = (value: number) => ({type: 'SET-START-VALUE-PR', value} as const)\r\nexport const setEndPagePaginatorAC = (value: number) => ({type: 'SET-END-VALUE-PR', value} as const)\r\nexport const setCurrentPagerAC = (value: number) => ({type: 'SET-CURRENT-PAGE', value} as const)\r\n\r\n\r\ntype setCardsActionType = ReturnType<typeof setCardsAC>\r\ntype setPacksActionType = ReturnType<typeof setPacksAC>\r\ntype setLoadingActionType = ReturnType<typeof setIsLoadingAC>\r\ntype setPacksTotalCountActionType = ReturnType<typeof setPacksTotalCountAC>\r\nexport type setStartPagePaginatorActionType = ReturnType<typeof setStartPagePaginatorAC>\r\ntype setEndPagePaginatorActionType = ReturnType<typeof setEndPagePaginatorAC>\r\ntype setCurrentPagerActionType = ReturnType<typeof setCurrentPagerAC>\r\n\r\ntype ActionType = setLoadingActionType | setPacksActionType | setCardsActionType | setPacksTotalCountActionType |\r\n    setStartPagePaginatorActionType | setEndPagePaginatorActionType | setCurrentPagerActionType\r\n\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n    deckCover: any\r\n}\r\nexport type CardsType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModal({ text,open, setModalOpen, onButtonClick}:{text:string,open:boolean, setModalOpen:(value:boolean)=>void, onButtonClick:(id?:string)=>void}) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data:any)=>{setModalOpen(false); onButtonClick()}\r\n    const cancel = ()=>{setModalOpen(false)}\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n\r\n            </p>\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                    YES\r\n                </Button>\r\n                <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                    NO\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={()=>setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModalInput({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (name: string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(title)\r\n        setTitle(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [title, setTitle] = useState<string>(\"\")\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">New title:</p>\r\n            <TextField style={{width:\"100%\"}} value={title} name={\"Name\"} onChange={(event) => setTitle(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Confirm\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data:any) => any\r\n}\r\n\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    cardId: string\r\n    PackId: string\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n    return (\r\n        <div style={{display:\"flex\"}}>\r\n            {props.buttonsData.map((i) => {\r\n                let onclick = i.onClick\r\n                switch (i.name) {\r\n                    case \"Delete\":\r\n                       const DeleteHandler = () => {if (onclick) onclick({cardId: props.cardId,packId: props.PackId})}\r\n                        return (<>\r\n                                <SimpleModal text={\"Do you want to delete pack?\"} open={deleteOpen} onButtonClick={DeleteHandler} setModalOpen={setDeleteOpen}/>\r\n                                 <Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                    case \"Update\":\r\n                       const UpdateHandler = (question?:string) => {if (onclick) onclick({card: {_id:props.cardId, question:question},packId:props.PackId})}\r\n                        return (<>\r\n                                <SimpleModalInput text={\"Do you want to update pack?\"} open={update} onButtonClick={UpdateHandler} setModalOpen={setUpdateOpen}/>\r\n                                <Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                }\r\n            })}\r\n        </div>)\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((i: any) => {\r\n            return <div style={{width:`calc(90vw/${props.Content.length})`}}>{i}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\ntype RowContentPropsType = {\r\n    Data: Array<CardType> | null\r\n    buttonsData: any\r\n}\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.question, i.answer, i.grade, i.updated,i.shots,\r\n                        <Buttons cardId={i._id} PackId={i.cardsPack_id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </>)\r\n}\r\n\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<CardType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\nfunction TableForCards(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TableForCards;\r\n","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function AddNewCardModal({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (question: string, answer:string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(question,answer)\r\n        setQuestion(\"\")\r\n        setAnswer(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [question, setQuestion] = useState<string>(\"\")\r\n    let [answer, setAnswer] = useState<string>(\"\")\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">Question:</p>\r\n            <TextField value={question} name={\"Name\"} onChange={(event) => setQuestion(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">Answer</p>\r\n            <TextField value={answer} name={\"Name\"} onChange={(event) => setAnswer(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Add\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardTC,\r\n    CardType,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n    updateCardTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport TableForCards from \"./TableCards\";\r\nimport {isInitializedTC} from \"../../../main/m2-bll/profile-reducer\";\r\nimport {DeleteCardDataType, GradeCardDataType, UpdateCardDataType} from \"../../../main/m3-dal/tableApi\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport AddNewCardModal from \"../../../main/m1-ui/common/Modal/addNewCardModal\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\n\r\nfunction CardPage() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const addButton = (question:string, answer:string) => {\r\n        dispatch(addCardTC({card: {cardsPack_id: id, question:question, answer:answer}}))\r\n    }\r\n    const playButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n     const updateButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const deleteButton = (data: DeleteCardDataType) => {\r\n        dispatch(deleteCardTC(data))\r\n    }\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n    let [addCardModalOpen, setAddCardModalOpen]= useState<boolean>(false)\r\n    return <div>\r\n        {!CardsData ? <Preloader/> : <div>\r\n           <AddNewCardModal text={\"Do you want to create new card?\"} open={addCardModalOpen}\r\n                                 onButtonClick={addButton} setModalOpen={setAddCardModalOpen}/>:\r\n            <TableForCards  columnsName={[\"question\", \"answer\", \"Grade\", \"updated\", \"Shots\",\r\n                <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={()=>setAddCardModalOpen(true)}>Add new card</Button>]}\r\n                           rowContent={CardsData}\r\n                           buttonsData={[\r\n                               {name: \"Update\", onClick: updateButton},\r\n                               {name: \"Delete\", onClick: deleteButton},\r\n                               {name: \"Grade\", onClick: gradeButton},\r\n                               {name: \"Play\", onClick: playButton},]}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default CardPage;","import React from \"react\";\r\nimport CardPage from \"../../../features/f2-table/a2-TableOfCards/CardsPage\";\r\n\r\n\r\nfunction CardsPage() {\r\n\r\n    return <CardPage/>\r\n}\r\n\r\nexport default CardsPage;","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            justifyContent: \"space-around\",\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleUpdatePackInput({text, open, setModalOpen, onButtonClick}:\r\n    { text: string, open: boolean, setModalOpen: (value: boolean) => void,\r\n        onButtonClick: (name: string, rating:number, grade:number, deckCover:string) => void }) {\r\n    const classes = useStyles();\r\n    let [deckCover, setDeckCover] = useState<string>(\"My deck Cover\")\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(name, rating, grade, deckCover)\r\n        setName(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [grade, setGrade] = useState<number>(0)\r\n    let [rating, setRating] = useState<number>(0)\r\n    let [name, setName] = useState<string>(\"\")\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n                New name:\r\n            </p>\r\n            <TextField name={\"Name\"} onChange={(event) => setName(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">\r\n                Rating:\r\n            </p>\r\n            <Rating\r\n                name=\"simple-controlled\"\r\n                value={rating}\r\n                onChange={(event, newValue) => {\r\n                    if (newValue)\r\n                        setRating(newValue);\r\n                }}\r\n            />\r\n            <InputLabel id=\"demo-simple-select-label\">Grade</InputLabel>\r\n            <input value={grade} type=\"number\" onChange={event => setGrade(Number(event.currentTarget.value))}/>\r\n            {/*<Select*/}\r\n            {/*    labelId=\"demo-simple-select-label\"*/}\r\n            {/*    id=\"demo-simple-select\"*/}\r\n            {/*    value={grade}*/}\r\n            {/*    onChange={event => setGrade(Number(event.currentTarget.name))}*/}\r\n            {/*>*/}\r\n            {/*    <MenuItem value={0}>0</MenuItem>*/}\r\n            {/*    <MenuItem value={1}>1</MenuItem>*/}\r\n            {/*    <MenuItem value={2}>2</MenuItem>*/}\r\n            {/*    <MenuItem value={3}>3</MenuItem>*/}\r\n            {/*    <MenuItem value={4}>4</MenuItem>*/}\r\n            {/*    <MenuItem value={5}>5</MenuItem>*/}\r\n            {/*</Select>*/}\r\n\r\n            <input type={\"file\"}/>\r\n          <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n              <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                  Confirm\r\n              </Button>\r\n              <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                  Cancel\r\n              </Button>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SimpleUpdatePackInput from \"../../../main/m1-ui/common/Modal/modalInput2\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?:string, rating?:number, grade?:number, deckCover?:string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n\r\n    return (<div style={{display:\"flex\", width: \"fit-content\",\r\n        height: \"fit-content\"}}>\r\n        {props.buttonsData.map((i) => {\r\n            let onclick = i.onClick\r\n            function Handler() {\r\n                if (onclick) onclick(props.id)\r\n            }\r\n\r\n            switch (i.name) {\r\n                case \"Delete\":\r\n                    return (deleteOpen ?\r\n                            <SimpleModal text={\"Do you want to delete pack?\"} open={deleteOpen} onButtonClick={Handler}\r\n                                         setModalOpen={setDeleteOpen}/>\r\n                            : <Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Update\":\r\n                    return (update ?\r\n                            <SimpleUpdatePackInput text={\"Do you want to update pack?\"} open={update}\r\n                                              onButtonClick={(name, rating:number, grade:number, deckCover:string)=>{if (i.onClick){i.onClick(props.id,name,rating, grade, deckCover)}}}\r\n                                              setModalOpen={setUpdateOpen}/>\r\n                            : <Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Cards\":\r\n                    return (<Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={Handler}>{i.name}</Button>)\r\n                case \"Play\":\r\n                    return (<Button size={\"small\"} style={{margin:\"5px\", width: \"20px\",height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={Handler}>{i.name}</Button>)\r\n            }\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: any) => {\r\n            return <div style={{\r\n                width: `calc(90vw/${props.Content.length})`,\r\n                height: `calc(70vh/25)`\r\n            }}>{e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.name, i.cardsCount, i.updated, i.grade,\r\n                        <Buttons id={i._id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForPacks(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForPacks;","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport { setStartPagePaginatorActionType } from \"../../../m2-bll/table-reduser\";\r\n\r\ntype PaginatorPropsType ={\r\n    maxPages: number\r\n    startValue: number\r\n    endValue:number\r\n    goStart : () => void\r\n    goFinish : () => void\r\n    goPage : (value:number) => void\r\n}\r\nconst Paginator = (props:PaginatorPropsType) => {\r\n\r\n    // const [endValue,SetEndValue] = useState<number>(5)\r\n    // const [startValue,SetStartValue] = useState(1)\r\n    // for ( startValue; startValue <= maxPages; ()=> SetStartValue(startValue+1) ) {\r\n    //      buttons[startValue] = startValue\r\n    //  ПОЧЕМУ НЕ РАБОАТЕТ ??? фААААААА}\r\n    let i =props.startValue\r\n    let buttons: Array<any> = []\r\n    for ( i;i <= props.maxPages;i++ ) {\r\n    buttons[i] = i}\r\n    return (\r\n        <div className={style.Main}>\r\n        <div className={style.Pagination}>\r\n            <button onClick={props.goStart}>Start</button>\r\n            {buttons.map((b)=>{\r\n                let goPage = props.goPage\r\n                function Handler(){goPage(b)}\r\n                if (b <= props.endValue) return <button onClick={Handler}>{b}</button>\r\n            })}\r\n            <button onClick={props.goFinish}>End</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {isInitializedTC} from \"../../../main/m2-bll/profile-reducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {\r\n    addPackTC,\r\n    deletePackTC,\r\n    getPacksTC,\r\n    PackType,\r\n    PaginatorType,\r\n    setCurrentPagerAC, setEndPagePaginatorAC, setStartPagePaginatorAC,\r\n    updatePackTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport TableForPacks from \"./TablePacks\";\r\nimport Paginator from \"../../../main/m1-ui/common/Paginator/Paginator\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\n\r\nfunction PackPage() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.packs);\r\n    const paginatorData = useSelector<AppRootStateType, PaginatorType>(state => state.table.paginator);\r\n    let maxPages = Math.ceil(paginatorData.packsCount / 25)\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getPacksTC(paginatorData.currentPage))\r\n    }, [])\r\n    const playButton = (id:string) => {\r\n        history.push(`/play/${id}`)\r\n    }\r\n\r\n    const addButton = (name:string) => {\r\n        dispatch(addPackTC({cardsPack: {name:name}}, paginatorData.currentPage))\r\n    }\r\n    const deleteButton = (id: string) => {\r\n        dispatch(deletePackTC(id, paginatorData.currentPage))\r\n    }\r\n    const updateButton = (id: string, name:string, rating:number=0, grade:number=0, deckCover:string=\"\") => {\r\n        dispatch(updatePackTC({cardsPack: {_id: id,name:name, rating:rating}}, paginatorData.currentPage))\r\n    }\r\n    const cardsButton = (id: string) => {\r\n        history.push(`/Cards/${id}`)\r\n    }\r\n    const goStart = () => {\r\n        dispatch(setCurrentPagerAC(1))\r\n        setStartPagePaginatorAC(1)\r\n        setEndPagePaginatorAC(5)\r\n        dispatch(getPacksTC(paginatorData.currentPage))\r\n    }\r\n    const goFinish = () => {\r\n        dispatch(setCurrentPagerAC(maxPages))\r\n        dispatch(getPacksTC(paginatorData.currentPage))\r\n        setStartPagePaginatorAC(maxPages - 4)\r\n        setEndPagePaginatorAC(maxPages)\r\n    }\r\n\r\n    const goPage = (value: number) => {\r\n        if (value === paginatorData.endPage) {\r\n            dispatch(setStartPagePaginatorAC(value))\r\n            dispatch(setEndPagePaginatorAC(value + 4))\r\n            dispatch(setCurrentPagerAC(value))\r\n            dispatch(getPacksTC(paginatorData.currentPage))\r\n            return\r\n        } else if (value === paginatorData.startPage) {\r\n            dispatch(setStartPagePaginatorAC(value - 4))\r\n            dispatch(setEndPagePaginatorAC(value))\r\n            dispatch(setCurrentPagerAC(value))\r\n            dispatch(getPacksTC(paginatorData.currentPage))\r\n            return\r\n        }\r\n    }\r\n    let [addOpen, setAddModalOpen] = useState(false)\r\n\r\n    return (<div className={style.Main}>\r\n            {!PacksData ? <Preloader/> :\r\n                <>\r\n                    <SimpleModalInput  text={\"Do you want to create new pack?\"} open={addOpen}\r\n                                         onButtonClick={addButton} setModalOpen={setAddModalOpen}/>:\r\n                    <TableForPacks\r\n                        columnsName={[\"Name\", \"Cards quantity\", \"Last update\", \"Grade\",\r\n                            <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={() => setAddModalOpen(true)}>Add new pack</Button>]}\r\n                        rowContent={PacksData}\r\n                        buttonsData={[\r\n                            // @ts-ignore\r\n                            {name: \"Update\", onClick: updateButton},\r\n                            {name: \"Delete\", onClick: deleteButton},\r\n                            {name: \"Cards\", onClick: cardsButton},\r\n                            {name: \"Play\", onClick: playButton},]}/>\r\n                    <Paginator maxPages={maxPages}\r\n                               endValue={paginatorData.endPage}\r\n                               startValue={paginatorData.startPage}\r\n                               goFinish={goFinish}\r\n                               goPage={goPage}\r\n                               goStart={goStart}/>\r\n                </>\r\n            }\r\n\r\n            <ErrorSnackbar/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PackPage;","import React from \"react\";\r\nimport PackPage from \"../../../features/f2-table/a1-TableOfPacks/PacksPage\";\r\n\r\n\r\n\r\n\r\nfunction PacksPage() {\r\n\r\n    return <PackPage/>\r\n}\r\n\r\nexport default PacksPage;","import React, {useEffect, useRef, useState} from 'react';\r\n\r\ninterface IFileInputProps {\r\n    fileURL: string;\r\n}\r\n\r\nconst Video: React.FC<IFileInputProps> = ({fileURL}) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [duration, setDuration] = useState();\r\n    const [controls, setControls] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDuration(videoRef && videoRef.current && videoRef.current.duration);\r\n            if (videoRef && videoRef.current && videoRef.current.currentTime === videoRef.current.duration) {\r\n                videoRef.current.currentTime = 0;\r\n                videoRef.current.play();\r\n            }\r\n            setCurrentTime(videoRef && videoRef.current && videoRef.current.currentTime);\r\n        }, 300);\r\n    }, []);\r\n\r\n    const makeFullScreen = () => {\r\n        if (videoRef && videoRef.current)\r\n            if (videoRef.current.requestFullscreen) {\r\n                videoRef.current.requestFullscreen();\r\n            } else {\r\n                console.log(\"Fullscreen API is not supported\");\r\n            }\r\n    };\r\n\r\n    // videoRef.current!.height\r\n\r\n    const play = () => videoRef && videoRef.current && videoRef.current.play();\r\n    const pause = () => videoRef && videoRef.current && videoRef.current.pause();\r\n    const volumeUp = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume < 0.9) videoRef.current.volume += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 1);\r\n    };\r\n    const volumeDown = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume > 0.1) videoRef.current.volume -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 0);\r\n    };\r\n    const currentTimeUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime < videoRef.current.duration - 0.3) videoRef.current.currentTime += 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = videoRef.current.duration);\r\n    };\r\n    const currentTimeDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime > 0.3) videoRef.current.currentTime -= 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const playbackRateUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate < 100) videoRef.current.playbackRate += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 100);\r\n    };\r\n    const playbackRateDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate > 0.2) videoRef.current.playbackRate -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 0.2);\r\n    };\r\n    const stop = () => {\r\n        videoRef && videoRef.current && videoRef.current.pause();\r\n        videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const width100 = () => {\r\n        videoRef && videoRef.current && (videoRef.current.width = 100);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            Video\r\n            <label>\r\n                controls\r\n                <input type={'checkbox'} checked={controls} onChange={e => setControls(e.currentTarget.checked)}/>\r\n            </label>\r\n            <video\r\n                src={fileURL}\r\n                width={'300px'}\r\n                controls={controls}\r\n                ref={videoRef}\r\n            />\r\n            <div>\r\n                <button onClick={play}>play</button>\r\n                <button onClick={pause}>pause</button>\r\n                <button onClick={makeFullScreen}>makeFullScreen</button>\r\n                <button onClick={volumeUp}>volumeUp</button>\r\n                <button onClick={volumeDown}>volumeDown</button>\r\n                <button onClick={currentTimeUp}>currentTimeUp</button>\r\n                <button onClick={currentTimeDown}>currentTimeDown</button>\r\n                <button onClick={stop}>stop</button>\r\n                <button onClick={playbackRateUp}>playbackRateUp</button>\r\n                <button onClick={playbackRateDown}>playbackRateDown</button>\r\n                <button onClick={width100}>width100</button>\r\n            </div>\r\n            duration: {duration} currentTime: {currentTime}\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/1P2ov_oidRQ\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport Video from \"./Video\";\r\nimport {getFile, writeFile} from \"./getFile\";\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst Files: React.FC<IFileInputProps> = () => {\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(false);\r\n    const [base64, setBase64] = useState(true); // base64 - true, text - false\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [fileData, setFileData] = useState();\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // e.preventDefault();\r\n        const reader = new FileReader();\r\n        const formData = new FormData(); // for send to back\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) { // reader\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n                };\r\n\r\n                if (base64) reader.readAsDataURL(newFile);\r\n                else reader.readAsText(newFile);\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () => {\r\n        const response = axios.post('https://dry-forest-56016.herokuapp.com/file', fileData);\r\n        console.log(response)\r\n    };\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            FileInput\r\n\r\n            <input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <label>\r\n                reader\r\n                <input type={'checkbox'} checked={code} onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </label>\r\n            <label>\r\n                base64\r\n                <input type={'checkbox'} checked={base64} onChange={e => setBase64(e.currentTarget.checked)}/>\r\n            </label>\r\n\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>lastModified: {file && file.lastModified}</div>\r\n            <div>size: {file && returnFileSize(file.size)}</div>\r\n            <div>type: {file && file.type}</div>\r\n\r\n            <input\r\n                ref={inRef}\r\n                type={'file'}\r\n                style={{display: 'none'}}\r\n                onChange={upload}\r\n            />\r\n            <button onClick={() => inRef && inRef.current && inRef.current.click()}>add</button>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            <pre>{file64}</pre>\r\n            <div>\r\n                <button onClick={() => writeFile('Text.txt', text + `\\r\\n` + file64)}>save</button>\r\n                <button onClick={send}>send</button>\r\n                <button onClick={() => getFile(\"https://dry-forest-56016.herokuapp.com\" + 'file', 'newFile.jpg')}>get</button>\r\n            </div>\r\n\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <Video fileURL={fileURL}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Files;","import axios from 'axios';\r\n\r\nexport const getFile = (url: string, fileName: string) => {\r\n    // запросить файл\r\n    axios.get(url, {responseType: 'blob'}) // !!! responseType: 'blob'\r\n        .then(({data}) => {\r\n            const blob = new Blob([data], {type : 'image/jpeg'});\r\n            console.log(blob)\r\n\r\n            // создать ссылку на файл\r\n            const downloadUrl = window.URL.createObjectURL(blob);\r\n\r\n            // создать тег \"ссылка\" на наш файл\r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n\r\n            // добавить атрибуты нашему тегу: загрузочный, имя файла\r\n            link.setAttribute('download', fileName);\r\n\r\n            // добавить тег в документ\r\n            document.body.appendChild(link);\r\n\r\n            // нажать на ссылку\r\n            link.click();\r\n\r\n            // удалить тег из документа\r\n            link.remove();\r\n        });\r\n};\r\n\r\nexport const writeFile = (fileName: string, value: string) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = \"data:text/plain;content-disposition=attachment;filename=file,\" + value;\r\n    link.download = fileName;\r\n    link.style.display = \"none\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n};","import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {Button} from \"@material-ui/core\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport {CardType} from \"../../main/m2-bll/table-reduser\";\r\nimport {GradeCardDataType} from \"../../main/m3-dal/tableApi\";\r\nimport {Rating} from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 500,\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n    }),\r\n);\r\n\r\ntype PlayCardPropsType = {\r\n    cardData: CardType | undefined\r\n    setCurrentCardNumber: (currentCardNumber: number) => void\r\n    currentCardNumber: number\r\n    gradeButton: (data: GradeCardDataType) => void\r\n    totalCards: number\r\n}\r\n\r\n\r\nexport default function PlayCard({cardData,totalCards, setCurrentCardNumber, currentCardNumber, gradeButton}: PlayCardPropsType) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const onGradeButtonPush = (grade: number) => {\r\n        if (cardData)\r\n            gradeButton({\r\n                grade: grade,\r\n                card_id: cardData._id\r\n            })\r\n        setCurrentCardNumber(currentCardNumber + 1)\r\n    }\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={<Rating name=\"half-rating-read-small\" defaultValue={cardData?.rating} precision={0.1} readOnly/>\r\n                }\r\n                subheader={<h3>Card:{currentCardNumber+1} from:{totalCards}</h3>}\r\n            />\r\n            <h3>Grade: {cardData?.grade}</h3>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image=\"https://pbs.twimg.com/profile_images/473506797462896640/_M0JJ0v8.png\"\r\n                title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                    <h1>{cardData?.question}</h1>\r\n            </CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h3\">\r\n                <h3>How good you know this question?</h3>\r\n                <h4>From 1 to 5</h4>\r\n            </Typography>\r\n            <ButtonGroup variant=\"contained\" size={\"small\"} color=\"primary\"\r\n                         aria-label=\"contained primary button group\">\r\n                <Button onClick={() => onGradeButtonPush(1)}>One</Button>\r\n                <Button onClick={() => onGradeButtonPush(2)}>Two</Button>\r\n                <Button onClick={() => onGradeButtonPush(3)}>Three</Button>\r\n                <Button onClick={() => onGradeButtonPush(4)}>Four</Button>\r\n                <Button onClick={() => onGradeButtonPush(5)}>Five</Button>\r\n            </ButtonGroup>\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                    title={\"Show Answer\"}\r\n                >\r\n                    <ExpandMoreIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography paragraph>Answer:</Typography>\r\n                    <Typography paragraph>\r\n                        {cardData?.answer}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardTC,\r\n    CardType,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n    updateCardTC\r\n} from \"../../main/m2-bll/table-reduser\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../main/m2-bll/store\";\r\nimport {isInitializedTC} from \"../../main/m2-bll/profile-reducer\";\r\nimport {DeleteCardDataType, GradeCardDataType, UpdateCardDataType} from \"../../main/m3-dal/tableApi\";\r\nimport PlayCard from \"./Card\";\r\nimport {Link} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../main/m1-ui/common/Preloader/Preloader\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nfunction Play() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n\r\n\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n\r\n    const [currentCardNumber, setCurrentCardNumber] = useState<number>(0)\r\n\r\n    return <div>{\r\n\r\n        CardsData ?\r\n            CardsData.length > currentCardNumber ?\r\n                <PlayCard totalCards={CardsData.length} gradeButton={gradeButton}   cardData={CardsData[currentCardNumber]} setCurrentCardNumber={setCurrentCardNumber}\r\n                          currentCardNumber={currentCardNumber}/> : <><h1>Pack finished</h1><div><Button onClick={()=> history.push(`/Cards/${CardsData[0].cardsPack_id}`)}>Return to pack</Button></div></>\r\n            : <><h1>Pack is empty</h1> <Preloader/></>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Play;","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\r\nimport RegistrationPage from \"./pages/RegistrationPage\";\r\nimport PasswordResetPage from \"./pages/PasswordResetPage\";\r\nimport PasswordGenerationPage from \"./pages/PasswordGenerationPage\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport HeaderNavbar from \"./header/HeaderNavbar\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport CardsPage from \"./pages/CardsPage\";\r\nimport PacksPage from \"./pages/PacksPage\";\r\nimport Files from \"./pages/Files\";\r\nimport Play from \"../../features/f3-play/Play\";\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <HeaderNavbar/>\r\n                <>\r\n                    <Switch>\r\n                        <Route path={\"/login\"} render={() => (<LoginPage/>)}/>\r\n                        <Route path=\"/registration\" render={() => (<RegistrationPage/>)}/>\r\n                        <Route path=\"/password-reset\" render={() => (<PasswordResetPage/>)}/>}\r\n                        <Route path=\"/password-generation/:id\" render={() => (<PasswordGenerationPage/>)}/>\r\n                        <Route path=\"/password-generation\"\r\n                               render={() => (<h1>We send to your mail link for password change. Use it!</h1>)}/>\r\n                        <Route path=\"/profile\" render={() => (<ProfilePage/>)}/>\r\n                        <Route path=\"/Cards/:id\" render={() => (<CardsPage/>)}/>\r\n                        <Route path=\"/Packs\" render={() => (<PacksPage/>)}/>\r\n                        <Route path=\"/files\" render={() => (<Files/>)}/>\r\n                        <Route path=\"/play/:id\" render={() => (<Play/>)}/>\r\n                    </Switch>\r\n                </>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {passwordResetReducer} from \"./password-reset-reducer\";\r\nimport {passwordGenerationReducer} from \"./password-gereration-reducer\";\r\nimport {authReducer} from \"./login-reducer\";\r\nimport {ProfileReducer} from \"./profile-reducer\";\r\nimport {tableReducer} from \"./table-reduser\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    registrationPage: registrationReducer,\r\n    passwordResetPage: passwordResetReducer,\r\n    passwordGenerationPage: passwordGenerationReducer,\r\n    profilePage: ProfileReducer,\r\n    auth:authReducer,\r\n    table:tableReducer,\r\n\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"headerNavbar_menu__1T5wg\",\"menu__link\":\"headerNavbar_menu__link__1JKf_\",\"menu__link_logout\":\"headerNavbar_menu__link_logout__2TVLw\",\"menu__list\":\"headerNavbar_menu__list__2PUd2\",\"menu__group\":\"headerNavbar_menu__group__3nCIy\",\"page\":\"headerNavbar_page__1a2cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__2UCbd\",\"HeaderTable\":\"css_HeaderTable__1Uo31\",\"ContentTable\":\"css_ContentTable__3bVwC\",\"Content\":\"css_Content__1-RRD\",\"rowContent\":\"css_rowContent__9awvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__31v0b\",\"HeaderTable\":\"css_HeaderTable__1aD8H\",\"ContentTable\":\"css_ContentTable__2W9EF\",\"rowItem\":\"css_rowItem__1zkAn\",\"Content\":\"css_Content__th1Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"css_Main__3vS4j\",\"Pagination\":\"css_Pagination__2VPy5\"};"],"sourceRoot":""}