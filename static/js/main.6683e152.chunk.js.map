{"version":3,"sources":["main/m2-bll/app-reducer.ts","main/m1-ui/common/ErrorSnackbar/ErrorSnackbar.tsx","main/m1-ui/utils/error-utils.ts","main/m3-dal/register-api.ts","main/m2-bll/registration-reducer.ts","main/m1-ui/common/Preloader/Preloader.tsx","features/f1-auth/a2-registration/RegistrationNew.tsx","main/m1-ui/pages/RegistrationPage.tsx","main/m3-dal/password-recovery-api.ts","main/m2-bll/password-reset-reducer.ts","features/f1-auth/a3-password_recovery/ResetPassword-New.tsx","main/m1-ui/pages/PasswordResetPage.tsx","main/m2-bll/password-gereration-reducer.ts","features/f1-auth/a3-password_recovery/GenerateNewPassword-New.tsx","main/m1-ui/pages/PasswordGenerationPage.tsx","main/m3-dal/login-api.ts","main/m2-bll/login-reducer.ts","main/m2-bll/profile-reducer.ts","features/f2-table/a3-TableOfProfile/TableProfile.tsx","main/m3-dal/tableApi.ts","main/m2-bll/table-reduser.ts","main/m1-ui/pages/ProfilePage.tsx","main/m1-ui/header/HeaderNavbar.tsx","features/f1-auth/a1-login/LoginNew.tsx","main/m1-ui/pages/LoginPage.tsx","main/m1-ui/common/Modal/modal.tsx","main/m1-ui/common/Modal/modalInput.tsx","main/m1-ui/common/Modal/modalInput2.tsx","features/f2-table/a1-TableOfPacks/TablePacks.tsx","features/f2-table/a2-TableOfCards/TableCards.tsx","main/m1-ui/common/Modal/addNewCardModal.tsx","features/f2-table/a2-TableOfCards/CardsPage.tsx","main/m1-ui/pages/CardsPage.tsx","main/m1-ui/common/Paginator/Paginator.tsx","features/f2-table/a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch.tsx","features/f2-table/a1-TableOfPacks/PacksPage.tsx","main/m1-ui/pages/PacksPage.tsx","main/m1-ui/pages/File/Video.tsx","main/m1-ui/pages/File/Files.tsx","main/m1-ui/pages/File/getFile.ts","features/f3-play/Card.tsx","features/f3-play/Play.tsx","main/m1-ui/pages/SettingPage.tsx","main/m1-ui/App.tsx","serviceWorker.ts","main/m2-bll/store.ts","index.tsx","main/m1-ui/header/headerNavbar.module.css","features/f2-table/a1-TableOfPacks/css.module.css","main/m1-ui/pages/styleProfilaPage.module.css","features/f2-table/a3-TableOfProfile/css.module.css","features/f2-table/a2-TableOfCards/css.module.css","main/m1-ui/common/Paginator/css.module.css"],"names":["initialState","setAppErrorAC","error","type","Alert","props","elevation","variant","ErrorSnackbar","useSelector","state","app","dispatch","useDispatch","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","handleServerNetworkError","response","data","message","status","instance","axios","create","baseURL","withCredentials","registrationApi","post","isRegistered","isLoading","setIsRegistratedAC","value","setIsLoadingAC","Preloader","className","Copyright","Typography","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","RegistrationNew","classes","registrationPage","checkEmail","checkPassword","formik","useFormik","validate","values","test","email","password","initialValues","onSubmit","then","res","catch","setTimeout","registrationTC","to","Container","component","maxWidth","CssBaseline","Avatar","handleSubmit","TextField","required","fullWidth","id","name","autoComplete","autoFocus","label","getFieldProps","errors","Button","Grid","container","item","xs","Box","mt","RegistrationPage","passwordRecoveryApi","newPasswordData","loading","setLoadingAC","ResetPasswordNew","passwordResetPage","from","alert","info","PasswordResetPage","GenerateNewPasswordNew","passwordGenerationPage","useParams","history","useHistory","push","setNewPasswordTC","resetPasswordToken","PasswordGenerationPage","authAPI","login","logout","delete","authMe","profileUpdatePhoto","put","isLoginIn","UserData","created","isAdmin","publicCardPacksCount","rememberMe","token","tokenDeathTime","updated","verified","__v","_id","setIsLoggedInAC","setUsersDataAC","Userdata","isInitialized","isInitializedTC","console","log","changeUserDataTC","updatedUser","ColumnsName","style","Content","map","e","length","height","substring","RowContent","rowContent","Data","i","cardsCount","grade","TableForProfile","Table","HeaderTable","columnsName","ContentTable","buttonsData","TableApi","page","pageCount","get","cardsPack_id","allPacks","myPacks","cards","paginator","currentPage","packsCount","startPage","endPage","getPacksTC","setAllPacksAC","cardPacks","setPacksTotalCountAC","cardPacksTotalCount","updatePackTC","getCardsTC","setCardsAC","updateCardTC","packId","gradeCardTC","updatedGrade","packs","count","setStartPagePaginatorAC","setEndPagePaginatorAC","setCurrentPagerAC","filterForSearchAC","matchValue","ProfilePage","auth","PacksData","table","useEffect","checkAuth","MainContainer","Photo","src","ProfileInfo","InfoItem","TableOfPacks","HeaderNavbar","location","useLocation","logoutHandler","useCallback","pathname","exact","menu","menu__list","menu__group","menu__link","onClick","menu__link_logout","LoginNew","FormControlLabel","control","Checkbox","checked","LoginPage","rand","Math","round","random","getModalStyle","top","left","transform","createStyles","position","background","border","boxShadow","shadows","padding","SimpleModal","text","setModalOpen","onButtonClick","React","useState","modalStyle","body","justifyContent","size","Modal","aria-labelledby","aria-describedby","SimpleModalInput","title","setTitle","onChange","currentTarget","SimpleUpdatePackInput","deckCover","setGrade","rating","setRating","setName","Rating","newValue","InputLabel","Number","buttonStyle","Buttons","deleteOpen","setDeleteOpen","update","setUpdateOpen","onclick","Handler","rowData","date","MaxValue","rowsCount","countRenderItem","startValue","endValue","TableForPacks","cardId","PackId","question","card","answer","shots","TableForCards","AddNewCardModal","setQuestion","setAnswer","CardPage","CardsData","addCardModalOpen","setAddCardModalOpen","deleteCardTC","CardsPage","Paginator","buttons","maxPages","Main","Pagination","startButton","goStart","b","goPage","endButton","goFinish","RangeSlider","min","max","value5","setValue","draggableTrack","maxValue","minValue","PackPage","paginatorData","valueSearch","setValueSearch","ceil","addOpen","setAddModalOpen","cardsPack","SearchPanel","slider","PacksPage","Video","fileURL","videoRef","useRef","duration","setDuration","controls","setControls","currentTime","setCurrentTime","setInterval","current","play","flexFlow","ref","pause","requestFullscreen","volume","playbackRate","frameBorder","allow","allowFullScreen","Files","n","inRef","code","setCode","base64","setBase64","setText","file","setFile","setFileURL","file64","setFile64","fileData","setFileData","accept","multiple","alt","lastModified","toFixed","reader","FileReader","formData","FormData","newFile","target","files","window","URL","createObjectURL","append","onloadend","result","readAsDataURL","readAsText","click","fileName","link","document","createElement","download","appendChild","removeChild","writeFile","url","responseType","blob","Blob","downloadUrl","setAttribute","remove","root","media","paddingTop","expand","marginLeft","transition","transitions","shortest","expandOpen","red","PlayCard","expanded","setExpanded","onGradeButtonPush","cardData","gradeButton","card_id","setCurrentCardNumber","currentCardNumber","Card","CardHeader","defaultValue","precision","readOnly","subheader","totalCards","CardMedia","image","CardContent","ButtonGroup","aria-label","CardActions","disableSpacing","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","Play","SettingsPage","App","path","render","Boolean","hostname","match","rootReducer","combineReducers","action","profilePage","CopyState","searchValue","RegExp","filterPacks","filter","pack","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"uaAAMA,EAAiC,GAkB1BC,EAAgB,SAACC,GAAD,MAA2B,CAAEC,KAAM,gBAAiBD,UCTjF,SAASE,EAAMC,GACX,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGjD,SAASG,IAEZ,IAAMN,EAAQO,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,IAAIT,SACxEU,EAAWC,cAEXC,EAAc,SAACC,EAA8BC,GAChC,cAAXA,GAGJJ,EAASX,EAAc,QAIrBgB,IAAWf,EAEjB,OACI,kBAACgB,EAAA,EAAD,CAAUC,KAAMF,EAAQG,iBAAkB,IAAMC,QAASP,GACrD,kBAAC,EAAD,CAAOO,QAASP,EAAaQ,SAAS,SACjCpB,IC3BV,IAAMqB,EAA2B,SAACrB,EAAYU,GACjDA,EAASX,EAAcC,EAAMsB,SAAWtB,EAAMsB,SAASC,KAAKvB,MAAQA,EAAMwB,UAC1Ed,EFa2D,CAAET,KAAM,iBAAkBwB,OEb7D,Y,iBCAtBC,EAAWC,IAAMC,OAAN,aACbC,QAAQ,uCAJK,CACbC,iBAAiB,KAURC,EAAkB,SACfR,GAER,OADgBG,EAASM,KAAK,gBAAgBT,ICVhDzB,EAAiC,CACnCmC,cAAc,EACdC,WAAU,GAiCDC,EAAqB,SAACC,GAAD,MAC7B,CAACnC,KAAM,qBAAsBmC,UACrBC,EAAiB,SAACD,GAAD,MACzB,CAACnC,KAAM,iBAAkBmC,U,OC1CvB,SAASE,IAChB,OAAO,yBAAKC,UAAU,kBAClB,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,iCCanB,SAASC,IACL,OACI,kBAACC,EAAA,EAAD,CAAYpC,QAAQ,QAAQqC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAASa,IACpB,IAAMC,EAAUnB,IACVtC,EAAWC,cACXsB,EAAe1B,aAAuC,SAAAC,GAAK,OAAIA,EAAM4D,iBAAiBnC,gBACtFC,EAAY3B,aAAuC,SAAAC,GAAK,OAAIA,EAAM4D,iBAAiBlC,aAGnFmC,GAFQ9D,aAA6C,SAAAC,GAAK,OAAIA,EAAMC,IAAIT,SAE3D,gBACbsE,EAAgB,qCAEhBC,EAASC,YAAU,CAACC,SAAU,SAACC,GAC7B,OAAsC,IAAlCL,EAAWM,KAAKD,EAAOE,OAChB,CACHA,MAAO,4BAG6B,IAAxCN,EAAcK,KAAKD,EAAOG,UACnB,CACHA,SAAU,mCAFlB,GAMJC,cAAe,CACXF,MAAO,GACPC,SAAU,IAEdE,SAAU,SAAAL,GACN,IAAInD,EAAO,CACPqD,MAAOF,EAAOE,MACdC,SAAUH,EAAOG,UAErBnE,EAAS2B,GAAe,IACxB3B,EF1DkB,SAACa,GAAD,OAAgC,SAACb,GAC3DqB,EAA4BR,GACvByD,MAAK,SAAAC,GACFvE,EAASyB,GAAmB,IAC5BzB,EAAS2B,GAAe,OACzB6C,OAAM,SAAClF,GACVU,EAAS2B,GAAe,IACxBhB,EAAyBrB,EAAOU,GAChCyE,YAAW,kBAAMzE,EAASX,EAAc,SAAQ,SEkDnCqF,CAAe7D,OAKhC,OAAqB,IAAjBU,EACO,kBAAC,IAAD,CAAUoD,GAAI,YAEH,IAAdnD,EAAqB,kBAACI,EAAD,MACzB,kBAACgD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKlD,UAAW4B,EAAQhB,OACpB,kBAACuC,EAAA,EAAD,CAAQnD,UAAW4B,EAAQV,SAE3B,kBAAChB,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,WAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRwF,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAM,QACNzC,OAAO,UACHa,EAAO6B,cAAc,WAE5B7B,EAAO8B,OAAOzB,MAAQ,6BAAML,EAAO8B,OAAOzB,OAAe,KAC1D,kBAACgB,EAAA,EAAD,eACIvF,QAAQ,WACRqD,OAAO,SACPmC,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLG,MAAM,WACNJ,GAAG,WACH9F,KAAK,YACDsE,EAAO6B,cAAc,cAE5B7B,EAAO8B,OAAOxB,SAAW,6BAAMN,EAAO8B,OAAOxB,UAAkB,KAEhE,kBAACyB,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,WASA,kBAACsC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CAASrB,GAAI,UAAb,wCAOhB,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACpE,EAAD,OAEJ,kBAAClC,EAAD,OC1IGuG,MANf,WACI,OACI,kBAAC3C,EAAD,OCJFxC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,yCAIAiF,EAAsB,SACxBvF,GAEH,OADgBG,EAASM,KAAK,eAAeT,IAFxCuF,EAAsB,SAKhBC,GAEX,OADgBrF,EAASM,KAAK,yBAAyB+E,ICXzDjH,EAAiC,CACnCkH,SAAS,EACT1F,SAAU,MAaD2F,EAAe,SAACD,GAAD,MAAuB,CAAC/G,KAAM,UAAW+G,YCArE,SAASxE,IACL,OACI,kBAACC,EAAA,EAAD,CAAYpC,QAAQ,QAAQqC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAAS6D,IACpB,IAAM/C,EAAUnB,IACZtC,EAAWC,cACXqG,EAAUzG,aAAuC,SAAAC,GAAK,OAAIA,EAAM2G,kBAAkBH,WAGhFzC,EAASC,YAAU,CACrBC,SAAS,SAACC,GACN,IAAKA,EAAOE,MACR,MAAO,CACHA,MAAO,gCAInBE,cAAe,CACXF,MAAM,IAEVG,SAAU,SAAAL,GD/Ca,IAACE,ECgDpBlE,GDhDoBkE,ECgDKF,EAAOE,MDhDM,SAAClE,GAC/CA,EAASuG,GAAa,IAStBH,EARW,CACPlC,MAAOA,EACPwC,KAAM,mBACN5F,QAAQ,oMAKqBwD,MAAK,SAACC,GAChB,MAAfA,EAAIxD,SACJf,EAd8C,CAACT,KAAM,0BAA2BqB,SAczD2D,EAAI1D,OAC3Bb,EAASuG,GAAa,IACtBI,MAAMpC,EAAI1D,KAAK+F,UAEpBpC,OAAM,SAAApE,GACLuG,MAAMvG,GACNJ,EAASuG,GAAa,aCmC1B,OAAQD,EAAU,kBAAC1E,EAAD,MACd,kBAACgD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKlD,UAAW4B,EAAQhB,OACpB,kBAACuC,EAAA,EAAD,CAAQnD,UAAW4B,EAAQV,SAE3B,kBAAChB,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,+BAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRwF,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAM,QACNzC,OAAO,UACHa,EAAO6B,cAAc,WAE5B7B,EAAO8B,OAAOzB,MAAQ,6BAAML,EAAO8B,OAAOzB,OAAe,KAC1D,kBAAC0B,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,UAWR,kBAAC0C,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAEJ,kBAACtG,EAAD,OCtGGiH,MAJf,WACI,OAAO,kBAACL,EAAD,OCDLpH,EACF,CACIkH,SAAS,EACT1F,SAAU,MCUlB,SAASkB,IACL,OACI,kBAACC,EAAA,EAAD,CAAYpC,QAAQ,QAAQqC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAASmE,IACpB,IAAIhH,EAAQD,aAAgD,SAAAC,GAAK,OAAIA,EAAMiH,0BAErEtD,EAAUnB,IACT+C,EAAM2B,cAAN3B,GACD4B,EAAUC,cACZlH,EAAWC,cAET4D,EAASC,YAAU,CACrBC,SAAS,SAACC,GACN,IAAKA,EAAOG,SACR,MAAO,CACHA,SAAU,mCAItBC,cAAe,CACXD,SAAS,IAEbE,SAAU,SAAAL,GACNhE,ED5CoB,SAACqG,EAAsCY,GAAvC,OAAuD,SAACjH,GACpFA,EAASuG,GAAa,IACtBH,EAAmCC,GAAiB/B,MAAK,SAACC,GACnC,MAAfA,EAAIxD,SACJf,EAVgE,CACxET,KAAM,+BACNqB,SAQ6C2D,EAAI1D,OACzCb,EAASuG,GAAa,IACtBI,MAAMpC,EAAI1D,KAAK+F,MACfK,EAAQE,KAAK,eAElB3C,OAAM,SAAApE,GACLuG,MAAMvG,GACNJ,EAASuG,GAAa,QCiCTa,CAAiB,CAACjD,SAAUH,EAAOG,SAAUkD,mBAAoBhC,GAAK4B,OAKvF,OAAQnH,EAAMwG,QAAU,kBAAC1E,EAAD,MACpB,kBAACgD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKlD,UAAW4B,EAAQhB,OACpB,kBAACuC,EAAA,EAAD,CAAQnD,UAAW4B,EAAQV,SAE3B,kBAAChB,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,gBAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRqD,OAAO,SACPmC,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLG,MAAM,eACNJ,GAAG,WACH9F,KAAK,YACDsE,EAAO6B,cAAc,cAE5B7B,EAAO8B,OAAOxB,SAAW,6BAAMN,EAAO8B,OAAOxB,UAAkB,KAChE,kBAACyB,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,sBAWR,kBAAC0C,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAEJ,kBAACtG,EAAD,OCxGG0H,OAJf,WACI,OAAO,kBAACR,EAAD,OCAL9F,GAAWC,IAAMC,OAAN,aACbC,QAAS,uCAJI,CACbC,iBAAiB,KAQRmG,GAAU,CACnBC,MADmB,SACb3G,GAEF,OADgBG,GAASM,KAAK,aAAcT,IAGhD4G,OALmB,WAOf,OADgBzG,GAAS0G,OAAO,YAGpCC,OATmB,WAUf,OAAO3G,GAASM,KAAK,UAAW,KAEpCsG,mBAZmB,wHAYA/G,GACf,OAAOG,GAAS6G,IAAI,UAAW,CAACvC,KAAKzE,EAAKyE,KAAKvC,OAAOlC,EAAKkC,aCG7D3D,GAAiC,CACnC0I,WAAW,EACXC,SAAU,CACNhF,OAAQ,GACRiF,QAAS,KACT9D,MAAO,KACP+D,SAAS,EACT3C,KAAM,GACN4C,qBAAqB,KACrBC,YAAY,EACZC,MAAO,KACPC,eAAgB,KAChBC,QAAS,KACTC,UAAU,EACVC,IAAK,KACLC,IAAK,KAqBAC,GAAkB,SAAChH,GAAD,MAC1B,CAACnC,KAAM,kBAAmBmC,UAClBiH,GAAiB,SAACC,GAAD,MACzB,CAACrJ,KAAM,mBAAoBqJ,aC3D1BxJ,GAAiC,CACnCyJ,eAAe,GAmBNC,GAAkB,kBAAM,SAAC9I,GAClCuH,GAAQI,SAASrD,MAAK,SAAAC,GAClBvE,EAAS0I,IAAgB,IACzB1I,EAPH,CAACT,KAAM,kBAAmBsJ,eAOG,IAC1B7I,EAAS2I,GAAepE,EAAI1D,UAE3B2D,OAAM,SAAAlF,GAAK,OAAIyJ,QAAQC,IAAI1J,QAGvB2J,GAAmB,SAACpI,GAAD,OAA6B,SAACb,GAC1DuH,GAAQK,mBAAmB/G,GACtByD,MAAK,SAAAC,GACFvE,EAAS2I,GAAepE,EAAI1D,KAAKqI,iBAClC1E,OAAM,SAAClF,GACVqB,EAAyBrB,EAAOU,Q,wCCRxC,SAASmJ,GAAY1J,GACjB,OAAQ,yBAAKoC,UAAWuH,KAAMC,SACzB5J,EAAM4J,QAAQC,KAAI,SAACC,GAChB,OAAO,yBAAKH,MAAO,CACf9F,MAAM,aAAD,OAAe7D,EAAM4J,QAAQG,OAA7B,KACLC,OAAO,kBACNF,EAAEC,OAAS,GAAKD,EAAEG,UAAU,EAAE,IAAMH,OAKrD,SAASI,GAAWlK,GAChB,OAAQ,yBAAKoC,UAAWuH,KAAMQ,YACV,OAAfnK,EAAMoK,KAAgB,kBAACjI,EAAD,MACnBnC,EAAMoK,KAAKP,KAAI,SAACQ,GACZ,OAAO,kBAACX,GAAD,CACHE,QAAS,CAACS,EAAExE,KAAMwE,EAAEC,WAAYD,EAAEE,aAoBvCC,OAdf,SAAyBxK,GACrB,OACI,yBAAKoC,UAAWuH,KAAMc,OAClB,yBAAKrI,UAAWuH,KAAMe,aAClB,kBAAChB,GAAD,CAAaE,QAAS5J,EAAM2K,eAEhC,yBAAKvI,UAAWuH,KAAMiB,cAClB,kBAACV,GAAD,CAAYE,KAAMpK,EAAMmK,WAAYU,YAAa7K,EAAM6K,iBCxDjEtJ,GAAWC,IAAMC,OAAN,aACbC,QAAQ,uCAJK,CACbC,iBAAiB,KAURmJ,GAAW,SACXC,EAAsBnF,EAAWoF,GAEtC,OADgBzJ,GAAS0J,IAAT,2BAAiCF,GAAU,GAA3C,sBAA2DC,GAAoB,KAA/E,oBAAgGpF,GAAU,MAFrHkF,GAAW,SAKZ1J,GAEJ,OADgBG,GAASM,KAAK,aAAaT,IANtC0J,GAAW,SAST1J,GAEP,OADgBG,GAAS0G,OAAT,wBAAiC7G,KAV5C0J,GAAW,SAaT1J,GAEP,OADgBG,GAAS6G,IAAI,aAAahH,IAdrC0J,GAAW,SAiBX1J,GAEL,OADgBG,GAAS0J,IAAT,mCAAyC7J,EAAK8J,aAA9C,oBAlBXJ,GAAW,SAqBZ1J,GAEJ,OADgBG,GAASM,KAAK,aAAaT,IAtBtC0J,GAAW,SAyBT1J,GAEP,OADgBG,GAAS0G,OAAT,wBAAiC7G,KA1B5C0J,GAAW,SA6BT1J,GAEP,OADgBG,GAAS6G,IAAT,aAA0BhH,IA9BrC0J,GAAW,SAiCV1J,GAEN,OADgBG,GAAS6G,IAAT,cAA2BhH,ICtB7CzB,GAA0B,CAC5BwL,SAAU,KACVC,QAAS,KACTC,MAAO,KACPtJ,WAAW,EACXuJ,UAAW,CACPC,YAAa,EACbC,WAAY,EACZC,UAAW,EACXC,QAAS,IAiDJC,GAAa,SAACJ,EAA+B3F,EAAYoF,GAA5C,OAAkE,SAACzK,GACzF2B,IAAe,GACf4I,GAAkBS,EAAa3F,EAAGoF,GAAWnG,MAAK,SAAAC,GAC9CvE,EAASqL,GAAc9G,EAAI1D,KAAKyK,YAChCtL,EAASuL,GAAqBhH,EAAI1D,KAAK2K,sBASvCxL,EAAS2B,IAAe,OACzB6C,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,QAsC3ByL,GAAe,SAAC5K,EAA0BmK,GAA3B,OAAmD,SAAChL,GAC5E2B,IAAe,GACf4I,GAAoB1J,GAAMyD,MAAK,SAAAC,GAE3BgG,GAAkBS,GAAa1G,MAAK,SAAAC,GAEhCvE,EAASqL,GAAc9G,EAAI1D,KAAKyK,YAChCtL,EAAS2B,IAAe,OACzB6C,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,SAErCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,QAK3B0L,GAAa,SAAC7K,GAAD,OAA4B,SAACb,GACnD2B,IAAe,GACf4I,GAAkB1J,GACbyD,MAAK,SAAAC,GACFvE,EAAS2B,IAAe,IACxB3B,EAAS2L,GAAWpH,EAAI1D,KAAKiK,WAC9BtG,OAAM,SAAClF,GACVqB,EAAyBrB,EAAOU,QAiB3B4L,GAAe,SAAC/K,GAAD,OAA8B,SAACb,GACvD2B,IAAe,GACf4I,GAAoB1J,GAAMyD,MAAK,SAAAC,GAC3BgG,GAAkB,CAACI,aAAc9J,EAAKgL,SAASvH,MAAK,SAAAC,GAChDvE,EAAS2B,IAAe,IACxB3B,EAAS2L,GAAWpH,EAAI1D,KAAKiK,WAC9BtG,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,MACjCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,WAkB/B8L,GAAc,SAACjL,GAAD,OAA6B,SAACb,GACrD2B,IAAe,GACf4I,GAAmB1J,GAAMyD,MAAK,SAAAC,GAC1BwE,QAAQC,IAAIzE,GACZgG,GAAkB,CAACI,aAAcpG,EAAI1D,KAAKkL,aAAapB,eAAerG,MAAK,SAAAC,GACvEvE,EAAS2B,IAAe,IACxB3B,EAAS2L,GAAWpH,EAAI1D,KAAKiK,WAC9BtG,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,MACjCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,WAQ/BqL,GAAgB,SAACW,GAAD,MAAsB,CAACzM,KAAM,gBAAiByM,UAE9DrK,GAAiB,SAACD,GAAD,MAAqB,CAACnC,KAAM,iBAAkBmC,UAC/DiK,GAAa,SAACb,GAAD,MAAuB,CAACvL,KAAM,YAAauL,UACxDS,GAAuB,SAACU,GAAD,MAAoB,CAAC1M,KAAM,YAAa0M,UAC/DC,GAA0B,SAACxK,GAAD,MAAoB,CAACnC,KAAM,qBAAsBmC,UAC3EyK,GAAwB,SAACzK,GAAD,MAAoB,CAACnC,KAAM,mBAAoBmC,UACvE0K,GAAoB,SAAC1K,GAAD,MAAoB,CAACnC,KAAM,mBAAoBmC,UACnE2K,GAAoB,SAACxL,EAAiByL,GAAlB,MAAyC,CAAC/M,KAAM,oBAAqBsB,OAAKyL,eC1L5FC,OAlCf,WAAwB,IAAD,EACsC1M,aAAwC,SAACC,GAAD,OAAWA,EAAM0M,KAAKzE,YAAhHzC,EADY,EACZA,KAAMpB,EADM,EACNA,MAAOnB,EADD,EACCA,OAAQmF,EADT,EACSA,qBAAsBO,EAD/B,EAC+BA,IAC5CgE,EAAY5M,aAAsD,SAAAC,GAAK,OAAIA,EAAM4M,MAAM9B,YACvF5K,EAAWC,cACX6H,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aAa7E,OAJA6E,qBAAU,YARQ,SAAC7E,GACf,IAAkB,IAAdA,IACA9H,EAAS8I,KACS,IAAdhB,GACQ,IAKhB8E,CAAU9E,GACV9H,EAASoL,GAAW,GAAI3C,MACzB,IAEC,yBAAK5G,UAAWuH,KAAMyD,eAClB,yBAAKhL,UAAWuH,KAAM0D,OAClB,yBAAKC,IAAKhK,KAEd,yBAAKlB,UAAWuH,KAAM4D,aAClB,yBAAKnL,UAAWuH,KAAM6D,UAAtB,SAAuC3H,GACvC,yBAAKzD,UAAWuH,KAAM6D,UAAtB,UAAwC/I,EAAxC,KACA,yBAAKrC,UAAWuH,KAAM6D,UAAtB,wBAAsD/E,EAAtD,KACA,yBAAKrG,UAAWuH,KAAM8D,cAAc,kBAAC,GAAD,CAAiB9C,YAAa,CAAC,OAAQ,QAAS,SAC/BE,YAAa,GACbV,WAAY6C,Q,oBCElEU,OAjCf,WACI,IAAMC,EAAWC,cACXrN,EAAWC,cACXqN,EAAgBC,uBAAY,WAC9BvN,GNwEsB,SAACA,GAC3BuH,GAAQE,SACHnD,MAAK,SAAAC,GACFvE,EAAS0I,IAAgB,OAC1BlE,OAAM,SAAClF,GACVqB,EAAyBrB,EAAOU,WM5EjC,IACG8H,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aAE7E,OAAkB,IAAdA,GAAoD,KAA7BsF,EAASI,SAAShE,OAClC,kBAAC,IAAD,CAAUiE,OAAK,EAAC9I,GAAI,WAG3B,yBAAK9C,UAAWuH,KAAMsE,MAClB,wBAAI7L,UAAWuH,KAAMuE,YAChB7F,GAAa,wBAAIjG,UAAWuH,KAAMwE,cAEnC,wBAAI/L,UAAWuH,KAAMwE,aACjB,kBAAC,IAAD,CAAS/L,UAAWuH,KAAMyE,WAAYlJ,GAAG,YAAzC,eAEJ,wBAAI9C,UAAWuH,KAAMwE,aACjB,kBAAC,IAAD,CAAS/L,UAAWuH,KAAMyE,WAAYlJ,GAAG,UAAzC,UACJ,wBAAI9C,UAAWuH,KAAMwE,aACjB,kBAAC,IAAD,CAAS/L,UAAWuH,KAAMyE,WAAYlJ,GAAG,aAAzC,aACJ,wBAAI9C,UAAWuH,KAAMwE,aACjB,kBAAC,IAAD,CAAS/L,UAAWuH,KAAMyE,WAAYlJ,GAAG,UAAzC,iBACJ,4BAAQmJ,QAASR,EAAezL,UAAWuH,KAAM2E,mBAAjD,c,oBCZhB,SAASjM,KACL,OACI,kBAACC,EAAA,EAAD,CAAYpC,QAAQ,QAAQqC,MAAM,gBAAgBC,MAAM,UACnD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,KAKb,IAAMC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIrB,SAASqL,KACpB,IAAMvK,EAAUnB,KACVtC,EAAWC,cACX6H,EAAYjI,aAAsC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aAEtEjE,EAASC,YAAU,CACrBC,SAAS,SAACC,GACN,OAAKA,EAAOE,MAKPF,EAAOG,cAAZ,EACW,CACHA,SAAU,8BANP,CACHD,MAAM,4BASlBE,cAAe,CACXF,MAAO,mBACPC,SAAS,YACTgE,YAAY,GAEhB9D,SAAU,SAAAL,GPHK,IAACnD,EOIZb,GPJYa,EOIKmD,EPJqB,SAAChE,GAC/CuH,GAAQC,MAAM3G,GACTyD,MAAK,SAAAC,GACFvE,EAAS2I,GAAepE,EAAI1D,OAC5Bb,EAAS0I,IAAgB,OAC1BlE,OAAM,SAAClF,GACVqB,EAAyBrB,EAAOU,YOEpC,OAAiB,IAAd8H,EACQ,kBAAC,IAAD,CAAUnD,GAAI,aAGrB,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKlD,UAAW4B,EAAQhB,OACpB,kBAACuC,EAAA,EAAD,CAAQnD,UAAW4B,EAAQV,SAE3B,kBAAChB,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,WAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRwF,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAM,QACNzC,OAAO,UACHa,EAAO6B,cAAc,WAE5B7B,EAAO8B,OAAOzB,MAAQ,6BAAML,EAAO8B,OAAOzB,OAAe,KAC1D,kBAACgB,EAAA,EAAD,eACIvF,QAAQ,WACRqD,OAAO,SACPmC,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLG,MAAM,WACNJ,GAAG,WACH9F,KAAK,YACDsE,EAAO6B,cAAc,cAE5B7B,EAAO8B,OAAOxB,SAAW,6BAAMN,EAAO8B,OAAOxB,UAAkB,KAChE,kBAAC8J,GAAA,EAAD,eACIxI,MAAO,cACPyI,QAAS,kBAACC,GAAA,EAAD,CAAUnM,MAAO,aACtB6B,EAAO6B,cAAc,cAH7B,CAII0I,QAASvK,EAAOG,OAAOmE,cAE3B,kBAACvC,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,WASA,kBAACsC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACT,kBAAC,IAAD,CAASrB,GAAI,mBAAb,qBAIJ,kBAACkB,EAAA,EAAD,CAAME,MAAI,GACN,kBAAC,IAAD,CAASpB,GAAI,iBACR,sCAMrB,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,GAAD,OAEJ,kBAACtG,EAAD,OC9IGyO,OALf,WAEI,OAAO,kBAACL,GAAD,O,gDCFX,SAASM,KACL,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG5C,SAASC,KACL,IAAMC,EAAM,GAAKL,KACXM,EAAO,GAAKN,KAElB,MAAO,CACHK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIjB,IAAMtM,GAAYC,aAAW,SAACC,GAAD,OACzBsM,aAAa,CACTrM,MAAO,CACHsM,SAAU,WACVzL,MAAO,IACPL,gBAAiBT,EAAMU,QAAQ8L,WAAWvM,MAC1CwM,OAAQ,iBACRC,UAAW1M,EAAM2M,QAAQ,GACzBC,QAAS5M,EAAMG,QAAQ,EAAG,EAAG,SAK1B,SAAS0M,GAAT,GAAkK,IAA3IC,EAA0I,EAA1IA,KAAK/O,EAAqI,EAArIA,KAAMgP,EAA+H,EAA/HA,aAAcC,EAAiH,EAAjHA,cACrD/L,EAAUnB,KAD4J,EAEvJmN,IAAMC,SAAShB,IAA7BiB,EAFqK,qBAMtKC,EACF,yBAAKxG,MAAOuG,EAAY9N,UAAW4B,EAAQhB,OACvC,wBAAI4C,GAAG,sBAAsBiK,GAC7B,uBAAGjK,GAAG,6BAGN,yBAAK+D,MAAO,CAACxG,QAAQ,OAAQiN,eAAe,iBACxC,kBAACjK,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAO,MAAOyG,OAAO,SAAU9J,QAAQ,YAAYqC,MAAM,UAAU8L,QAV9F,SAACjN,GAAY0O,GAAa,GAAQC,MAUtC,OAGA,kBAAC5J,EAAA,EAAD,CAASkK,KAAM,QAAS1G,MAAO,CAACpG,OAAO,MAAOyG,OAAO,SAAU9J,QAAQ,YAAYqC,MAAM,UAAU8L,QAZhG,WAAKyB,GAAa,KAYrB,QAOZ,OACI,6BAEI,kBAACQ,GAAA,EAAD,CACIxP,KAAMA,EACNE,QAAS,kBAAI8O,GAAa,IAC1BS,kBAAgB,qBAChBC,mBAAiB,4BAEhBL,IC3DjB,SAAStB,KACL,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG5C,SAASC,KACL,IAAMC,EAAM,GAAKL,KACXM,EAAO,GAAKN,KAElB,MAAO,CACHK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIjB,IAAMtM,GAAYC,aAAW,SAACC,GAAD,OACzBsM,aAAa,CACTrM,MAAO,CACHsM,SAAU,WACVzL,MAAO,IACPL,gBAAiBT,EAAMU,QAAQ8L,WAAWvM,MAC1CwM,OAAQ,iBACRC,UAAW1M,EAAM2M,QAAQ,GACzBC,QAAS5M,EAAMG,QAAQ,EAAG,EAAG,SAK1B,SAASuN,GAAT,GAAsL,IAA3JZ,EAA0J,EAA1JA,KAAM/O,EAAoJ,EAApJA,KAAMgP,EAA8I,EAA9IA,aAAcC,EAAgI,EAAhIA,cAC1D/L,EAAUnB,KADgL,EAE3KmN,IAAMC,SAAShB,IAA7BiB,EAFyL,uBAWxKD,mBAAiB,IAXuJ,oBAW3LS,EAX2L,KAWpLC,EAXoL,KAa1LR,EACF,yBAAKxG,MAAOuG,EAAY9N,UAAW4B,EAAQhB,OACvC,wBAAI4C,GAAG,sBAAsBiK,GAC7B,uBAAGjK,GAAG,4BAAN,cACA,kBAACH,EAAA,EAAD,CAAWkE,MAAO,CAAC9F,MAAM,QAAS5B,MAAOyO,EAAO7K,KAAM,OAAQ+K,SAAU,SAAClQ,GAAD,OAAWiQ,EAASjQ,EAAMmQ,cAAc5O,UAEhH,yBAAK0H,MAAO,CAACxG,QAAS,OAAQiN,eAAgB,iBAC1C,kBAACjK,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAAU9J,QAAQ,YAAYqC,MAAM,UAClF8L,QAlBJ,SAACjN,GACb0O,GAAa,GACbC,EAAcW,GACdC,EAAS,MAcD,WAIA,kBAACxK,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAAU9J,QAAQ,YAAYqC,MAAM,UAClF8L,QAjBL,WACXyB,GAAa,KAeL,YAQZ,OACI,6BAEI,kBAACQ,GAAA,EAAD,CACIxP,KAAMA,EACNE,QAAS,kBAAM8O,GAAa,IAC5BS,kBAAgB,qBAChBC,mBAAiB,4BAEhBL,I,4CCnEjB,SAAStB,KACL,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG5C,SAASC,KACL,IAAMC,EAAM,GAAKL,KACXM,EAAO,GAAKN,KAElB,MAAO,CACHK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIjB,IAAMtM,GAAYC,aAAW,SAACC,GAAD,OACzBsM,aAAa,CACTrM,MAAO,CACHG,QAAQ,OACRC,cAAc,SACdgN,eAAgB,eAChBd,SAAU,WACVzL,MAAO,IACPL,gBAAiBT,EAAMU,QAAQ8L,WAAWvM,MAC1CwM,OAAQ,iBACRC,UAAW1M,EAAM2M,QAAQ,GACzBC,QAAS5M,EAAMG,QAAQ,EAAG,EAAG,SAK1B,SAAS4N,GAAT,GAEkF,IAFlDjB,EAEiD,EAFjDA,KAAM/O,EAE2C,EAF3CA,KAAMgP,EAEqC,EAFrCA,aAAcC,EAEuB,EAFvBA,cAG/D/L,EAAUnB,KAD4E,EAE5DoN,mBAAiB,iBAF2C,oBAEvFc,EAFuF,aAIvEf,IAAMC,SAAShB,KAA7BiB,EAJqF,uBAapED,mBAAiB,GAbmD,oBAavF1F,EAbuF,KAahFyG,EAbgF,OAclEf,mBAAiB,GAdiD,oBAcvFgB,EAduF,KAc/EC,EAd+E,OAetEjB,mBAAiB,IAfqD,oBAevFpK,EAfuF,KAejFsL,EAfiF,KAgBtFhB,EACF,yBAAMxG,MAAOuG,EAAY9N,UAAW4B,EAAQhB,OACxC,wBAAI4C,GAAG,sBAAsBiK,GAC7B,uBAAGjK,GAAG,4BAAN,aAGA,kBAACH,EAAA,EAAD,CAAWI,KAAM,OAAQ+K,SAAU,SAAClQ,GAAD,OAAWyQ,EAAQzQ,EAAMmQ,cAAc5O,UAC1E,uBAAG2D,GAAG,4BAAN,WAGA,kBAACwL,GAAA,EAAD,CACIvL,KAAK,oBACL5D,MAAOgP,EACPL,SAAU,SAAClQ,EAAO2Q,GACVA,GACAH,EAAUG,MAGtB,kBAACC,GAAA,EAAD,CAAY1L,GAAG,4BAAf,SACA,2BAAO3D,MAAOsI,EAAOzK,KAAK,SAAS8Q,SAAU,SAAAlQ,GAAK,OAAIsQ,EAASO,OAAO7Q,EAAMmQ,cAAc5O,WAC1F,2BAAOnC,KAAM,SACf,yBAAK6J,MAAO,CAACxG,QAAQ,OAAQiN,eAAe,iBACxC,kBAACjK,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAO,MAAOyG,OAAO,SAAU9J,QAAQ,YAAYqC,MAAM,UAAU8L,QAjC5F,SAACjN,GACb0O,GAAa,GACbC,EAAclK,EAAMoL,EAAQ1G,EAAOwG,GACnCI,EAAQ,MA8BF,WAGA,kBAAChL,EAAA,EAAD,CAASkK,KAAM,QAAS1G,MAAO,CAACpG,OAAO,MAAOyG,OAAO,SAAU9J,QAAQ,YAAYqC,MAAM,UAAU8L,QA/B9F,WACXyB,GAAa,KA8BP,YAOV,OACI,6BAEI,kBAACQ,GAAA,EAAD,CACIxP,KAAMA,EACNE,QAAS,kBAAM8O,GAAa,IAC5BS,kBAAgB,qBAChBC,mBAAiB,4BAEhBL,IC1FV,IAAMqB,GAAc,CAACjO,OAAQ,MAAOM,MAAO,OAAQmG,OAAQ,SA6BlE,SAASyH,GAAQzR,GAA0B,IAAD,EAGJiQ,oBAAS,GAHL,oBAGjCyB,EAHiC,KAGrBC,EAHqB,OAIR1B,oBAAS,GAJD,oBAIjC2B,EAJiC,KAIzBC,EAJyB,KAMtC,OAAQ,yBAAKlI,MAAO,CAChBxG,QAAS,OAAQU,MAAO,cACxBmG,OAAQ,gBAEPhK,EAAM6K,YAAYhB,KAAI,SAACQ,GACpB,IAKIyH,EAAUzH,EAAEgE,QAEhB,SAAS0D,IACDD,GAASA,EAAQ9R,EAAM4F,IAG/B,OAAQyE,EAAExE,MACN,IAAK,SACD,OAAQ6L,EACA,kBAAC9B,GAAD,CAAaC,KAAM,8BACN/O,KAAM4Q,EACN3B,cAAegC,EACfjC,aAAc6B,IACzB,kBAACxL,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO6H,GACPtR,QAAQ,YAAYqC,MAAM,UAC1B8L,QAAS,kBAAMsD,GAAc,KAAQtH,EAAExE,MAE7D,IAAK,SACD,OAAQ+L,EACA,kBAACd,GAAD,CAAuBjB,KAAM,8BAA+B/O,KAAM8Q,EAC3C7B,cA1BX,SAAClK,EAAcoL,EAAgB1G,EAAewG,GAClE1G,EAAEgE,SACFhE,EAAEgE,QAAQrO,EAAM4F,GAAIC,EAAMoL,EAAQ1G,EAAOwG,IAyBVjB,aAAc+B,IACnC,kBAAC1L,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO6H,GACPtR,QAAQ,YAAYqC,MAAM,UAC1B8L,QAAS,kBAAMwD,GAAc,KAAQxH,EAAExE,MAE7D,IAAK,QAKL,IAAK,OACD,OAAQ,kBAACM,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO6H,GACPtR,QAAQ,YAAYqC,MAAM,UAC1B8L,QAAS0D,GAAU1H,EAAExE,WAMzD,SAAS6D,GAAY1J,GACjB,OAAQ,yBAAKoC,UAAWuH,KAAMC,SACzB5J,EAAM4J,QAAQC,KAAI,SAACC,GAChB,OAAO,yBAAKH,MAAO,CACf9F,MAAM,aAAD,OAAe7D,EAAM4J,QAAQG,OAA7B,KACLC,OAAO,kBACPF,OAKhB,SAASI,GAAWlK,GAChB,IAAIgS,EAAU,GACVC,EAAM,GACNC,EAAWlS,EAAMmS,UACrB,GAAGnS,EAAMoK,KAAK,CACV,IAAIgI,EAAmBpS,EAAMoK,KAAKL,QAAY/J,EAAMmS,UAAUnS,EAAMuL,YAAavL,EAAMmS,WACnFC,EAAkBpS,EAAMmS,YAAWD,EAAWE,GAItD,IAFA,IAAIC,EAAcH,EAAWlS,EAAMuL,YAAgB2G,EAC/CI,EAAWJ,EAAWlS,EAAMuL,YACvBlB,EAAIgI,EAAYhI,EAAIiI,EAAUjI,IAC/BrK,EAAMoK,MAAM4H,EAAQtK,KAAK1H,EAAMoK,KAAKC,IAE5C,OAAQ,yBAAKjI,UAAWuH,KAAMQ,YACV,OAAfnK,EAAMoK,KAAgB,kBAACjI,EAAD,MACnB6P,EAAQnI,KAAI,SAACQ,GAIT,OAH4B4H,EAAxB5H,EAAExB,QAAQkB,OAAS,GAAYM,EAAExB,QAAQoB,UAAU,EAAG,IAC9CI,EAAExB,QAEP,kBAAC,GAAD,CACHe,QAAS,CAACS,EAAExE,KAAMwE,EAAEC,WAAY2H,EAAM5H,EAAEE,MACpC,kBAACkH,GAAD,CAAS7L,GAAIyE,EAAErB,IAAK6B,YAAa7K,EAAM6K,qBAwBhD0H,OAlBf,SAAuBvS,GACnB,OACI,yBAAKoC,UAAWuH,KAAMc,OAClB,yBAAKrI,UAAWuH,KAAMe,aAClB,kBAAC,GAAD,CAAad,QAAS5J,EAAM2K,eAEhC,yBAAKvI,UAAWuH,KAAMiB,cAClB,kBAAC,GAAD,CAAYR,KAAMpK,EAAMmK,WACZU,YAAa7K,EAAM6K,YACnBsH,UAAWnS,EAAMmS,UACjB5G,YAAavL,EAAMuL,iBC5H/C,SAASkG,GAAQzR,GAA0B,IAAD,EACJiQ,oBAAS,GADL,oBACjCyB,EADiC,KACrBC,EADqB,OAER1B,oBAAS,GAFD,oBAEjC2B,EAFiC,KAEzBC,EAFyB,KAGtC,OACI,yBAAKlI,MAAO,CAACxG,QAAQ,SAChBnD,EAAM6K,YAAYhB,KAAI,SAACQ,GACpB,IAAIyH,EAAUzH,EAAEgE,QAChB,OAAQhE,EAAExE,MACN,IAAK,SAED,OAAQ,oCACA,kBAAC+J,GAAD,CAAaC,KAAM,8BACN/O,KAAM4Q,EACN3B,cAJA,WAAW+B,GAASA,EAAQ,CAACU,OAAQxS,EAAMwS,OAAOpG,OAAQpM,EAAMyS,UAKhE3C,aAAc6B,IAC1B,kBAACxL,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO6H,GACPtR,QAAQ,YACRqC,MAAM,UACN8L,QAAS,kBAAMsD,GAAc,KAAQtH,EAAExE,OAG5D,IAAK,SAED,OAAQ,oCACA,kBAAC4K,GAAD,CAAkBZ,KAAM,8BACN/O,KAAM8Q,EACN7B,cAJL,SAAC2C,GAA0BZ,GAASA,EAAQ,CAACa,KAAM,CAAC3J,IAAIhJ,EAAMwS,OAAQE,SAASA,GAAUtG,OAAOpM,EAAMyS,UAKjG3C,aAAc+B,IAChC,kBAAC1L,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO6H,GACPtR,QAAQ,YACRqC,MAAM,UACN8L,QAAS,kBAAMwD,GAAc,KAAQxH,EAAExE,YAW/E,SAAS6D,GAAY1J,GACjB,OAAQ,yBAAKoC,UAAWuH,KAAMC,SACzB5J,EAAM4J,QAAQC,KAAI,SAACQ,GAChB,OAAO,yBAAKV,MAAO,CAAC9F,MAAM,aAAD,OAAc7D,EAAM4J,QAAQG,OAA5B,OAAyCM,OAS9E,SAASH,GAAWlK,GAChB,OAAQ,oCACY,OAAfA,EAAMoK,KAAgB,kBAACjI,EAAD,MACnBnC,EAAMoK,KAAKP,KAAI,SAACQ,GACZ,OAAO,kBAAC,GAAD,CACHT,QAAS,CAACS,EAAEqI,SAAUrI,EAAEuI,OAAQvI,EAAEE,MAAOF,EAAExB,QAAQwB,EAAEwI,MACjD,kBAAC,GAAD,CAASL,OAAQnI,EAAErB,IAAKyJ,OAAQpI,EAAEa,aAAcL,YAAa7K,EAAM6K,qBAyB5EiI,OAff,SAAuB9S,GACnB,OACI,yBAAKoC,UAAWuH,KAAMc,OAClB,yBAAKrI,UAAWuH,KAAMe,aAClB,kBAAC,GAAD,CAAad,QAAS5J,EAAM2K,eAEhC,yBAAKvI,UAAWuH,KAAMiB,cAClB,kBAAC,GAAD,CAAYR,KAAMpK,EAAMmK,WAAYU,YAAa7K,EAAM6K,iBC7FvE,SAASgE,KACL,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG5C,SAASC,KACL,IAAMC,EAAM,GAAKL,KACXM,EAAO,GAAKN,KAElB,MAAO,CACHK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIjB,IAAMtM,GAAYC,aAAW,SAACC,GAAD,OACzBsM,aAAa,CACTrM,MAAO,CACHsM,SAAU,WACVzL,MAAO,IACPL,gBAAiBT,EAAMU,QAAQ8L,WAAWvM,MAC1CwM,OAAQ,iBACRC,UAAW1M,EAAM2M,QAAQ,GACzBC,QAAS5M,EAAMG,QAAQ,EAAG,EAAG,SAK1B,SAAS6P,GAAT,GAAwM,IAA9KlD,EAA6K,EAA7KA,KAAM/O,EAAuK,EAAvKA,KAAMgP,EAAiK,EAAjKA,aAAcC,EAAmJ,EAAnJA,cACzD/L,EAAUnB,KADkM,EAE7LmN,IAAMC,SAAShB,IAA7BiB,EAF2M,uBAYpLD,mBAAiB,IAZmK,oBAY7MyC,EAZ6M,KAYnMM,EAZmM,OAaxL/C,mBAAiB,IAbuK,oBAa7M2C,EAb6M,KAarMK,EAbqM,KAc5M9C,EACF,yBAAKxG,MAAOuG,EAAY9N,UAAW4B,EAAQhB,OACvC,wBAAI4C,GAAG,sBAAsBiK,GAC7B,uBAAGjK,GAAG,4BAAN,aACA,kBAACH,EAAA,EAAD,CAAWxD,MAAOyQ,EAAU7M,KAAM,OAAQ+K,SAAU,SAAClQ,GAAD,OAAWsS,EAAYtS,EAAMmQ,cAAc5O,UAC/F,uBAAG2D,GAAG,4BAAN,UACA,kBAACH,EAAA,EAAD,CAAWxD,MAAO2Q,EAAQ/M,KAAM,OAAQ+K,SAAU,SAAClQ,GAAD,OAAWuS,EAAUvS,EAAMmQ,cAAc5O,UAE3F,yBAAK0H,MAAO,CAACxG,QAAS,OAAQiN,eAAgB,iBAC1C,kBAACjK,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAAU9J,QAAQ,YAAYqC,MAAM,UAClF8L,QArBJ,SAACjN,GACb0O,GAAa,GACbC,EAAc2C,EAASE,GACvBI,EAAY,IACZC,EAAU,MAgBF,OAIA,kBAAC9M,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAAU9J,QAAQ,YAAYqC,MAAM,UAClF8L,QAnBL,WACXyB,GAAa,KAiBL,YAQZ,OACI,6BAEI,kBAACQ,GAAA,EAAD,CACIxP,KAAMA,EACNE,QAAS,kBAAM8O,GAAa,IAC5BS,kBAAgB,qBAChBC,mBAAiB,4BAEhBL,ICHF+C,OAvDf,WACI,IAAM3S,EAAWC,cACVoF,EAAM2B,cAAN3B,GACDyC,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aACvE8K,EAAY/S,aAAsD,SAAAC,GAAK,OAAIA,EAAM4M,MAAM5B,SAS7F6B,qBAAU,YARQ,SAAC7E,GACf,IAAkB,IAAdA,IACA9H,EAAS8I,KACS,IAAdhB,GACQ,IAKhB8E,CAAU9E,GACV9H,EAAS0L,GAAW,CAACf,aAActF,OACpC,IACH,IAjBgB,EAgC8BqK,oBAAkB,GAhChD,oBAgCXmD,EAhCW,KAgCOC,EAhCP,KAiChB,OAAO,6BACDF,EAA2B,6BACzB,kBAACJ,GAAD,CAAiBlD,KAAM,kCACN/O,KAAMsS,EACNrD,cApBP,SAAC2C,EAAkBE,GX0JhB,IAACxR,EWzJlBb,GXyJkBa,EWzJC,CAACuR,KAAM,CAACzH,aAActF,EAAI8M,SAAUA,EAAUE,OAAQA,IXyJ7B,SAACrS,GACjD2B,IAAe,GACf4I,GAAiB1J,GAAMyD,MAAK,SAAAC,GACxBgG,GAAkB,CAACI,aAAc9J,EAAKuR,KAAKzH,eAAerG,MAAK,SAAAC,GAC3DvE,EAAS2B,IAAe,IACxB3B,EAAS2L,GAAWpH,EAAI1D,KAAKiK,WAC9BtG,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,MACjCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,aW9IfuP,aAAcuD,IAJN,IAKzB,kBAAC,GAAD,CAAe1I,YAAa,CAAC,WAAY,SAAU,QAAS,UAAW,QACnE,kBAACxE,EAAA,EAAD,CAAQkK,KAAM,QAAS1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAC9C9J,QAAQ,YACRqC,MAAM,UACN8L,QAAS,kBAAMgF,GAAoB,KAH3C,iBAIWlJ,WAAYgJ,EACZtI,YAAa,CACT,CAAChF,KAAM,SAAUwI,QAvBvB,SAACjN,GAClBb,EAAS4L,GAAa/K,MAuBC,CAACyE,KAAM,SAAUwI,QArBvB,SAACjN,GAClBb,EXqHoB,SAACa,GAAD,OAA8B,SAACb,GAEvD2B,IAAe,GACf4I,GAAoB1J,EAAKoR,QAAQ3N,MAAK,SAAAC,GAClCgG,GAAkB,CAACI,aAAc9J,EAAKgL,SAASvH,MAAK,SAAAC,GAChDvE,EAAS2B,IAAe,IACxB3B,EAAS2L,GAAWpH,EAAI1D,KAAKiK,WAC9BtG,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,MACjCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,UW/H3B+S,CAAalS,MAqBC,CAACyE,KAAM,QAASwI,QAnBvB,SAACjN,GACjBb,EAAS8L,GAAYjL,MAmBE,CAACyE,KAAM,OAAQwI,QA7BvB,SAACjN,GAChBb,EAAS4L,GAAa/K,UAaR,kBAACe,EAAD,QC7CPoR,OALf,WAEI,OAAO,kBAAC,GAAD,O,oBC0BIC,GApBG,SAACxT,GAGf,IAFA,IAAIqK,EAAGrK,EAAMqS,WACToB,EAAsB,GAClBpJ,GAAKrK,EAAM0T,SAASrJ,IAC5BoJ,EAAQpJ,GAAKA,EACb,OACI,yBAAKjI,UAAWuH,KAAMgK,MACtB,yBAAKvR,UAAWuH,KAAMiK,YAClB,4BAAQxR,UAAWuH,KAAMkK,YAAaxF,QAASrO,EAAM8T,SAArD,SACCL,EAAQ5J,KAAI,SAACkK,GACV,IAAIC,EAAShU,EAAMgU,OAEnB,GAAID,GAAK/T,EAAMsS,SAAU,OAAO,4BAAQjE,QADxC,WAAmB2F,EAAOD,KACiCA,MAE/D,4BAAQ3R,UAAWuH,KAAMsK,UAAW5F,QAASrO,EAAMkU,UAAnD,U,4BCtBL,SAASC,KAAe,IAAD,EACAlE,mBAAc,CAACmE,IAAI,EAAEC,IAAI,KADzB,oBACnBC,EADmB,KACZC,EADY,KAE1B,OACI,kBAAC,KAAD,CACIC,gBAAc,EACdC,SAAU,GACVC,SAAU,EACVzS,MAAOqS,EACP1D,SAAU,SAAA3O,GAAUqH,QAAQC,IAAItH,GAC5BsS,EAAStS,MCsJV0S,OA1If,WACI,IAAMnN,EAAUC,cACVlH,EAAWC,cACX6H,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aACvEtG,EAAY3B,aAAuC,SAAAC,GAAK,OAAIA,EAAM4M,MAAMlL,aACxEiL,EAAY5M,aAAsD,SAAAC,GAAK,OAAIA,EAAM4M,MAAM9B,YAEvFyJ,GADcxU,aAAsD,SAAAC,GAAK,OAAIA,EAAM4M,MAAM7B,WACzEhL,aAA6C,SAAAC,GAAK,OAAIA,EAAM4M,MAAM3B,cAPxE,EAQsB2E,mBAAiB,IARvC,oBAQT4E,EARS,KAQIC,EARJ,KAST9L,EAAO5I,aAAwC,SAAAC,GAAK,OAAIA,EAAM0M,KAAKzE,YAAnEU,IATS,EAUoBiH,mBAAc,GAVlC,oBAWZyD,GAXY,UAWD5E,KAAKiG,KAAKH,EAAcpJ,WAAa,KAWpD0B,qBAAU,YATQ,SAAC7E,GACf,IAAkB,IAAdA,IACA9H,EAAS8I,KACS,IAAdhB,GACQ,IAMhB8E,CAAU9E,GACV9H,EAASoL,GAAW,GAAI,GAAI,QAC7B,IACH,IA1BgB,EAyFiBsE,oBAAS,GAzF1B,oBAyFX+E,EAzFW,KAyFFC,EAzFE,KA0FhB,OAAQ,yBAAK7S,UAAWuH,KAAMgK,OACpB3G,GAAajL,EAAY,kBAACI,EAAD,MACvB,oCACI,kBAACsO,GAAD,CAAkBZ,KAAM,kCACN/O,KAAMkU,EACNjF,cAlEhB,SAAClK,GfyDE,IAACzE,EAAuBmK,EexDzChL,GfwDkBa,EexDC,CAAC8T,UAAW,CAACrP,KAAMA,IfwDG0F,EexDKqJ,EAAcrJ,YfwDK,SAAChL,GACtE2B,IAAe,GACf4I,GAAiB1J,GAAMyD,MAAK,SAAAC,GACxBgG,GAAkBS,GAAa1G,MAAK,SAAAC,GAChCvE,EAASqL,GAAc9G,EAAI1D,KAAKyK,YAChCtL,EAAS2B,IAAe,OACzB6C,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,SAErCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,UeAFuP,aAAcmF,IAChC,yBAAK7S,UAAWuH,KAAMwL,aAClB,4BAAQ9G,QAlBR,WAChB9N,EAASoL,GAAW,GAAI,GAAI,MAC5BmJ,EAAe,MAgBC,aACA,6BAAK,2BAAO7S,MAAO4S,EAAajE,SA/C1B,SAAC9G,GACvBgL,EAAehL,EAAE+G,cAAc5O,UA+CX,4BAAQoM,QA7Cf,SAACvE,GfsBO,IAAC+C,EerBtBtM,GfqBsBsM,EerBCgI,EfqBsB,SAACtU,GAClD2B,IAAe,GACf4I,GAAkB,GAAG,GAAG,KAAKjG,MAAK,SAAAC,GAC9BvE,EAASqM,GAAkB9H,EAAI1D,KAAKyK,UAAUgB,IAC9CtM,EAAS2B,IAAe,OACzB6C,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,WeiBZ,WAEJ,wCAAa,2BAAOT,KAAK,WAAW8Q,SAlBrC,SAAC9G,GACZA,EAAE+G,cAAclC,QAASpO,EAASoL,GAAW,GAAI3C,EAAK,MACrDzI,EAASoL,GAAW,GAAI,GAAI,UAiBjB,yBAAKvJ,UAAWuH,KAAMyL,QAAQ,kBAACjB,GAAD,QAIlC,kBAAC,GAAD,CACIxJ,YAAa,CAAC,OAAQ,iBAAkB,cAAe,QACnD,kBAACxE,EAAA,EAAD,CAAQkK,KAAM,QACN1G,MAAO,CAACpG,OAAQ,MAAOyG,OAAQ,SAC/B9J,QAAQ,YACRqC,MAAM,UACN8L,QAAS,kBAAM4G,GAAgB,KAJvC,iBAKJ9K,WAAY6C,EACZnC,YAAa,CACT,CAAChF,KAAM,SAAUwI,QAjFpB,SAACzI,EAAYC,GAAkF,IAAnEoL,EAAkE,uDAAjD,EAC9D1Q,EAASyL,GAAa,CAACkJ,UAAW,CAAClM,IAAKpD,EAAIC,KAAMA,EAAMoL,OAAQA,IAAU2D,EAAcrJ,gBAiFpE,CAAC1F,KAAM,SAAUwI,QArFpB,SAACzI,GfmEE,IAACxE,EAAcmK,EelEnChL,GfkEqBa,EelECwE,EfkEa2F,EelETqJ,EAAcrJ,YfkEmB,SAAChL,GAChE2B,IAAe,GACf4I,GAAoB1J,GAAMyD,MAAK,SAAAC,GAC3BgG,GAAkBS,GAAa1G,MAAK,SAAAC,GAChCvE,EAASqL,GAAc9G,EAAI1D,KAAKyK,YAChCtL,EAAS2B,IAAe,OACzB6C,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,SAErCwE,OAAM,SAAClF,GACNqB,EAAyBrB,EAAOU,WeSZ,CAACsF,KAAM,QAASwI,QAhFpB,SAACzI,GACjB4B,EAAQE,KAAR,iBAAuB9B,MAgFH,CAACC,KAAM,OAAQwI,QA7FpB,SAACzI,GAChB4B,EAAQE,KAAR,gBAAsB9B,OA6FNuM,UAAW,GACX5G,YAAaqJ,EAAcrJ,cAC/B,kBAAC,GAAD,CAAWmI,SAAUA,EACVpB,SAAUsC,EAAclJ,QACxB2G,WAAYuC,EAAcnJ,UAC1ByI,SA/EV,WACb3T,EAASoM,GAAkB+G,IACvBA,EAAW,IACfnT,EAASkM,GAAwBiH,EAAW,IAC5CnT,EAASmM,GAAsBgH,MA4ERM,OApEZ,SAAC/R,GACZ,OAAIA,IAAU2S,EAAclJ,SACpBzJ,IAAUyR,IAIdnT,EAASkM,GAAwBxK,IACjC1B,EAASmM,GAAsBzK,EAAQ,UAJnC1B,EAASoM,GAAkB1K,KAOxBA,IAAU2S,EAAcnJ,WACjB,IAAVxJ,IAIJ1B,EAASkM,GAAwBxK,EAAQ,IACzC1B,EAASmM,GAAsBzK,UAJ3B1B,EAASoM,GAAkB1K,UAQnC1B,EAASoM,GAAkB1K,KAiDJ6R,QAtFX,WACZvT,EAASoM,GAAkB,IAC3BpM,EAASkM,GAAwB,IACjClM,EAASmM,GAAsBgH,QAuF3B,kBAACvT,EAAD,QCjJGkV,OALf,WAEI,OAAO,kBAAC,GAAD,OCiHIC,GAnH0B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjCC,EAAWC,iBAAyB,MADU,EAGpBxF,qBAHoB,oBAG7CyF,EAH6C,KAGnCC,EAHmC,OAIpB1F,oBAAS,GAJW,oBAI7C2F,EAJ6C,KAInCC,EAJmC,OAKd5F,qBALc,oBAK7C6F,EAL6C,KAKhCC,EALgC,KAOpD7I,qBAAU,WACN8I,aAAY,WACRL,EAAYH,GAAYA,EAASS,SAAWT,EAASS,QAAQP,UACzDF,GAAYA,EAASS,SAAWT,EAASS,QAAQH,cAAgBN,EAASS,QAAQP,WAClFF,EAASS,QAAQH,YAAc,EAC/BN,EAASS,QAAQC,QAErBH,EAAeP,GAAYA,EAASS,SAAWT,EAASS,QAAQH,eACjE,OACJ,IAmDH,OACI,yBACInM,MAAO,CACHxG,QAAS,OACTgT,SAAU,SACV9S,WAAY,SACZ+M,eAAgB,WALxB,QASI,0CAEI,2BAAOtQ,KAAM,WAAY6O,QAASiH,EAAUhF,SAAU,SAAA9G,GAAC,OAAI+L,EAAY/L,EAAE+G,cAAclC,aAE3F,2BACIrB,IAAKiI,EACL1R,MAAO,QACP+R,SAAUA,EACVQ,IAAKZ,IAET,6BACI,4BAAQnH,QA3DP,kBAAMmH,GAAYA,EAASS,SAAWT,EAASS,QAAQC,SA2DxD,QACA,4BAAQ7H,QA3DN,kBAAMmH,GAAYA,EAASS,SAAWT,EAASS,QAAQI,UA2DzD,SACA,4BAAQhI,QAxEG,WACfmH,GAAYA,EAASS,UACjBT,EAASS,QAAQK,kBACjBd,EAASS,QAAQK,oBAEjBhN,QAAQC,IAAI,sCAmEZ,kBACA,4BAAQ8E,QA5DH,WACTmH,GAAYA,EAASS,SAAWT,EAASS,QAAQM,OAAS,GAAKf,EAASS,QAAQM,QAAU,GACzFf,GAAYA,EAASS,UAAYT,EAASS,QAAQM,OAAS,KA0DxD,YACA,4BAAQlI,QAzDD,WACXmH,GAAYA,EAASS,SAAWT,EAASS,QAAQM,OAAS,GAAKf,EAASS,QAAQM,QAAU,GACzFf,GAAYA,EAASS,UAAYT,EAASS,QAAQM,OAAS,KAuDxD,cACA,4BAAQlI,QAtDE,WACdmH,GAAYA,EAASS,SAClBT,EAASS,QAAQH,YAAcN,EAASS,QAAQP,SAAW,GAAKF,EAASS,QAAQH,aAAe,GAClGN,GAAYA,EAASS,UAAYT,EAASS,QAAQH,YAAcN,EAASS,QAAQP,YAmD9E,iBACA,4BAAQrH,QAlDI,WAChBmH,GAAYA,EAASS,SAClBT,EAASS,QAAQH,YAAc,GAAKN,EAASS,QAAQH,aAAe,GACtEN,GAAYA,EAASS,UAAYT,EAASS,QAAQH,YAAc,KA+C7D,mBACA,4BAAQzH,QApCP,WACTmH,GAAYA,EAASS,SAAWT,EAASS,QAAQI,QACjDb,GAAYA,EAASS,UAAYT,EAASS,QAAQH,YAAc,KAkCxD,QACA,4BAAQzH,QA/CG,WACfmH,GAAYA,EAASS,SAClBT,EAASS,QAAQO,aAAe,IAAKhB,EAASS,QAAQO,cAAgB,GACxEhB,GAAYA,EAASS,UAAYT,EAASS,QAAQO,aAAe,OA4C9D,kBACA,4BAAQnI,QA3CK,WACjBmH,GAAYA,EAASS,SAClBT,EAASS,QAAQO,aAAe,GAAKhB,EAASS,QAAQO,cAAgB,GACxEhB,GAAYA,EAASS,UAAYT,EAASS,QAAQO,aAAe,MAwC9D,oBACA,4BAAQnI,QAnCH,WACbmH,GAAYA,EAASS,UAAYT,EAASS,QAAQpS,MAAQ,OAkClD,aA9BR,aAgCe6R,EAhCf,iBAgCuCI,EACnC,wBAAInM,MAAO,CAAC9F,MAAO,UAEnB,4BACIA,MAAM,MACNmG,OAAO,MACPsD,IAAI,4CACJmJ,YAAY,IACZC,MAAM,0EACNC,iBAAe,MCVhBC,GAhG0B,WACrC,IAuCwBC,EAvClBC,EAAQrB,iBAAyB,MADI,EAGnBxF,oBAAS,GAHU,oBAGpC8G,EAHoC,KAG9BC,EAH8B,OAIf/G,oBAAS,GAJM,oBAIpCgH,EAJoC,KAI5BC,EAJ4B,OAKnBjH,mBAAS,IALU,oBAKpCJ,EALoC,KAK9BsH,EAL8B,OAMnBlH,qBANmB,oBAMpCmH,EANoC,KAM9BC,EAN8B,OAObpH,qBAPa,oBAOpCsF,EAPoC,KAO3B+B,EAP2B,OAQfrH,qBARe,oBAQpCsH,EARoC,KAQ5BC,EAR4B,OASXvH,qBATW,oBASpCwH,EAToC,KAS1BC,EAT0B,KAkD3C,OACI,yCAGI,2BAAO5X,KAAK,OAAO6X,OAAO,oBAAoBC,UAAQ,IACtD,wBAAIjO,MAAO,CAAC9F,MAAO,UAEnB,wCAEI,2BAAO/D,KAAM,WAAY6O,QAASoI,EAAMnG,SAAU,SAAA9G,GAAC,OAAIkN,EAAQlN,EAAE+G,cAAclC,aAEnF,wCAEI,2BAAO7O,KAAM,WAAY6O,QAASsI,EAAQrG,SAAU,SAAA9G,GAAC,OAAIoN,EAAUpN,EAAE+G,cAAclC,aAGvF,yBAAKrB,IAAKiK,EAAQM,IAAK,OAAQhU,MAAO,UACtC,sCAAYuT,GAAQA,EAAKvR,MACzB,8CAAoBuR,GAAQA,EAAKU,cACjC,sCAAYV,KA7BIP,EA6BmBO,EAAK/G,MA5BpC,KACGwG,EAAI,QACJA,EAAI,MAAQA,EAAI,SACfA,EAAI,MAAMkB,QAAQ,GAAK,KACxBlB,EAAI,SACHA,EAAI,SAASkB,QAAQ,GAAK,UAD/B,IAyBH,sCAAYX,GAAQA,EAAKtX,MAEzB,2BACIsW,IAAKU,EACLhX,KAAM,OACN6J,MAAO,CAACxG,QAAS,QACjByN,SAjEG,SAAC9G,GAEZ,IAAMkO,EAAS,IAAIC,WACbC,EAAW,IAAIC,SAEfC,EAAUtO,EAAEuO,OAAOC,OAASxO,EAAEuO,OAAOC,MAAM,GAE7CF,IACAf,EAAQe,GACRd,EAAWiB,OAAOC,IAAIC,gBAAgBL,IACtCF,EAASQ,OAAO,SAAUN,EAASA,EAAQvS,MAC3C6R,EAAYQ,GAERnB,IACAiB,EAAOW,UAAY,WACfnB,EAAUQ,EAAOY,SAGjB3B,EAAQe,EAAOa,cAAcT,GAC5BJ,EAAOc,WAAWV,QAgD3B,4BAAQ/J,QAAS,kBAAMyI,GAASA,EAAMb,SAAWa,EAAMb,QAAQ8C,UAA/D,OACA,wBAAIpP,MAAO,CAAC9F,MAAO,UAEnB,8BAAU5B,MAAO4N,EAAMe,SAAU,SAAA9G,GAAC,OAAIqN,EAAQrN,EAAE+G,cAAc5O,UAC9D,6BAAMsV,GACN,6BACI,4BAAQlJ,QAAS,kBC/DR,SAAC2K,EAAkB/W,GACxC,IAAMgX,EAAOC,SAASC,cAAc,KACpCF,EAAKvW,KAAO,gEAAkET,EAC9EgX,EAAKG,SAAWJ,EAChBC,EAAKtP,MAAMxG,QAAU,OACrB+V,SAAS/I,KAAKkJ,YAAYJ,GAC1BA,EAAKF,QACLG,SAAS/I,KAAKmJ,YAAYL,GDwDSM,CAAU,WAAY1J,EAAI,OAAY0H,KAA7D,QACA,4BAAQlJ,QAlDP,WACT,IAAMlN,EAAWK,IAAMK,KAAK,8CAA+C4V,GAC3EnO,QAAQC,IAAIpI,KAgDJ,QACA,4BAAQkN,QAAS,kBC7FTmL,ED6FuB,6CC7FVR,ED6F6D,mBC3F9FxX,IAAMyJ,IAAIuO,EAAK,CAACC,aAAc,SACzB5U,MAAK,YAAa,IAAXzD,EAAU,EAAVA,KACEsY,EAAO,IAAIC,KAAK,CAACvY,GAAO,CAACtB,KAAO,eACtCwJ,QAAQC,IAAImQ,GAGZ,IAAME,EAAcrB,OAAOC,IAAIC,gBAAgBiB,GAGzCT,EAAOC,SAASC,cAAc,KACpCF,EAAKvW,KAAOkX,EAGZX,EAAKY,aAAa,WAAYb,GAG9BE,SAAS/I,KAAKkJ,YAAYJ,GAG1BA,EAAKF,QAGLE,EAAKa,YAxBM,IAACN,EAAaR,ID6FrB,QAGJ,wBAAIrP,MAAO,CAAC9F,MAAO,UAEnB,kBAAC,GAAD,CAAO0R,QAASA,M,+HE7EtB1S,GAAYC,aAAW,SAACC,GAAD,OACzBsM,aAAa,CACT0K,KAAM,CACF1U,SAAU,KAEd2U,MAAO,CACHhQ,OAAQ,EACRiQ,WAAY,UAEhBC,OAAQ,CACJ9K,UAAW,eACX+K,WAAY,OACZC,WAAYrX,EAAMsX,YAAY5Y,OAAO,YAAa,CAC9CiU,SAAU3S,EAAMsX,YAAY3E,SAAS4E,YAG7CC,WAAY,CACRnL,UAAW,kBAEf9L,OAAQ,CACJE,gBAAiBgX,KAAI,WAclB,SAASC,GAASza,GAA2B,IAAD,QACjDgE,EAAUnB,KADuC,EAEvBmN,IAAMC,UAAS,GAFQ,oBAEhDyK,EAFgD,KAEtCC,EAFsC,KAGjDC,EAAoB,SAACrQ,GACnBvK,EAAM6a,UACN7a,EAAM8a,YAAY,CACdvQ,MAAOA,EACPwQ,QAAS/a,EAAM6a,SAAS7R,MAEhChJ,EAAMgb,qBAAqBhb,EAAMib,kBAAoB,IAMzD,OACI,kBAACC,GAAA,EAAD,CAAM9Y,UAAW4B,EAAQ+V,MACrB,kBAACoB,GAAA,EAAD,CACIzK,MAAO,kBAACU,GAAA,EAAD,CAAQvL,KAAK,yBAAyBuV,aAAY,UAAEpb,EAAM6a,gBAAR,aAAE,EAAgB5J,OAAQoK,UAAW,GAAKC,UAAQ,IAE3GC,UAAW,oCAAUvb,EAAMib,kBAAkB,EAAlC,SAA2Cjb,EAAMwb,cAEhE,gDAAYxb,EAAM6a,gBAAlB,aAAY,EAAgBtQ,OAC5B,kBAACkR,GAAA,EAAD,CACIrZ,UAAW4B,EAAQgW,MACnB0B,MAAM,uEACNhL,MAAM,gBAEV,kBAACiL,GAAA,EAAD,KACQ,sCAAK3b,EAAM6a,gBAAX,aAAK,EAAgBnI,WAE7B,kBAACpQ,EAAA,EAAD,CAAYpC,QAAQ,QAAQqC,MAAM,gBAAgB6C,UAAU,MACxD,gEACA,4CAEJ,kBAACwW,GAAA,EAAD,CAAa1b,QAAQ,YAAYmQ,KAAM,QAAS9N,MAAM,UACzCsZ,aAAW,kCACpB,kBAAC1V,EAAA,EAAD,CAAQkI,QAAS,kBAAMuM,EAAkB,KAAzC,OACA,kBAACzU,EAAA,EAAD,CAAQkI,QAAS,kBAAMuM,EAAkB,KAAzC,OACA,kBAACzU,EAAA,EAAD,CAAQkI,QAAS,kBAAMuM,EAAkB,KAAzC,SACA,kBAACzU,EAAA,EAAD,CAAQkI,QAAS,kBAAMuM,EAAkB,KAAzC,QACA,kBAACzU,EAAA,EAAD,CAAQkI,QAAS,kBAAMuM,EAAkB,KAAzC,SAEJ,kBAACkB,GAAA,EAAD,CAAaC,gBAAc,GACvB,kBAACC,GAAA,EAAD,CACI5Z,UAAW6Z,aAAKjY,EAAQkW,OAAT,gBACVlW,EAAQuW,WAAaG,IAE1BrM,QArCU,WACtBsM,GAAaD,IAqCDwB,gBAAexB,EACfmB,aAAW,YACXnL,MAAO,eAEP,kBAAC,KAAD,QAGR,kBAACyL,GAAA,EAAD,CAAUC,GAAI1B,EAAU2B,QAAQ,OAAOC,eAAa,GAChD,kBAACX,GAAA,EAAD,KACI,kBAACrZ,EAAA,EAAD,CAAYia,WAAS,GAArB,WACA,kBAACja,EAAA,EAAD,CAAYia,WAAS,GAArB,UACKvc,EAAM6a,gBADX,aACK,EAAgBjI,WCxD1B4J,OA7Cf,WACI,IAAMjc,EAAWC,cACVoF,EAAM2B,cAAN3B,GACD4B,EAAUC,cACVY,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aACvE8K,EAAY/S,aAAsD,SAAAC,GAAK,OAAIA,EAAM4M,MAAM5B,SAE7F6B,qBAAU,WACNC,EAAU9E,GACV9H,EAAS0L,GAAW,CAACf,aAActF,OACpC,IAGH,IAAMuH,EAAY,SAAC9E,GACf,IAAkB,IAAdA,IACA9H,EAAS8I,KACS,IAAdhB,GACA,OAAO,kBAAC,IAAD,CAAU2F,OAAK,EAAC9I,GAAI,YAjB3B,EA0BsC+K,mBAAiB,GA1BvD,oBA0BLgL,EA1BK,KA0BcD,EA1Bd,KA4BZ,OAAO,6BAEH7H,EACIA,EAAUpJ,OAASkR,EACf,kBAACR,GAAD,CAAUe,WAAYrI,EAAUpJ,OAAQ+Q,YAVhC,SAAC1Z,GACjBb,EAAS8L,GAAYjL,KAUHyZ,SAAU1H,EAAU8H,GAAoBD,qBAAsBA,EAC9DC,kBAAmBA,IAAuB,oCAAE,6CAClD,6BAAK,kBAAC9U,EAAA,EAAD,CAAQkI,QAAS,kBAAM7G,EAAQE,KAAR,iBAAuByL,EAAU,GAAGjI,iBAA3D,oBAGX,oCAAE,6CAAF,IAAyB,kBAAC/I,EAAD,SCrCjCU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZ2G,OAAQ,QAEZ1G,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFX,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAoGrBuZ,OAhGf,WAEI,IAAMzY,EAAUnB,KACZtC,EAAWC,cACTqG,EAAUzG,aAAuC,SAAAC,GAAK,OAAIA,EAAM2G,kBAAkBH,WAClFwB,EAAYjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAK1E,aALzD,EAMEjI,aAAuC,SAAAC,GAAK,OAAIA,EAAM0M,KAAKzE,YAA1EzC,EANa,EAMbA,KAAKvC,EANQ,EAMRA,OAKNc,EAASC,YAAU,CACrBC,SAAU,SAACC,GACP,IAAKA,EAAOsB,KACR,MAAO,CACHpB,MAAO,+BAInBE,cAAe,CACXkB,KAAMA,EACNvC,OAAQA,GAEZsB,SAAU,SAAAL,GAENhE,EAASiJ,GAAiB,CAAC3D,KAAMtB,EAAOsB,KAAMvC,OAAQiB,EAAOjB,aAIrE,OAAkB,IAAd+E,EACO,kBAAC,IAAD,CAAU2F,OAAK,EAAC9I,GAAI,WAEvB2B,EAAU,kBAAC1E,EAAD,MACV,kBAACgD,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKlD,UAAW4B,EAAQhB,OACpB,kBAACV,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,oBAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRwF,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,KAAK,OACLC,aAAa,OACbE,MAAM,OACNzC,OAAO,UACHa,EAAO6B,cAAc,UAE5B7B,EAAO8B,OAAOL,KAAO,6BAAMzB,EAAO8B,OAAOL,MAAc,KACxD,kBAACM,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,YAWR,yBAAK1B,UAAW4B,EAAQhB,OACpB,kBAACV,EAAA,EAAD,CAAY8C,UAAU,KAAKlF,QAAQ,MAAnC,sBAGA,0BAAM0E,SAAUR,EAAOoB,cACnB,kBAACC,EAAA,EAAD,eACIvF,QAAQ,WACRwF,UAAQ,EACRC,WAAS,EACTC,GAAG,SACHC,KAAK,SACLC,aAAa,SACbE,MAAM,sBACNzC,OAAO,UACHa,EAAO6B,cAAc,YAE5B7B,EAAO8B,OAAOL,KAAO,6BAAMzB,EAAO8B,OAAO5C,QAAgB,KAC1D,kBAAC6C,EAAA,EAAD,CACIrG,KAAK,SACL6F,WAAS,EACTzF,QAAQ,YACRqC,MAAM,UACNH,UAAW4B,EAAQF,QALvB,YAWR,kBAAC3D,EAAD,QCvFDuc,OA1Bf,WACI,OACI,kBAAC,IAAD,KACI,yBAAKta,UAAU,OACX,kBAAC,GAAD,MACA,oCACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOua,KAAM,SAAUC,OAAQ,kBAAO,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAQ,kBAAO,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAO,kBAAC,GAAD,SACvC,kBAAC,IAAD,CAAOD,KAAK,kBAAkBC,OAAQ,kBAAO,kBAAC,EAAD,SAJjD,IAKI,kBAAC,IAAD,CAAOD,KAAK,2BAA2BC,OAAQ,kBAAO,kBAAC,GAAD,SACtD,kBAAC,IAAD,CAAOD,KAAK,uBACLC,OAAQ,kBAAO,yFACtB,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAO,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAQ,kBAAO,kBAAC,GAAD,SACxC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAO,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAO,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAO,kBAAC,GAAD,cCrB3CC,QACW,cAA7BtE,OAAO5K,SAASmP,UAEe,UAA7BvE,OAAO5K,SAASmP,UAEhBvE,OAAO5K,SAASmP,SAASC,MACvB,2D,uBCNAC,GAAcC,aAAgB,CAChC3c,I7CVsB,WAAoF,IAAnFD,EAAkF,uDAAxDV,EAAcud,EAA0C,uCACzG,OAAQA,EAAOpd,MACX,IAAK,iBACD,OAAO,eAAIO,EAAX,CAAkBiB,OAAQ4b,EAAO5b,SACrC,IAAK,gBACD,OAAO,eAAIjB,EAAX,CAAkBR,MAAOqd,EAAOrd,QACpC,IAAI,sBACA,OAAO,eAAIQ,EAAX,CAAkB+I,cAAe8T,EAAO9T,gBAC5C,QACI,OAAO,eAAI/I,K6CEnB4D,iBzCH+B,WAAgD,IAA/C5D,EAA8C,uDAAtCV,EAAcud,EAAwB,uCAC9E,OAAQA,EAAOpd,MAEX,IAAK,oBACD,OAAO,eAAIO,EAAX,CAAkByB,aAAcob,EAAOjb,QAC3C,IAAK,iBACD,OAAO,eAAI5B,EAAX,CAAkB0B,UAAWmb,EAAOjb,QAExC,QACI,OAAO,eAAI5B,KyCLnB2G,kBpCPgC,WAAgD,IAA/C3G,EAA8C,uDAAtCV,EAAcud,EAAwB,uCAC/E,OAAQA,EAAOpd,MACX,IAAK,UACD,OAAO,eAAIO,EAAX,CAAkBwG,QAASqW,EAAOrW,UACtC,IAAK,0BACD,OAAO,eAAIxG,EAAX,CAAkBc,SAAU+b,EAAO/b,WACvC,QACI,OAAO,eAAId,KoCCnBiH,uBjCNqC,WAAgD,IAA/CjH,EAA8C,uDAAtCV,EAAcud,EAAwB,uCACpF,OAAQA,EAAOpd,MACX,IAAK,UACD,OAAO,eAAIO,EAAX,CAAkBwG,QAASqW,EAAOrW,UACtC,IAAK,+BACD,OAAO,eAAIxG,EAAX,CAAkBc,SAAU+b,EAAO/b,WACvC,QACI,OAAO,eAAId,KiCAnB8c,Y5BN0B,WAAoF,IAAnF9c,EAAkF,uDAAxDV,GAAcud,EAA0C,uCAC7G,OAAQA,EAAOpd,MACX,IAAI,kBACA,OAAO,eAAIO,EAAX,CAAkB+I,cAAe8T,EAAO9T,gBAC5C,QACI,OAAO/I,I4BEf0M,K7B4BuB,WAAoF,IAAnF1M,EAAkF,uDAAxDV,GAAcud,EAA0C,uCAC1G,OAAQA,EAAOpd,MAEX,IAAK,kBAEL,IAAK,mBACD,OAAO,eAAIO,EAAX,CAAkBgI,UAAW6U,EAAOjb,QACxC,IAAK,mBACD,OAAO,eAAI5B,EAAX,CAAkBiI,SAAU4U,EAAO/T,WAEvC,QACI,OAAO9I,I6BtCf4M,MzBqBwB,WAA0D,IAAzD5M,EAAwD,uDAAhDV,GAAcud,EAAkC,uCACjF,OAAQA,EAAOpd,MACX,IAAK,gBACD,OAAO,eAAIO,EAAX,CAAkB8K,SAAU+R,EAAO3Q,QACvC,IAAK,eACD,OAAO,eAAIlM,EAAX,CAAkB+K,QAAS8R,EAAO3Q,QACtC,IAAK,iBACD,OAAO,eAAIlM,EAAX,CAAkB0B,UAAWmb,EAAOjb,QACxC,IAAK,YACD,OAAO,eAAI5B,EAAX,CAAkBgL,MAAO6R,EAAO7R,QACpC,IAAK,YACD,IAAI+R,EAAS,eAAO/c,EAAP,GAAiBA,EAAMiL,WAEpC,OADA8R,EAAU9R,UAAUE,WAAa0R,EAAO1Q,MACjC,eAAInM,EAAX,CAAkBiL,UAAU,eAAKjL,EAAMiL,UAAZ,CAAuBE,WAAY0R,EAAO1Q,UAEzE,IAAK,qBACD,IAAI4Q,EAAS,eAAO/c,EAAP,GAAiBA,EAAMiL,WAEpC,OADA8R,EAAU9R,UAAUG,UAAYyR,EAAOjb,MAChCmb,EAEX,IAAK,mBACD,IAAIA,EAAS,eAAO/c,EAAP,GAAiBA,EAAMiL,WAEpC,OADA8R,EAAU9R,UAAUI,QAAUwR,EAAOjb,MAC9Bmb,EAEX,IAAK,mBACD,OAAO,eAAI/c,EAAX,CAAkBiL,UAAU,eAAKjL,EAAMiL,UAAZ,CAAuBC,YAAa2R,EAAOjb,UAE1E,IAAK,oBAED,IAAIob,EAAc,IAAIC,OAAOJ,EAAOrQ,WAAY,KAC5C0Q,EAAcL,EAAO9b,KAAKoc,QAAO,SAACC,GAAD,OAAUA,EAAK5X,KAAKkX,MAAMM,MAC/D,OAAO,eAAIhd,EAAX,CAAkB8K,SAAUoS,EAAajS,UAAU,eAAKjL,EAAMiL,UAAZ,CAAuBE,WAAY+R,EAAYxT,WAErG,QACI,OAAO,eAAI1J,OyBpDVqd,GAAQC,aAAYX,GAAaY,aAAgBC,OAM9DtF,OAAOmF,MAAQA,GCrBfI,IAASlB,OACP,kBAAC,IAAMmB,WAAP,KACI,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,GAAD,OAFR,KAKAxE,SAAS8E,eAAe,SF6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtZ,MAAK,SAAAuZ,GACJA,EAAaC,gBAEdtZ,OAAM,SAAAlF,GACLyJ,QAAQzJ,MAAMA,EAAMwB,a,mBGhJ5Bid,EAAOC,QAAU,CAAC,KAAO,2BAA2B,WAAa,iCAAiC,kBAAoB,wCAAwC,WAAa,iCAAiC,YAAc,kCAAkC,KAAO,6B,mBCAnQD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,aAAe,0BAA0B,QAAU,qBAAqB,WAAa,wBAAwB,OAAS,oBAAoB,YAAc,yBAAyB,OAAS,sB,mBCA9QD,EAAOC,QAAU,CAAC,cAAgB,wCAAwC,MAAQ,gCAAgC,YAAc,sCAAsC,SAAW,qC,mBCAjLD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,aAAe,0BAA0B,QAAU,qBAAqB,WAAa,wBAAwB,OAAS,sB,mBCA1MD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,aAAe,0BAA0B,QAAU,qBAAqB,QAAU,uB,mBCAtKD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,WAAa,wBAAwB,YAAc,yBAAyB,UAAY,0B","file":"static/js/main.6683e152.chunk.js","sourcesContent":["const initialState: InitialStateType = {\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case'APP/SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({ type: 'APP/SET-ERROR', error } as const)\r\nexport const setAppStatusAC = (status:  RequestStatusType) => ({ type: 'APP/SET-STATUS', status } as const)\r\nexport const setAppInitializedAC = (isInitialized:  boolean) => ({ type: 'APP/SET-INITIALIZED', isInitialized } as const)\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppInitializedActionType = ReturnType<typeof setAppInitializedAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | SetAppInitializedActionType\r\n\r\n\r\nexport type InitialStateType = any\r\n\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from \"../../../m2-bll/store\";\r\nimport {setAppErrorAC} from \"../../../m2-bll/app-reducer\";\r\n\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    //const [open, setOpen] = React.useState(true)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(null));\r\n    }\r\n\r\n\r\n    const isOpen = !!error ;\r\n\r\n    return (\r\n        <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import {Dispatch} from 'redux'\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType, setAppStatusAC} from '../../m2-bll/app-reducer'\r\n\r\n\r\nexport const handleServerNetworkError = (error: any, dispatch: Dispatch<SetAppErrorActionType | SetAppStatusActionType>) => {\r\n    dispatch(setAppErrorAC(error.response ? error.response.data.error : error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL:\"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const registrationApi = {\r\n    setRegister(data:RegistretionDataType) {\r\n        const promise = instance.post('auth/register',data );\r\n        return promise;\r\n    }\r\n}\r\n\r\n\r\nexport type RegistretionDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n","import {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {registrationApi, RegistretionDataType} from \"../m3-dal/register-api\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isRegistered: false,\r\n    isLoading:false,\r\n}\r\n\r\nexport const registrationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-REGISTATED':\r\n            return {...state, isRegistered: action.value}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\nexport const registrationTC = (data: RegistretionDataType) => (dispatch: ThunkDispatch) => {\r\n    registrationApi.setRegister(data)\r\n        .then(res => {\r\n            dispatch(setIsRegistratedAC(true))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n        dispatch(setIsLoadingAC(false))\r\n        handleServerNetworkError(error, dispatch);\r\n        setTimeout(() => dispatch(setAppErrorAC(null)), 3000);\r\n\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\nexport const setIsRegistratedAC = (value: boolean): setIsRegistratedActionType =>\r\n    ({type: 'SET-IS-REGISTRATED', value} as const)\r\nexport const setIsLoadingAC = (value: boolean): setIsLoadingActionType =>\r\n    ({type: 'SET-IS-LOADING', value} as const)\r\n\r\n\r\n// Types\r\n\r\nexport type InitialStateType = any\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\n\r\ntype ActionsType = setIsRegistratedActionType | setIsLoadingActionType\r\n\r\nexport type setIsRegistratedActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\nexport type setIsLoadingActionType = {\r\n    type: string\r\n    value: boolean\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./preloader.scss\"\r\nexport function Preloader() {\r\nreturn <div className='cssload-loader'>\r\n    <div className='cssload-inner cssload-one'></div>\r\n    <div className='cssload-inner cssload-two'></div>\r\n    <div className='cssload-inner cssload-three'></div>\r\n</div>\r\n\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {registrationTC, setIsLoadingAC} from \"../../../main/m2-bll/registration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function RegistrationNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isRegistered);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.registrationPage.isLoading);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.app.error);\r\n\r\n    const checkEmail = /\\S+@\\S+\\.\\S+/\r\n    const checkPassword = /(?=.*[0-9])(?=.*[a-z])[0-9a-z]{8,}/\r\n\r\n    const formik = useFormik({validate: (values) => {\r\n            if (checkEmail.test(values.email) === false) {\r\n                return {\r\n                    email: 'Please enter your email'\r\n                }\r\n            }\r\n            if (checkPassword.test(values.password) === false) {\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n        },\r\n        onSubmit: values => {\r\n            let data = {\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n            dispatch(setIsLoadingAC(true))\r\n            dispatch(registrationTC(data))\r\n        },\r\n    });\r\n\r\n\r\n    if (isRegistered === true) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (isLoading === true ? <Preloader/>:\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign Up\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/login\"} >\r\n                                Already have an account? Sign In\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport RegisterPage from \"../../../features/f1-auth/a2-registration/RegistrationPage\";\r\nimport RegistrationNew from \"../../../features/f1-auth/a2-registration/RegistrationNew\";\r\n\r\n\r\nfunction RegistrationPage() {\r\n    return (\r\n        <RegistrationNew/>\r\n    );\r\n}\r\n\r\nexport default RegistrationPage;","import axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n\r\n// api\r\nexport const passwordRecoveryApi = {\r\n    forgot(data:dataType) {\r\n        const promise = instance.post('/auth/forgot',data );\r\n        return promise;\r\n    },\r\n    setNewPassword(newPasswordData:newPasswordDataType) {\r\n        const promise = instance.post('/auth/set-new-password',newPasswordData);\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport type dataType = {\r\n    email: string\r\n    from: string\r\n    message: any\r\n}\r\nexport type newPasswordDataType = {\r\n    password:string\r\n    resetPasswordToken:string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi} from \"../m3-dal/password-recovery-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    loading: false,\r\n    response: null\r\n}\r\n\r\nexport const passwordResetReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-RESET-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const setLoadingAC = (loading: boolean) => ({type: 'LOADING', loading} as const)\r\nexport const setResponseAC = (response: ResponseType) => ({type: 'SET-PASS-RESET-RESPONSE', response} as const)\r\n\r\nexport const resetPasswordTC = (email: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    let data = {\r\n        email: email,\r\n        from: \"test-front-admin\",\r\n        message: `<div style = \"background-color: lime; padding: 15px\">\r\n            password recovery link:\r\n    <a href='http://localhost:3000/study-cards#/password-generation/$token$'>link</a>\r\n    </div>`\r\n    }\r\n    passwordRecoveryApi.forgot(data).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\n\r\nexport type setLoadingACType = ReturnType<typeof setLoadingAC>\r\nexport type setResponseACType = ReturnType<typeof setResponseAC>\r\nexport type InitialStateType = {\r\n    loading: boolean,\r\n    response: null|ResponseType\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setResponseACType\r\n\r\n\r\ntype ResponseType = {\r\n    info: string\r\n    success: boolean\r\n    answer: boolean\r\n    html: boolean\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\n\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {resetPasswordTC} from \"../../../main/m2-bll/password-reset-reducer\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ResetPasswordNew() {\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    let loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email: 'Please enter your new email'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(resetPasswordTC(values.email));\r\n        },\r\n    });\r\n\r\n\r\n    return (loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Email for password recovery\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                   Send\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport ResetPassword from \"../../../features/f1-auth/a3-password_recovery/ResetPassword\";\r\nimport ResetPasswordNew from \"../../../features/f1-auth/a3-password_recovery/ResetPassword-New\";\r\n\r\n\r\nfunction PasswordResetPage() {\r\n    return <ResetPasswordNew/>\r\n}\r\n\r\nexport default PasswordResetPage;","import {Dispatch} from \"redux\";\r\nimport {passwordRecoveryApi, newPasswordDataType} from \"../m3-dal/password-recovery-api\";\r\nimport {setLoadingAC, setLoadingACType} from \"./password-reset-reducer\";\r\n\r\n\r\nconst initialState:InitialStateType =\r\n    {\r\n        loading: false,\r\n        response: null\r\n    }\r\nexport const passwordGenerationReducer = (state = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case \"SET-PASS-GENERATION-RESPONSE\":\r\n            return {...state, response: action.response}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const setPassGenerationResponseAC = (response: { info: string }) => ({\r\n    type: \"SET-PASS-GENERATION-RESPONSE\",\r\n    response\r\n} as const)\r\n\r\n\r\nexport const setNewPasswordTC = (newPasswordData: newPasswordDataType, history:any) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setLoadingAC(true))\r\n    passwordRecoveryApi.setNewPassword(newPasswordData).then((res: any) => {\r\n        if (res.status === 200) {\r\n            dispatch(setPassGenerationResponseAC(res.data))\r\n            dispatch(setLoadingAC(false))\r\n            alert(res.data.info)\r\n            history.push('/login/')\r\n        }\r\n    }).catch(reason => {\r\n        alert(reason)\r\n        dispatch(setLoadingAC(false))\r\n    })\r\n}\r\n\r\nexport type setPassGenerationResponseACType = ReturnType<typeof setPassGenerationResponseAC>\r\nexport type InitialStateType =    {\r\n    loading: boolean\r\n    response: { info: string } | null\r\n}\r\ntype ActionsType =\r\n    | setLoadingACType\r\n    | setPassGenerationResponseACType","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {useHistory, useParams} from \"react-router\";\r\nimport {InitialStateType, setNewPasswordTC} from \"../../../main/m2-bll/password-gereration-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function GenerateNewPasswordNew() {\r\n    let state = useSelector<AppRootStateType, InitialStateType>(state => state.passwordGenerationPage)\r\n\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const history = useHistory()\r\n    let dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your new password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(setNewPasswordTC({password: values.password, resetPasswordToken: id}, history));\r\n        },\r\n    });\r\n\r\n\r\n    return (state.loading ? <Preloader/> :\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    New password\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"New password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Set new password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport GenerateNewPassword from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword\";\r\nimport GenerateNewPasswordNew from \"../../../features/f1-auth/a3-password_recovery/GenerateNewPassword-New\";\r\n\r\nfunction PasswordGenerationPage() {\r\n    return <GenerateNewPasswordNew/>\r\n}\r\n\r\nexport default PasswordGenerationPage;","import axios from 'axios'\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        const promise = instance.post('auth/login', data);\r\n        return promise;\r\n    },\r\n    logout() {\r\n        const promise = instance.delete('auth/me');\r\n        return promise;\r\n    },\r\n    authMe() {\r\n        return instance.post('auth/me', {});\r\n    },\r\n    profileUpdatePhoto(data:profileUpdatePhoto) {\r\n        return instance.put('auth/me', {name:data.name,avatar:data.avatar});\r\n    }\r\n}\r\n\r\n// types\r\nexport type LoginParamsType = {\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string;\r\n}\r\nexport type profileUpdatePhoto = {\r\n    name:string\r\n    avatar:string|File\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, LoginParamsType} from \"../m3-dal/login-api\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nexport type userDate = {\r\n    avatar: string ,\r\n    created:  string | null,\r\n    email:  string | null,\r\n    isAdmin: boolean | null\r\n    name:  string ,\r\n    publicCardPacksCount: string | null,\r\n    rememberMe: boolean | null\r\n    token:  string | null,\r\n    tokenDeathTime:  string | null,\r\n    updated:  string | null,\r\n    verified: boolean | null\r\n    __v:  string | null,\r\n    _id:  string ,\r\n\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLoginIn: boolean,\r\n    UserData: userDate\r\n}\r\nconst initialState: InitialStateType = {\r\n    isLoginIn: false,\r\n    UserData: {\r\n        avatar: \"\",\r\n        created: null,\r\n        email: null,\r\n        isAdmin: false,\r\n        name: \"\",\r\n        publicCardPacksCount:null,\r\n        rememberMe: false,\r\n        token: null,\r\n        tokenDeathTime: null,\r\n        updated: null,\r\n        verified: false,\r\n        __v: null,\r\n        _id: \"\",\r\n    }\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'SET-IS-LOGIN-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-IS-LOGOUT-IN':\r\n            return {...state, isLoginIn: action.value}\r\n        case 'SET-USER-DATA-IN':\r\n            return {...state, UserData: action.Userdata}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGIN-IN', value} as const)\r\nexport const setUsersDataAC = (Userdata: userDate) =>\r\n    ({type: 'SET-USER-DATA-IN', Userdata} as const)\r\nexport const setIsLogoutInAC = (value: boolean) =>\r\n    ({type: 'SET-IS-LOGOUT-IN', value} as const)\r\nexport const setTokenAC = (token: string) =>\r\n    ({type: 'SET-IS-LOGIN-IN', token} as const)\r\n\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: ThunkDispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\n    | ReturnType<typeof setIsLogoutInAC>\r\n\r\n\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>","import {Dispatch} from \"redux\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {authAPI, profileUpdatePhoto} from \"../m3-dal/login-api\";\r\nimport {setIsLoggedInAC, setUsersDataAC} from \"./login-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isInitialized: false\r\n}\r\n\r\nexport const ProfileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case'SET-INITIALIZED':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: 'SET-INITIALIZED', isInitialized} as const)\r\n\r\n\r\n// thunks\r\nexport const isInitializedTC = () => (dispatch: ThunkDispatch) => {\r\n    authAPI.authMe().then(res => {\r\n        dispatch(setIsLoggedInAC(true))\r\n        dispatch(setInitializedAC(true))\r\n        dispatch(setUsersDataAC(res.data))\r\n    })\r\n        .catch(error => console.log(error))\r\n}\r\n\r\nexport const changeUserDataTC = (data:profileUpdatePhoto) => (dispatch: ThunkDispatch) => {\r\n    authAPI.profileUpdatePhoto(data)\r\n        .then(res => {\r\n            dispatch(setUsersDataAC(res.data.updatedUser))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch);\r\n    })\r\n}\r\n\r\n// types\r\n\r\n\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setUsersDataAC>\r\ntype InitialStateType = {\r\n    isInitialized: boolean,\r\n\r\n}\r\n\r\n\r\ntype ThunkDispatch = Dispatch<ActionsType | SetAppStatusActionType | SetAppErrorActionType>\r\n","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SimpleUpdatePackInput from \"../../../main/m1-ui/common/Modal/modalInput2\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nexport  const buttonStyle = {margin:\"5px\", width: \"20px\",height:\" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?:string, rating?:number, grade?:number, deckCover?:string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: string ) => {\r\n            return <div style={{\r\n                width: `calc(70vh/${props.Content.length})`,\r\n                height: `calc(70vh/25)`\r\n            }}>{ e.length > 11 ? e.substring(0,10) : e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.name, i.cardsCount, i.grade]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForProfile(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForProfile;","import axios from \"axios\"\r\n\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\nconst instance = axios.create({\r\n    baseURL:\"https://neko-back.herokuapp.com/2.0\",\r\n    ...settings\r\n})\r\n\r\n// api\r\n\r\n\r\nexport const TableApi = {\r\n    getPacks(page?:string | number,id?:string,pageCount?:number) {\r\n        const promise = instance.get(`cards/pack?&page=${page?page:\"\"}&pageCount=${pageCount?pageCount:\"25\"}&user_id=${ id ? id : \"\"}` );\r\n        return promise;\r\n    },\r\n    addPack(data:AddPackDataType) {\r\n        const promise = instance.post('cards/pack',data);\r\n        return promise;\r\n    },\r\n    deletePack(data:string) {\r\n        const promise = instance.delete(`cards/pack?id=${data}`);\r\n        return promise;\r\n    },\r\n    updatePack(data:UpdatePackDataType) {\r\n        const promise = instance.put('cards/pack',data );\r\n        return promise;\r\n    },\r\n    getCards(data:GetCardsDataType) {\r\n        const promise = instance.get(`cards/card?&cardsPack_id=${data.cardsPack_id}&pageCount=100` );\r\n        return promise;\r\n    },\r\n    addCard(data:AddCardDataType) {\r\n        const promise = instance.post('cards/card',data);\r\n        return promise;\r\n    },\r\n    deleteСard(data:string) {\r\n        const promise = instance.delete(`cards/card?id=${data}`);\r\n        return promise;\r\n    },\r\n    updateСard(data:UpdateCardDataType) {\r\n        const promise = instance.put(`cards/card`,data);\r\n        return promise;\r\n    },\r\n    gradeСard(data:GradeCardDataType) {\r\n        const promise = instance.put(`cards/grade`,data);\r\n        return promise;\r\n    },\r\n}\r\nexport type AddPackDataType = {\r\n    cardsPack: {\r\n        name?:string\r\n        path?:string\r\n        grade?:number\r\n        shots?:number\r\n        rating?:number\r\n        deckCover?:string\r\n        private?:false\r\n        type?:string\r\n    }\r\n}\r\nexport type UpdatePackDataType = {\r\n    cardsPack: {\r\n        _id:string\r\n        name?:string\r\n        path?:string\r\n        grade?:number\r\n        shots?:number\r\n        rating?:number\r\n        deckCover?:string\r\n        private?:false\r\n        type?:string\r\n    }\r\n}\r\nexport type GetCardsDataType = {\r\n    cardsPack_id: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateCardDataType = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        comments?: string\r\n    }\r\n    packId:string\r\n\r\n}\r\nexport type DeleteCardDataType = {\r\n    cardId: string\r\n    packId: string\r\n}\r\n\r\nexport type GradeCardDataType = {\r\n    grade:number\r\n    card_id:string\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    AddCardDataType,\r\n    AddPackDataType, DeleteCardDataType,\r\n    GetCardsDataType, GradeCardDataType,\r\n    TableApi,\r\n    UpdateCardDataType,\r\n    UpdatePackDataType\r\n} from \"../m3-dal/tableApi\";\r\nimport {SetAppErrorActionType, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {handleServerNetworkError} from \"../m1-ui/utils/error-utils\";\r\n\r\nexport type PaginatorType = {\r\n    packsCount: number\r\n    startPage: number\r\n    endPage: number\r\n    currentPage: number\r\n}\r\ntype StateType = {\r\n    cards: any\r\n    allPacks: any\r\n    myPacks: any\r\n    isLoading: boolean\r\n    paginator: PaginatorType\r\n}\r\n\r\nconst initialState: StateType = {\r\n    allPacks: null,\r\n    myPacks: null,\r\n    cards: null,\r\n    isLoading: false,\r\n    paginator: {\r\n        currentPage: 1,\r\n        packsCount: 1,\r\n        startPage: 1,\r\n        endPage: 5,\r\n    }\r\n\r\n}\r\n\r\nexport const tableReducer = (state = initialState, action: ActionType): StateType => {\r\n    switch (action.type) {\r\n        case 'SET-ALL-PACKS':\r\n            return {...state, allPacks: action.packs}\r\n        case 'SET-MY-PACKS':\r\n            return {...state, myPacks: action.packs}\r\n        case 'SET-IS-LOADING':\r\n            return {...state, isLoading: action.value}\r\n        case 'SET-CARDS':\r\n            return {...state, cards: action.cards}\r\n        case 'SET-COUNT': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.packsCount = action.count\r\n            return {...state, paginator: {...state.paginator, packsCount: action.count}}\r\n        }\r\n        case 'SET-START-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.startPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-END-VALUE-PR': {\r\n            let CopyState = {...state, ...state.paginator}\r\n            CopyState.paginator.endPage = action.value\r\n            return CopyState\r\n        }\r\n        case 'SET-CURRENT-PAGE': {\r\n            return {...state, paginator: {...state.paginator, currentPage: action.value}}\r\n        }\r\n        case 'FILTER-FOR SEARCH': {\r\n            debugger\r\n            let searchValue = new RegExp(action.matchValue, 'i');\r\n            let filterPacks = action.data.filter((pack) => pack.name.match(searchValue))\r\n            return {...state, allPacks: filterPacks, paginator: {...state.paginator, packsCount: filterPacks.length}}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n// thunks\r\n\r\ntype ThunkDispatch = Dispatch<ActionType | SetAppStatusActionType | SetAppErrorActionType>\r\n\r\nexport const getPacksTC = (currentPage?: string | number, id?: string,pageCount?:number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(currentPage, id,pageCount).then(res => {\r\n        dispatch(setAllPacksAC(res.data.cardPacks))\r\n        dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        // let pack = res.data.cardPacks[0]\r\n        // if (id === pack.user_id) {\r\n        //     dispatch(setMyPacksAC(res.data.cardPacks))\r\n        //     dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        // } else {\r\n        //     dispatch(setAllPacksAC(res.data.cardPacks))\r\n        //     dispatch(setPacksTotalCountAC(res.data.cardPacksTotalCount))\r\n        // }\r\n        dispatch(setIsLoadingAC(false))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const searchPacksTC = (matchValue: string) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getPacks(\"\",\"\",500).then(res => {\r\n        dispatch(filterForSearchAC(res.data.cardPacks,matchValue))\r\n        dispatch(setIsLoadingAC(false))\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const addPackTC = (data: AddPackDataType, currentPage: number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addPack(data).then(res => {\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deletePackTC = (data: string, currentPage: number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.deletePack(data).then(res => {\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const updatePackTC = (data: UpdatePackDataType, currentPage: number) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updatePack(data).then(res => {\r\n        debugger\r\n        TableApi.getPacks(currentPage).then(res => {\r\n            debugger\r\n            dispatch(setAllPacksAC(res.data.cardPacks))\r\n            dispatch(setIsLoadingAC(false))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\n\r\n\r\nexport const getCardsTC = (data: GetCardsDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.getCards(data)\r\n        .then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n        handleServerNetworkError(error, dispatch)\r\n    })\r\n}\r\nexport const deleteCardTC = (data: DeleteCardDataType) => (dispatch: ThunkDispatch) => {\r\n    debugger\r\n    setIsLoadingAC(true)\r\n    TableApi.deleteСard(data.cardId).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const updateCardTC = (data: UpdateCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.updateСard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.packId}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\nexport const addCardTC = (data: AddCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.addCard(data).then(res => {\r\n        TableApi.getCards({cardsPack_id: data.card.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\nexport const gradeCardTC = (data: GradeCardDataType) => (dispatch: ThunkDispatch) => {\r\n    setIsLoadingAC(true)\r\n    TableApi.gradeСard(data).then(res => {\r\n        console.log(res)\r\n        TableApi.getCards({cardsPack_id: res.data.updatedGrade.cardsPack_id}).then(res => {\r\n            dispatch(setIsLoadingAC(false))\r\n            dispatch(setCardsAC(res.data.cards))\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        }).catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Action Creators\r\n\r\nexport const setAllPacksAC = (packs: PackType) => ({type: 'SET-ALL-PACKS', packs} as const)\r\nexport const setMyPacksAC = (packs: PackType) => ({type: 'SET-MY-PACKS', packs} as const)\r\nexport const setIsLoadingAC = (value: boolean) => ({type: 'SET-IS-LOADING', value} as const)\r\nexport const setCardsAC = (cards: CardsType) => ({type: 'SET-CARDS', cards} as const)\r\nexport const setPacksTotalCountAC = (count: number) => ({type: 'SET-COUNT', count} as const)\r\nexport const setStartPagePaginatorAC = (value: number) => ({type: 'SET-START-VALUE-PR', value} as const)\r\nexport const setEndPagePaginatorAC = (value: number) => ({type: 'SET-END-VALUE-PR', value} as const)\r\nexport const setCurrentPagerAC = (value: number) => ({type: 'SET-CURRENT-PAGE', value} as const)\r\nexport const filterForSearchAC = (data: Array<any>,matchValue:string) => ({type: 'FILTER-FOR SEARCH', data,matchValue} as const)\r\n\r\ntype filterForSearchActionType = ReturnType<typeof filterForSearchAC>\r\ntype setCardsActionType = ReturnType<typeof setCardsAC>\r\ntype setAllPacksActionType = ReturnType<typeof setAllPacksAC>\r\ntype setMyPacksActionType = ReturnType<typeof setMyPacksAC>\r\ntype setLoadingActionType = ReturnType<typeof setIsLoadingAC>\r\ntype setPacksTotalCountActionType = ReturnType<typeof setPacksTotalCountAC>\r\nexport type setStartPagePaginatorActionType = ReturnType<typeof setStartPagePaginatorAC>\r\ntype setEndPagePaginatorActionType = ReturnType<typeof setEndPagePaginatorAC>\r\ntype setCurrentPagerActionType = ReturnType<typeof setCurrentPagerAC>\r\n\r\ntype ActionType = setLoadingActionType | setAllPacksActionType | setCardsActionType | setPacksTotalCountActionType |\r\n    setStartPagePaginatorActionType | setEndPagePaginatorActionType | setCurrentPagerActionType | setMyPacksActionType |\r\n    filterForSearchActionType\r\n\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: number\r\n    deckCover: any\r\n}\r\nexport type CardsType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {changeUserDataTC, isInitializedTC} from \"../../m2-bll/profile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {userDate} from \"../../m2-bll/login-reducer\";\r\nimport style from \"./styleProfilaPage.module.css\"\r\nimport TableForProfile from \"../../../features/f2-table/a3-TableOfProfile/TableProfile\";\r\nimport {getPacksTC, PackType} from \"../../m2-bll/table-reduser\";\r\n\r\n\r\nfunction ProfilePage() {\r\n    const {name, email, avatar, publicCardPacksCount, _id} = useSelector<AppRootStateType, userDate>((state) => state.auth.UserData)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.allPacks);\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getPacksTC(\"\", _id))\r\n    }, [])\r\n    return (\r\n        <div className={style.MainContainer}>\r\n            <div className={style.Photo}>\r\n                <img src={avatar}/>\r\n            </div>\r\n            <div className={style.ProfileInfo}>\r\n                <div className={style.InfoItem}>Name: {name}</div>\r\n                <div className={style.InfoItem}>Email: {email} </div>\r\n                <div className={style.InfoItem}>Count of your Packs: {publicCardPacksCount} </div>\r\n                <div className={style.TableOfPacks}><TableForProfile columnsName={[\"Name\", \"Cards\", \"Grade\"]}\r\n                                                                     buttonsData={[]}\r\n                                                                     rowContent={PacksData}/></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, {useCallback} from \"react\";\r\nimport style from \"./headerNavbar.module.css\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutTC} from \"../../m2-bll/login-reducer\";\r\nimport {AppRootStateType} from \"../../m2-bll/store\";\r\nimport {useLocation} from \"react-router\";\r\n\r\nfunction HeaderNavbar() {\r\n    const location = useLocation()\r\n    const dispatch = useDispatch();\r\n    const logoutHandler = useCallback(() => {\r\n        dispatch(logoutTC())\r\n    }, [])\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n\r\n    if (isLoginIn === false && location.pathname.length !== 57) {\r\n        return <Redirect exact to={'/login'}/>\r\n    }\r\n    return (\r\n        <nav className={style.menu}>\r\n            <ul className={style.menu__list}>\r\n                {isLoginIn && <li className={style.menu__group}>\r\n\t\t\t\t</li>}\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/profile\">My Profile</NavLink></li>\r\n\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/Packs\">Packs</NavLink></li>\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/settings\">Settings</NavLink></li>\r\n                <li className={style.menu__group}>\r\n                    <NavLink className={style.menu__link} to=\"/files\">Upload Files</NavLink></li>\r\n                <button onClick={logoutHandler} className={style.menu__link_logout}>Log out</button>\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {loginTC} from \"../../../main/m2-bll/login-reducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {FormGroup} from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginNew() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType,boolean>(state => state.auth.isLoginIn);\r\n\r\n    const formik = useFormik({\r\n        validate:(values)=>{\r\n            if (!values.email){\r\n                return {\r\n                    email:'Please enter your email'\r\n                }\r\n            }\r\n            if (!values.password){\r\n                return {\r\n                    password: 'Please enter your password'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            email: 'Keizak@yandex.ru',\r\n            password:'s12s12s12',\r\n            rememberMe: false,\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        },\r\n    });\r\n\r\n    if(isLoginIn === true){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        label=\"Email\"\r\n                        margin=\"normal\"\r\n                        {...formik.getFieldProps('email')}\r\n                    />\r\n                    {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n                    <FormControlLabel\r\n                        label={'Remember me'}\r\n                        control={<Checkbox color={\"primary\"}/>}\r\n                        {...formik.getFieldProps('rememberMe')}\r\n                        checked={formik.values.rememberMe}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <NavLink to={\"/password-reset\"} >\r\n                                Forgot password?\r\n                            </NavLink>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <NavLink to={\"/registration\"}>\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </NavLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n            <ErrorSnackbar/>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport Login from \"../../../features/f1-auth/a1-login/Login\";\r\nimport LoginNew from \"../../../features/f1-auth/a1-login/LoginNew\";\r\n\r\n\r\nfunction LoginPage() {\r\n\r\n    return <LoginNew/>\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModal({ text,open, setModalOpen, onButtonClick}:{text:string,open:boolean, setModalOpen:(value:boolean)=>void, onButtonClick:(id?:string)=>void}) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data:any)=>{setModalOpen(false); onButtonClick()}\r\n    const cancel = ()=>{setModalOpen(false)}\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n\r\n            </p>\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                    YES\r\n                </Button>\r\n                <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                    NO\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={()=>setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleModalInput({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (name: string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(title)\r\n        setTitle(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [title, setTitle] = useState<string>(\"\")\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">New title:</p>\r\n            <TextField style={{width:\"100%\"}} value={title} name={\"Name\"} onChange={(event) => setTitle(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Confirm\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {Rating} from \"@material-ui/lab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            display:\"flex\",\r\n            flexDirection:\"column\",\r\n            justifyContent: \"space-around\",\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SimpleUpdatePackInput({text, open, setModalOpen, onButtonClick}:\r\n    { text: string, open: boolean, setModalOpen: (value: boolean) => void,\r\n        onButtonClick: (name: string, rating:number, grade:number, deckCover:string) => void }) {\r\n    const classes = useStyles();\r\n    let [deckCover, setDeckCover] = useState<string>(\"My deck Cover\")\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(name, rating, grade, deckCover)\r\n        setName(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [grade, setGrade] = useState<number>(0)\r\n    let [rating, setRating] = useState<number>(0)\r\n    let [name, setName] = useState<string>(\"\")\r\n    const body = (\r\n        <div  style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">\r\n                New name:\r\n            </p>\r\n            <TextField name={\"Name\"} onChange={(event) => setName(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">\r\n                Rating:\r\n            </p>\r\n            <Rating\r\n                name=\"simple-controlled\"\r\n                value={rating}\r\n                onChange={(event, newValue) => {\r\n                    if (newValue)\r\n                        setRating(newValue);\r\n                }}\r\n            />\r\n            <InputLabel id=\"demo-simple-select-label\">Grade</InputLabel>\r\n            <input value={grade} type=\"number\" onChange={event => setGrade(Number(event.currentTarget.value))}/>\r\n            <input type={\"file\"}/>\r\n          <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n              <Button size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={confirm}>\r\n                  Confirm\r\n              </Button>\r\n              <Button  size={\"small\"} style={{margin:\"5px\", height:\" 20px\"}} variant=\"contained\" color=\"primary\" onClick={cancel}>\r\n                  Cancel\r\n              </Button>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {PackType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SimpleUpdatePackInput from \"../../../main/m1-ui/common/Modal/modalInput2\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\nexport const buttonStyle = {margin: \"5px\", width: \"20px\", height: \" 20px\"}\r\n\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data: any, name?: string, rating?: number, grade?: number, deckCover?: string) => any\r\n\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\ntype RowContentPropsType = {\r\n    Data: Array<PackType> | any\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n}\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    id: string\r\n}\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<PackType> | null\r\n    buttonsData: Array<ButtonType>\r\n    rowsCount: number\r\n    currentPage:number\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n\r\n\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n\r\n    return (<div style={{\r\n        display: \"flex\", width: \"fit-content\",\r\n        height: \"fit-content\"\r\n    }}>\r\n        {props.buttonsData.map((i) => {\r\n            const onUpdateButtonClick = (name: string, rating: number, grade: number, deckCover: string) => {\r\n                if (i.onClick) {\r\n                    i.onClick(props.id, name, rating, grade, deckCover)\r\n                }\r\n            }\r\n            let onclick = i.onClick\r\n\r\n            function Handler() {\r\n                if (onclick) onclick(props.id)\r\n            }\r\n\r\n            switch (i.name) {\r\n                case \"Delete\":\r\n                    return (deleteOpen ?\r\n                            <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                         open={deleteOpen}\r\n                                         onButtonClick={Handler}\r\n                                         setModalOpen={setDeleteOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Update\":\r\n                    return (update ?\r\n                            <SimpleUpdatePackInput text={\"Do you want to update pack?\"} open={update}\r\n                                                   onButtonClick={onUpdateButtonClick}\r\n                                                   setModalOpen={setUpdateOpen}/>\r\n                            : <Button size={\"small\"}\r\n                                      style={buttonStyle}\r\n                                      variant=\"contained\" color=\"primary\"\r\n                                      onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                    )\r\n                case \"Cards\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n                case \"Play\":\r\n                    return (<Button size={\"small\"}\r\n                                    style={buttonStyle}\r\n                                    variant=\"contained\" color=\"primary\"\r\n                                    onClick={Handler}>{i.name}</Button>)\r\n            }\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((e: any) => {\r\n            return <div style={{\r\n                width: `calc(90vw/${props.Content.length})`,\r\n                height: `calc(70vh/25)`\r\n            }}>{e}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\nfunction RowContent(props: RowContentPropsType) {\r\n    let rowData = []\r\n    let date =\"\"\r\n    let MaxValue = props.rowsCount\r\n    if(props.Data){\r\n        let countRenderItem = (props.Data.length - (( props.rowsCount*props.currentPage)-props.rowsCount))\r\n        if (countRenderItem < props.rowsCount) MaxValue = countRenderItem\r\n    }\r\n    let startValue =( MaxValue * props.currentPage ) - MaxValue\r\n    let endValue = MaxValue * props.currentPage\r\n    for (let i = startValue; i < endValue; i++) {\r\n        if (props.Data) rowData.push(props.Data[i])\r\n    }\r\n    return (<div className={style.rowContent}>\r\n        {props.Data === null ? <Preloader/> :\r\n            rowData.map((i) => {\r\n                if (i.updated.length > 11 ) date = i.updated.substring(0, 10)\r\n                else date = i.updated\r\n\r\n                return <ColumnsName\r\n                    Content={[i.name, i.cardsCount, date, i.grade,\r\n                        <Buttons id={i._id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </div>)\r\n}\r\n\r\n\r\nfunction TableForPacks(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent}\r\n                            buttonsData={props.buttonsData}\r\n                            rowsCount={props.rowsCount}\r\n                            currentPage={props.currentPage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableForPacks;","import style from \"./css.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../main/m2-bll/table-reduser\";\r\nimport SimpleModal from \"../../../main/m1-ui/common/Modal/modal\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {buttonStyle} from \"../a1-TableOfPacks/TablePacks\";\r\n\r\ntype ButtonType = {\r\n    name: string\r\n    onClick?: (data:any) => any\r\n}\r\n\r\ntype ButtonsPropsType = {\r\n    buttonsData: Array<ButtonType>\r\n    cardId: string\r\n    PackId: string\r\n}\r\n\r\nfunction Buttons(props: ButtonsPropsType) {\r\n    let [deleteOpen, setDeleteOpen] = useState(false)\r\n    let [update, setUpdateOpen] = useState(false)\r\n    return (\r\n        <div style={{display:\"flex\"}}>\r\n            {props.buttonsData.map((i) => {\r\n                let onclick = i.onClick\r\n                switch (i.name) {\r\n                    case \"Delete\":\r\n                       const DeleteHandler = () => {if (onclick) onclick({cardId: props.cardId,packId: props.PackId})}\r\n                        return (<>\r\n                                <SimpleModal text={\"Do you want to delete pack?\"}\r\n                                             open={deleteOpen}\r\n                                             onButtonClick={DeleteHandler}\r\n                                             setModalOpen={setDeleteOpen}/>\r\n                                 <Button size={\"small\"}\r\n                                         style={buttonStyle}\r\n                                         variant=\"contained\"\r\n                                         color=\"primary\"\r\n                                         onClick={() => setDeleteOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                    case \"Update\":\r\n                       const UpdateHandler = (question?:string) => {if (onclick) onclick({card: {_id:props.cardId, question:question},packId:props.PackId})}\r\n                        return (<>\r\n                                <SimpleModalInput text={\"Do you want to update pack?\"}\r\n                                                  open={update}\r\n                                                  onButtonClick={UpdateHandler}\r\n                                                  setModalOpen={setUpdateOpen}/>\r\n                                <Button size={\"small\"}\r\n                                        style={buttonStyle}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={() => setUpdateOpen(true)}>{i.name}</Button>\r\n                                </>\r\n                        )\r\n                }\r\n            })}\r\n        </div>)\r\n}\r\ntype columnsNamePropsType = {\r\n    Content: Array<any>\r\n}\r\n\r\nfunction ColumnsName(props: columnsNamePropsType) {\r\n    return (<div className={style.Content}>\r\n        {props.Content.map((i: any) => {\r\n            return <div style={{width:`calc(90vw/${props.Content.length})`}}>{i}</div>\r\n        })}\r\n    </div>)\r\n}\r\n\r\ntype RowContentPropsType = {\r\n    Data: Array<CardType> | null\r\n    buttonsData: any\r\n}\r\nfunction RowContent(props: RowContentPropsType) {\r\n    return (<>\r\n        {props.Data === null ? <Preloader/> :\r\n            props.Data.map((i) => {\r\n                return <ColumnsName\r\n                    Content={[i.question, i.answer, i.grade, i.updated,i.shots,\r\n                        <Buttons cardId={i._id} PackId={i.cardsPack_id} buttonsData={props.buttonsData}/>]}/>\r\n            })}\r\n    </>)\r\n}\r\n\r\ntype TablePropsType = {\r\n    columnsName: Array<any>\r\n    rowContent: Array<CardType> | null\r\n    buttonsData: Array<ButtonType>\r\n}\r\nfunction TableForCards(props: TablePropsType) {\r\n    return (\r\n        <div className={style.Table}>\r\n            <div className={style.HeaderTable}>\r\n                <ColumnsName Content={props.columnsName}/>\r\n            </div>\r\n            <div className={style.ContentTable}>\r\n                <RowContent Data={props.rowContent} buttonsData={props.buttonsData}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TableForCards;\r\n","import React, {useState} from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function AddNewCardModal({text, open, setModalOpen, onButtonClick}: { text: string, open: boolean, setModalOpen: (value: boolean) => void, onButtonClick: (question: string, answer:string) => void }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const confirm = (data: any) => {\r\n        setModalOpen(false);\r\n        onButtonClick(question,answer)\r\n        setQuestion(\"\")\r\n        setAnswer(\"\")\r\n    }\r\n    const cancel = () => {\r\n        setModalOpen(false)\r\n    }\r\n    let [question, setQuestion] = useState<string>(\"\")\r\n    let [answer, setAnswer] = useState<string>(\"\")\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h2 id=\"simple-modal-title\">{text}</h2>\r\n            <p id=\"simple-modal-description\">Question:</p>\r\n            <TextField value={question} name={\"Name\"} onChange={(event) => setQuestion(event.currentTarget.value)}/>\r\n            <p id=\"simple-modal-description\">Answer</p>\r\n            <TextField value={answer} name={\"Name\"} onChange={(event) => setAnswer(event.currentTarget.value)}/>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={confirm}>\r\n                    Add\r\n                </Button>\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}} variant=\"contained\" color=\"primary\"\r\n                        onClick={cancel}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => setModalOpen(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardTC,\r\n    CardType,\r\n    deleteCardTC,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n    updateCardTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport TableForCards from \"./TableCards\";\r\nimport {isInitializedTC} from \"../../../main/m2-bll/profile-reducer\";\r\nimport {DeleteCardDataType, GradeCardDataType, UpdateCardDataType} from \"../../../main/m3-dal/tableApi\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport AddNewCardModal from \"../../../main/m1-ui/common/Modal/addNewCardModal\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\n\r\n\r\nfunction CardPage() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n    const addButton = (question: string, answer: string) => {\r\n        dispatch(addCardTC({card: {cardsPack_id: id, question: question, answer: answer}}))\r\n    }\r\n    const playButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const updateButton = (data: UpdateCardDataType) => {\r\n        dispatch(updateCardTC(data))\r\n    }\r\n    const deleteButton = (data: DeleteCardDataType) => {\r\n        dispatch(deleteCardTC(data))\r\n    }\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n    let [addCardModalOpen, setAddCardModalOpen] = useState<boolean>(false)\r\n    return <div>\r\n        {!CardsData ? <Preloader/> : <div>\r\n            <AddNewCardModal text={\"Do you want to create new card?\"}\r\n                             open={addCardModalOpen}\r\n                             onButtonClick={addButton}\r\n                             setModalOpen={setAddCardModalOpen}/>:\r\n            <TableForCards columnsName={[\"question\", \"answer\", \"Grade\", \"updated\", \"Shots\",\r\n                <Button size={\"small\"} style={{margin: \"5px\", height: \" 20px\"}}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => setAddCardModalOpen(true)}>Add new card</Button>]}\r\n                           rowContent={CardsData}\r\n                           buttonsData={[\r\n                               {name: \"Update\", onClick: updateButton},\r\n                               {name: \"Delete\", onClick: deleteButton},\r\n                               {name: \"Grade\", onClick: gradeButton},\r\n                               {name: \"Play\", onClick: playButton},]}/>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default CardPage;","import React from \"react\";\r\nimport CardPage from \"../../../features/f2-table/a2-TableOfCards/CardsPage\";\r\n\r\n\r\nfunction CardsPage() {\r\n\r\n    return <CardPage/>\r\n}\r\n\r\nexport default CardsPage;","import React, {useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport { setStartPagePaginatorActionType } from \"../../../m2-bll/table-reduser\";\r\n\r\ntype PaginatorPropsType ={\r\n    maxPages: number\r\n    startValue: number\r\n    endValue:number\r\n    goStart : () => void\r\n    goFinish : () => void\r\n    goPage : (value:number) => void\r\n}\r\nconst Paginator = (props:PaginatorPropsType) => {\r\n    let i =props.startValue\r\n    let buttons: Array<any> = []\r\n    for ( i;i <= props.maxPages;i++ ) {\r\n    buttons[i] = i}\r\n    return (\r\n        <div className={style.Main}>\r\n        <div className={style.Pagination}>\r\n            <button className={style.startButton} onClick={props.goStart}>Start</button>\r\n            {buttons.map((b)=>{\r\n                let goPage = props.goPage\r\n                function Handler(){goPage(b)}\r\n                if (b <= props.endValue) return <button onClick={Handler}>{b}</button>\r\n            })}\r\n            <button className={style.endButton} onClick={props.goFinish}>End</button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React, {useState} from 'react';\r\nimport InputRange, {Range} from \"react-input-range\";\r\nimport \"react-input-range/lib/css/index.css\"\r\n\r\nexport function RangeSlider() {\r\n    const [value5,setValue] = useState<any>({min:0,max:20})\r\n    return (\r\n        <InputRange\r\n            draggableTrack\r\n            maxValue={20}\r\n            minValue={0}\r\n            value={value5}\r\n            onChange={value => {console.log(value)\r\n                setValue(value)\r\n            }} />\r\n    );}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./css.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {isInitializedTC} from \"../../../main/m2-bll/profile-reducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {\r\n    addPackTC,\r\n    deletePackTC,\r\n    getPacksTC,\r\n    PackType,\r\n    PaginatorType, searchPacksTC,\r\n    setCurrentPagerAC, setEndPagePaginatorAC, setStartPagePaginatorAC,\r\n    updatePackTC\r\n} from \"../../../main/m2-bll/table-reduser\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport TableForPacks from \"./TablePacks\";\r\nimport Paginator from \"../../../main/m1-ui/common/Paginator/Paginator\";\r\nimport SimpleModalInput from \"../../../main/m1-ui/common/Modal/modalInput\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {userDate} from \"../../../main/m2-bll/login-reducer\";\r\nimport {RangeSlider} from \"../a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch\";\r\n\r\n\r\nfunction PackPage() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.table.isLoading)\r\n    const PacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.allPacks);\r\n    const myPacksData = useSelector<AppRootStateType, Array<PackType> | null>(state => state.table.myPacks);\r\n    const paginatorData = useSelector<AppRootStateType, PaginatorType>(state => state.table.paginator);\r\n    const [valueSearch, setValueSearch] = useState<string>(\"\")\r\n    const {_id} = useSelector<AppRootStateType, userDate>(state => state.auth.UserData);\r\n    const [valueRange, setValueRange] = useState<any>(0)\r\n    let maxPages = Math.ceil(paginatorData.packsCount / 25)\r\n\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getPacksTC(\"\", \"\", 1000))\r\n    }, [])\r\n    const playButton = (id: string) => {\r\n        history.push(`/play/${id}`)\r\n    }\r\n    const addButton = (name: string) => {\r\n        dispatch(addPackTC({cardsPack: {name: name}}, paginatorData.currentPage))\r\n    }\r\n    const deleteButton = (id: string) => {\r\n        dispatch(deletePackTC(id, paginatorData.currentPage))\r\n    }\r\n    const updateButton = (id: string, name?: string, rating: number = 0, grade: number = 0, deckCover: string = \"\") => {\r\n        dispatch(updatePackTC({cardsPack: {_id: id, name: name, rating: rating}}, paginatorData.currentPage))\r\n    }\r\n    const cardsButton = (id: string) => {\r\n        history.push(`/Cards/${id}`)\r\n    }\r\n    const goStart = () => {\r\n        dispatch(setCurrentPagerAC(1))\r\n        dispatch(setStartPagePaginatorAC(1))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const goFinish = () => {\r\n        dispatch(setCurrentPagerAC(maxPages))\r\n        if (maxPages < 5) return\r\n        dispatch(setStartPagePaginatorAC(maxPages - 4))\r\n        dispatch(setEndPagePaginatorAC(maxPages))\r\n    }\r\n    const searchChangeValue = (e: any) => {\r\n        setValueSearch(e.currentTarget.value)\r\n    }\r\n    const goSearch = (e: any) => {\r\n        dispatch(searchPacksTC(valueSearch))\r\n    }\r\n    const goPage = (value: number) => {\r\n        if (value === paginatorData.endPage) {\r\n            if (value === maxPages) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value))\r\n            dispatch(setEndPagePaginatorAC(value + 4))\r\n            dispatch(setCurrentPagerAC(value))\r\n            return\r\n        } else if (value === paginatorData.startPage) {\r\n            if (value === 1) {\r\n                dispatch(setCurrentPagerAC(value))\r\n                return\r\n            }\r\n            dispatch(setStartPagePaginatorAC(value - 4))\r\n            dispatch(setEndPagePaginatorAC(value))\r\n            dispatch(setCurrentPagerAC(value))\r\n            return\r\n        }\r\n        dispatch(setCurrentPagerAC(value))\r\n    }\r\n    const getAllPacks = () => {\r\n        dispatch(getPacksTC(\"\", \"\", 1000))\r\n        setValueSearch(\"\")\r\n    }\r\n    const getMyPacks = (e: any) => {\r\n        if (e.currentTarget.checked) dispatch(getPacksTC(\"\", _id, 1000))\r\n        else dispatch(getPacksTC(\"\", \"\", 1000))\r\n\r\n    }\r\n    let [addOpen, setAddModalOpen] = useState(false)\r\n    return (<div className={style.Main}>\r\n            {!PacksData && isLoading ? <Preloader/> :\r\n                <>\r\n                    <SimpleModalInput text={\"Do you want to create new pack?\"}\r\n                                      open={addOpen}\r\n                                      onButtonClick={addButton}\r\n                                      setModalOpen={setAddModalOpen}/>\r\n                    <div className={style.SearchPanel}>\r\n                        <button onClick={getAllPacks}>All Packs</button>\r\n                        <div><input value={valueSearch} onChange={searchChangeValue}/>\r\n                            <button onClick={goSearch}>Search</button>\r\n                        </div>\r\n                        <div>My Packs<input type=\"checkbox\" onChange={getMyPacks}/></div>\r\n                        <div className={style.slider}><RangeSlider/></div>\r\n\r\n                    </div>\r\n\r\n                    <TableForPacks\r\n                        columnsName={[\"Name\", \"Cards quantity\", \"Last update\", \"Grade\",\r\n                            <Button size={\"small\"}\r\n                                    style={{margin: \"5px\", height: \" 20px\"}}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => setAddModalOpen(true)}>Add new pack</Button>]}\r\n                        rowContent={PacksData}\r\n                        buttonsData={[\r\n                            {name: \"Update\", onClick: updateButton},\r\n                            {name: \"Delete\", onClick: deleteButton},\r\n                            {name: \"Cards\", onClick: cardsButton},\r\n                            {name: \"Play\", onClick: playButton},]}\r\n                        rowsCount={22}\r\n                        currentPage={paginatorData.currentPage}/>\r\n                    <Paginator maxPages={maxPages}\r\n                               endValue={paginatorData.endPage}\r\n                               startValue={paginatorData.startPage}\r\n                               goFinish={goFinish}\r\n                               goPage={goPage}\r\n                               goStart={goStart}/>\r\n                </>\r\n            }\r\n\r\n            <ErrorSnackbar/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PackPage;","import React from \"react\";\r\nimport PackPage from \"../../../features/f2-table/a1-TableOfPacks/PacksPage\";\r\n\r\n\r\n\r\n\r\nfunction PacksPage() {\r\n\r\n    return <PackPage/>\r\n}\r\n\r\nexport default PacksPage;","import React, {useEffect, useRef, useState} from 'react';\r\n\r\ninterface IFileInputProps {\r\n    fileURL: string;\r\n}\r\n\r\nconst Video: React.FC<IFileInputProps> = ({fileURL}) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n    const [duration, setDuration] = useState();\r\n    const [controls, setControls] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState();\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setDuration(videoRef && videoRef.current && videoRef.current.duration);\r\n            if (videoRef && videoRef.current && videoRef.current.currentTime === videoRef.current.duration) {\r\n                videoRef.current.currentTime = 0;\r\n                videoRef.current.play();\r\n            }\r\n            setCurrentTime(videoRef && videoRef.current && videoRef.current.currentTime);\r\n        }, 300);\r\n    }, []);\r\n\r\n    const makeFullScreen = () => {\r\n        if (videoRef && videoRef.current)\r\n            if (videoRef.current.requestFullscreen) {\r\n                videoRef.current.requestFullscreen();\r\n            } else {\r\n                console.log(\"Fullscreen API is not supported\");\r\n            }\r\n    };\r\n\r\n    // videoRef.current!.height\r\n\r\n    const play = () => videoRef && videoRef.current && videoRef.current.play();\r\n    const pause = () => videoRef && videoRef.current && videoRef.current.pause();\r\n    const volumeUp = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume < 0.9) videoRef.current.volume += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 1);\r\n    };\r\n    const volumeDown = () => {\r\n        if (videoRef && videoRef.current && videoRef.current.volume > 0.1) videoRef.current.volume -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.volume = 0);\r\n    };\r\n    const currentTimeUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime < videoRef.current.duration - 0.3) videoRef.current.currentTime += 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = videoRef.current.duration);\r\n    };\r\n    const currentTimeDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.currentTime > 0.3) videoRef.current.currentTime -= 0.3;\r\n        else videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const playbackRateUp = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate < 100) videoRef.current.playbackRate += 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 100);\r\n    };\r\n    const playbackRateDown = () => {\r\n        if (videoRef && videoRef.current\r\n            && videoRef.current.playbackRate > 0.2) videoRef.current.playbackRate -= 0.1;\r\n        else videoRef && videoRef.current && (videoRef.current.playbackRate = 0.2);\r\n    };\r\n    const stop = () => {\r\n        videoRef && videoRef.current && videoRef.current.pause();\r\n        videoRef && videoRef.current && (videoRef.current.currentTime = 0);\r\n    };\r\n    const width100 = () => {\r\n        videoRef && videoRef.current && (videoRef.current.width = 100);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}\r\n        >\r\n            Video\r\n            <label>\r\n                controls\r\n                <input type={'checkbox'} checked={controls} onChange={e => setControls(e.currentTarget.checked)}/>\r\n            </label>\r\n            <video\r\n                src={fileURL}\r\n                width={'300px'}\r\n                controls={controls}\r\n                ref={videoRef}\r\n            />\r\n            <div>\r\n                <button onClick={play}>play</button>\r\n                <button onClick={pause}>pause</button>\r\n                <button onClick={makeFullScreen}>makeFullScreen</button>\r\n                <button onClick={volumeUp}>volumeUp</button>\r\n                <button onClick={volumeDown}>volumeDown</button>\r\n                <button onClick={currentTimeUp}>currentTimeUp</button>\r\n                <button onClick={currentTimeDown}>currentTimeDown</button>\r\n                <button onClick={stop}>stop</button>\r\n                <button onClick={playbackRateUp}>playbackRateUp</button>\r\n                <button onClick={playbackRateDown}>playbackRateDown</button>\r\n                <button onClick={width100}>width100</button>\r\n            </div>\r\n            duration: {duration} currentTime: {currentTime}\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <iframe\r\n                width=\"560\"\r\n                height=\"315\"\r\n                src=\"https://www.youtube.com/embed/1P2ov_oidRQ\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Video;","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport Video from \"./Video\";\r\nimport {getFile, writeFile} from \"./getFile\";\r\n\r\ninterface IFileInputProps {\r\n\r\n}\r\n\r\nconst Files: React.FC<IFileInputProps> = () => {\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [code, setCode] = useState(false);\r\n    const [base64, setBase64] = useState(true); // base64 - true, text - false\r\n    const [text, setText] = useState('');\r\n    const [file, setFile] = useState();\r\n    const [fileURL, setFileURL] = useState();\r\n    const [file64, setFile64] = useState();\r\n    const [fileData, setFileData] = useState();\r\n\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // e.preventDefault();\r\n        const reader = new FileReader();\r\n        const formData = new FormData(); // for send to back\r\n\r\n        const newFile = e.target.files && e.target.files[0];\r\n\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            formData.append('myFile', newFile, newFile.name);\r\n            setFileData(formData);\r\n\r\n            if (code) { // reader\r\n                reader.onloadend = () => {\r\n                    setFile64(reader.result);\r\n                };\r\n\r\n                if (base64) reader.readAsDataURL(newFile);\r\n                else reader.readAsText(newFile);\r\n            }\r\n        }\r\n    };\r\n\r\n    const send = () => {\r\n        const response = axios.post('https://dry-forest-56016.herokuapp.com/file', fileData);\r\n        console.log(response)\r\n    };\r\n\r\n    const returnFileSize = (n: number) => {\r\n        if (n < 1024) {\r\n            return n + 'bytes';\r\n        } else if (n > 1024 && n < 1048576) {\r\n            return (n / 1024).toFixed(2) + 'KB';\r\n        } else if (n > 1048576) {\r\n            return (n / 1048576).toFixed(2) + 'MB';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            FileInput\r\n\r\n            <input type=\"file\" accept=\".jpg, .jpeg, .png\" multiple/>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <label>\r\n                reader\r\n                <input type={'checkbox'} checked={code} onChange={e => setCode(e.currentTarget.checked)}/>\r\n            </label>\r\n            <label>\r\n                base64\r\n                <input type={'checkbox'} checked={base64} onChange={e => setBase64(e.currentTarget.checked)}/>\r\n            </label>\r\n\r\n            <img src={file64} alt={'file'} width={'300px'}/>\r\n            <div>name: {file && file.name}</div>\r\n            <div>lastModified: {file && file.lastModified}</div>\r\n            <div>size: {file && returnFileSize(file.size)}</div>\r\n            <div>type: {file && file.type}</div>\r\n\r\n            <input\r\n                ref={inRef}\r\n                type={'file'}\r\n                style={{display: 'none'}}\r\n                onChange={upload}\r\n            />\r\n            <button onClick={() => inRef && inRef.current && inRef.current.click()}>add</button>\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <textarea value={text} onChange={e => setText(e.currentTarget.value)}/>\r\n            <pre>{file64}</pre>\r\n            <div>\r\n                <button onClick={() => writeFile('Text.txt', text + `\\r\\n` + file64)}>save</button>\r\n                <button onClick={send}>send</button>\r\n                <button onClick={() => getFile(\"https://dry-forest-56016.herokuapp.com\" + 'file', 'newFile.jpg')}>get</button>\r\n            </div>\r\n\r\n            <hr style={{width: '100%'}}/>\r\n\r\n            <Video fileURL={fileURL}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Files;","import axios from 'axios';\r\n\r\nexport const getFile = (url: string, fileName: string) => {\r\n    // запросить файл\r\n    axios.get(url, {responseType: 'blob'}) // !!! responseType: 'blob'\r\n        .then(({data}) => {\r\n            const blob = new Blob([data], {type : 'image/jpeg'});\r\n            console.log(blob)\r\n\r\n            // создать ссылку на файл\r\n            const downloadUrl = window.URL.createObjectURL(blob);\r\n\r\n            // создать тег \"ссылка\" на наш файл\r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n\r\n            // добавить атрибуты нашему тегу: загрузочный, имя файла\r\n            link.setAttribute('download', fileName);\r\n\r\n            // добавить тег в документ\r\n            document.body.appendChild(link);\r\n\r\n            // нажать на ссылку\r\n            link.click();\r\n\r\n            // удалить тег из документа\r\n            link.remove();\r\n        });\r\n};\r\n\r\nexport const writeFile = (fileName: string, value: string) => {\r\n    const link = document.createElement(\"a\");\r\n    link.href = \"data:text/plain;content-disposition=attachment;filename=file,\" + value;\r\n    link.download = fileName;\r\n    link.style.display = \"none\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n};","import React from 'react';\r\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {Button} from \"@material-ui/core\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport {CardType} from \"../../main/m2-bll/table-reduser\";\r\nimport {GradeCardDataType} from \"../../main/m3-dal/tableApi\";\r\nimport {Rating} from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 500,\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        expand: {\r\n            transform: 'rotate(0deg)',\r\n            marginLeft: 'auto',\r\n            transition: theme.transitions.create('transform', {\r\n                duration: theme.transitions.duration.shortest,\r\n            }),\r\n        },\r\n        expandOpen: {\r\n            transform: 'rotate(180deg)',\r\n        },\r\n        avatar: {\r\n            backgroundColor: red[500],\r\n        },\r\n    }),\r\n);\r\n\r\ntype PlayCardPropsType = {\r\n    cardData: CardType | undefined\r\n    setCurrentCardNumber: (currentCardNumber: number) => void\r\n    currentCardNumber: number\r\n    gradeButton: (data: GradeCardDataType) => void\r\n    totalCards: number\r\n}\r\n\r\n\r\nexport default function PlayCard(props: PlayCardPropsType) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const onGradeButtonPush = (grade: number) => {\r\n        if (props.cardData)\r\n            props.gradeButton({\r\n                grade: grade,\r\n                card_id: props.cardData._id\r\n            })\r\n        props.setCurrentCardNumber(props.currentCardNumber + 1)\r\n    }\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                title={<Rating name=\"half-rating-read-small\" defaultValue={props.cardData?.rating} precision={0.1} readOnly/>\r\n                }\r\n                subheader={<h3>Card:{props.currentCardNumber+1} from:{props.totalCards}</h3>}\r\n            />\r\n            <h3>Grade: {props.cardData?.grade}</h3>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image=\"https://pbs.twimg.com/profile_images/473506797462896640/_M0JJ0v8.png\"\r\n                title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                    <h1>{props.cardData?.question}</h1>\r\n            </CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h3\">\r\n                <h3>How good you know this question?</h3>\r\n                <h4>From 1 to 5</h4>\r\n            </Typography>\r\n            <ButtonGroup variant=\"contained\" size={\"small\"} color=\"primary\"\r\n                         aria-label=\"contained primary button group\">\r\n                <Button onClick={() => onGradeButtonPush(1)}>One</Button>\r\n                <Button onClick={() => onGradeButtonPush(2)}>Two</Button>\r\n                <Button onClick={() => onGradeButtonPush(3)}>Three</Button>\r\n                <Button onClick={() => onGradeButtonPush(4)}>Four</Button>\r\n                <Button onClick={() => onGradeButtonPush(5)}>Five</Button>\r\n            </ButtonGroup>\r\n            <CardActions disableSpacing>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: expanded,\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                    title={\"Show Answer\"}\r\n                >\r\n                    <ExpandMoreIcon/>\r\n                </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                    <Typography paragraph>Answer:</Typography>\r\n                    <Typography paragraph>\r\n                        {props.cardData?.answer}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Collapse>\r\n        </Card>)\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    CardType,\r\n    getCardsTC,\r\n    gradeCardTC,\r\n} from \"../../main/m2-bll/table-reduser\";\r\nimport {Redirect, useHistory, useParams} from 'react-router-dom'\r\nimport {AppRootStateType} from \"../../main/m2-bll/store\";\r\nimport {isInitializedTC} from \"../../main/m2-bll/profile-reducer\";\r\nimport {GradeCardDataType} from \"../../main/m3-dal/tableApi\";\r\nimport PlayCard from \"./Card\";\r\nimport {Preloader} from \"../../main/m1-ui/common/Preloader/Preloader\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nfunction Play() {\r\n    const dispatch = useDispatch();\r\n    const {id} = useParams()\r\n    const history = useHistory()\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const CardsData = useSelector<AppRootStateType, Array<CardType> | null>(state => state.table.cards);\r\n\r\n    useEffect(() => {\r\n        checkAuth(isLoginIn)\r\n        dispatch(getCardsTC({cardsPack_id: id}))\r\n    }, [])\r\n\r\n\r\n    const checkAuth = (isLoginIn: boolean) => {\r\n        if (isLoginIn === false) {\r\n            dispatch(isInitializedTC)\r\n            if (isLoginIn === false) {\r\n                return <Redirect exact to={'/login'}/>\r\n            }\r\n        }\r\n    }\r\n\r\n    const gradeButton = (data: GradeCardDataType) => {\r\n        dispatch(gradeCardTC(data))\r\n    }\r\n\r\n    const [currentCardNumber, setCurrentCardNumber] = useState<number>(0)\r\n\r\n    return <div>{\r\n\r\n        CardsData ?\r\n            CardsData.length > currentCardNumber ?\r\n                <PlayCard totalCards={CardsData.length} gradeButton={gradeButton}\r\n                          cardData={CardsData[currentCardNumber]} setCurrentCardNumber={setCurrentCardNumber}\r\n                          currentCardNumber={currentCardNumber}/> : <><h1>Pack finished</h1>\r\n                    <div><Button onClick={() => history.push(`/Cards/${CardsData[0].cardsPack_id}`)}>Return to pack</Button>\r\n                    </div>\r\n                </>\r\n            : <><h1>Pack is empty</h1> <Preloader/></>}\r\n\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Play;","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../main/m2-bll/store\";\r\nimport {useFormik} from \"formik\";\r\nimport {ErrorSnackbar} from \"../../../main/m1-ui/common/ErrorSnackbar/ErrorSnackbar\";\r\nimport {userDate} from \"../../m2-bll/login-reducer\";\r\nimport {Preloader} from \"../../../main/m1-ui/common/Preloader/Preloader\";\r\nimport {changeUserDataTC, isInitializedTC} from \"../../m2-bll/profile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RangeSlider} from \"../../../features/f2-table/a4-SearchPanel/DoubleRangeSearch/DoubleRangeSearch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        height: '15vh',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction SettingsPage() {\r\n\r\n    const classes = useStyles();\r\n    let dispatch = useDispatch()\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.passwordResetPage.loading)\r\n    const isLoginIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoginIn);\r\n    const {name,avatar} = useSelector<AppRootStateType,userDate>(state => state.auth.UserData);\r\n\r\n    const updateProfile = (name: string, newAvatar: string) => {\r\n        dispatch(changeUserDataTC({name: name, avatar: newAvatar}))\r\n    }\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            if (!values.name) {\r\n                return {\r\n                    email: 'Please enter your new name'\r\n                }\r\n            }\r\n        },\r\n        initialValues: {\r\n            name: name,\r\n            avatar: avatar,\r\n        },\r\n        onSubmit: values => {\r\n            debugger\r\n            dispatch(changeUserDataTC({name: values.name, avatar: values.avatar}))\r\n        },\r\n    });\r\n\r\n    if (isLoginIn === false) {\r\n        return <Redirect exact to={'/login'}/>\r\n    }\r\n    return (loading ? <Preloader/> :\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your name\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            autoComplete=\"name\"\r\n                            label=\"Name\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('name')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.name}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h6\">\r\n                        Change your avatar\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"avatar\"\r\n                            name=\"avatar\"\r\n                            autoComplete=\"avatar\"\r\n                            label=\"Url for your avatar\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('avatar')}\r\n                        />\r\n                        {formik.errors.name ? <div>{formik.errors.avatar}</div> : null}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Change\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n                <ErrorSnackbar/>\r\n            </Container>\r\n    );\r\n}\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\r\nimport RegistrationPage from \"./pages/RegistrationPage\";\r\nimport PasswordResetPage from \"./pages/PasswordResetPage\";\r\nimport PasswordGenerationPage from \"./pages/PasswordGenerationPage\";\r\nimport ProfilePage from \"./pages/ProfilePage\";\r\nimport HeaderNavbar from \"./header/HeaderNavbar\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport CardsPage from \"./pages/CardsPage\";\r\nimport PacksPage from \"./pages/PacksPage\";\r\nimport Files from \"./pages/File/Files\";\r\nimport Play from \"../../features/f3-play/Play\";\r\nimport SettingsPage from \"./pages/SettingPage\";\r\n\r\nfunction App() {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"App\">\r\n                <HeaderNavbar/>\r\n                <>\r\n                    <Switch>\r\n                        <Route path={\"/login\"} render={() => (<LoginPage/>)}/>\r\n                        <Route path=\"/registration\" render={() => (<RegistrationPage/>)}/>\r\n                        <Route path=\"/settings\" render={() => (<SettingsPage/>)}/>\r\n                        <Route path=\"/password-reset\" render={() => (<PasswordResetPage/>)}/>}\r\n                        <Route path=\"/password-generation/:id\" render={() => (<PasswordGenerationPage/>)}/>\r\n                        <Route path=\"/password-generation\"\r\n                               render={() => (<h1>We send to your mail link for password change. Use it!</h1>)}/>\r\n                        <Route path=\"/profile\" render={() => (<ProfilePage/>)}/>\r\n                        <Route path=\"/Cards/:id\" render={() => (<CardsPage/>)}/>\r\n                        <Route path=\"/Packs\" render={() => (<PacksPage/>)}/>\r\n                        <Route path=\"/files\" render={() => (<Files/>)}/>\r\n                        <Route path=\"/play/:id\" render={() => (<Play/>)}/>\r\n                    </Switch>\r\n                </>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer'\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {passwordResetReducer} from \"./password-reset-reducer\";\r\nimport {passwordGenerationReducer} from \"./password-gereration-reducer\";\r\nimport {authReducer} from \"./login-reducer\";\r\nimport {ProfileReducer} from \"./profile-reducer\";\r\nimport {tableReducer} from \"./table-reduser\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    registrationPage: registrationReducer,\r\n    passwordResetPage: passwordResetReducer,\r\n    passwordGenerationPage: passwordGenerationReducer,\r\n    profilePage: ProfileReducer,\r\n    auth:authReducer,\r\n    table:tableReducer,\r\n\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/m1-ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/m2-bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"headerNavbar_menu__1T5wg\",\"menu__link\":\"headerNavbar_menu__link__1JKf_\",\"menu__link_logout\":\"headerNavbar_menu__link_logout__2TVLw\",\"menu__list\":\"headerNavbar_menu__list__2PUd2\",\"menu__group\":\"headerNavbar_menu__group__3nCIy\",\"page\":\"headerNavbar_page__1a2cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__2UCbd\",\"HeaderTable\":\"css_HeaderTable__1Uo31\",\"ContentTable\":\"css_ContentTable__3bVwC\",\"Content\":\"css_Content__1-RRD\",\"rowContent\":\"css_rowContent__9awvE\",\"button\":\"css_button__10qkP\",\"SearchPanel\":\"css_SearchPanel__219yI\",\"slider\":\"css_slider__1yYJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"styleProfilaPage_MainContainer__27n-L\",\"Photo\":\"styleProfilaPage_Photo__3grHu\",\"ProfileInfo\":\"styleProfilaPage_ProfileInfo__51Okb\",\"InfoItem\":\"styleProfilaPage_InfoItem__1I_Gf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__7m8mM\",\"HeaderTable\":\"css_HeaderTable__3gQTH\",\"ContentTable\":\"css_ContentTable__vl7qW\",\"Content\":\"css_Content__35gtw\",\"rowContent\":\"css_rowContent__iDhCD\",\"button\":\"css_button__2A31j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"css_Table__31v0b\",\"HeaderTable\":\"css_HeaderTable__1aD8H\",\"ContentTable\":\"css_ContentTable__2W9EF\",\"rowItem\":\"css_rowItem__1zkAn\",\"Content\":\"css_Content__th1Vj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"css_Main__3vS4j\",\"Pagination\":\"css_Pagination__2VPy5\",\"startButton\":\"css_startButton__28GO1\",\"endButton\":\"css_endButton__3k5qK\"};"],"sourceRoot":""}